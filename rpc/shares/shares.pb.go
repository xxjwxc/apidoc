// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.14.0
// source: shares/shares.proto

package shares

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	common "rpc/common"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetFundKlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times  []string  `protobuf:"bytes,1,rep,name=times,proto3" json:"times"`        // x轴数据
	Colorr string    `protobuf:"bytes,2,opt,name=colorr,proto3" json:"colorr"`      // 红的颜色
	Colorg string    `protobuf:"bytes,3,opt,name=colorg,proto3" json:"colorg"`      // 绿的颜色
	Gjhj   []float64 `protobuf:"fixed64,4,rep,packed,name=gjhj,proto3" json:"gjhj"` // 股基合计
	Gpx    []float64 `protobuf:"fixed64,5,rep,packed,name=gpx,proto3" json:"gpx"`   // 股票型
	Hhx    []float64 `protobuf:"fixed64,6,rep,packed,name=hhx,proto3" json:"hhx"`   // 混合型
	Zsx    []float64 `protobuf:"fixed64,7,rep,packed,name=zsx,proto3" json:"zsx"`   // 指数型
	Qdii   []float64 `protobuf:"fixed64,8,rep,packed,name=qdii,proto3" json:"qdii"` // QDII
	Lof    []float64 `protobuf:"fixed64,9,rep,packed,name=lof,proto3" json:"lof"`
	Fof    []float64 `protobuf:"fixed64,10,rep,packed,name=fof,proto3" json:"fof"`
}

func (x *GetFundKlineResp) Reset() {
	*x = GetFundKlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFundKlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFundKlineResp) ProtoMessage() {}

func (x *GetFundKlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFundKlineResp.ProtoReflect.Descriptor instead.
func (*GetFundKlineResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{0}
}

func (x *GetFundKlineResp) GetTimes() []string {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *GetFundKlineResp) GetColorr() string {
	if x != nil {
		return x.Colorr
	}
	return ""
}

func (x *GetFundKlineResp) GetColorg() string {
	if x != nil {
		return x.Colorg
	}
	return ""
}

func (x *GetFundKlineResp) GetGjhj() []float64 {
	if x != nil {
		return x.Gjhj
	}
	return nil
}

func (x *GetFundKlineResp) GetGpx() []float64 {
	if x != nil {
		return x.Gpx
	}
	return nil
}

func (x *GetFundKlineResp) GetHhx() []float64 {
	if x != nil {
		return x.Hhx
	}
	return nil
}

func (x *GetFundKlineResp) GetZsx() []float64 {
	if x != nil {
		return x.Zsx
	}
	return nil
}

func (x *GetFundKlineResp) GetQdii() []float64 {
	if x != nil {
		return x.Qdii
	}
	return nil
}

func (x *GetFundKlineResp) GetLof() []float64 {
	if x != nil {
		return x.Lof
	}
	return nil
}

func (x *GetFundKlineResp) GetFof() []float64 {
	if x != nil {
		return x.Fof
	}
	return nil
}

type EchartsKeyLineInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Data []float64 `protobuf:"fixed64,2,rep,packed,name=data,proto3" json:"data"`
}

func (x *EchartsKeyLineInfo) Reset() {
	*x = EchartsKeyLineInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchartsKeyLineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchartsKeyLineInfo) ProtoMessage() {}

func (x *EchartsKeyLineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchartsKeyLineInfo.ProtoReflect.Descriptor instead.
func (*EchartsKeyLineInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{1}
}

func (x *EchartsKeyLineInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EchartsKeyLineInfo) GetData() []float64 {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetHotHyNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names"` // 行业名字
	Days  int32    `protobuf:"varint,2,opt,name=days,proto3" json:"days"`  // 天数
}

func (x *GetHotHyNameReq) Reset() {
	*x = GetHotHyNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotHyNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotHyNameReq) ProtoMessage() {}

func (x *GetHotHyNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotHyNameReq.ProtoReflect.Descriptor instead.
func (*GetHotHyNameReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{2}
}

func (x *GetHotHyNameReq) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *GetHotHyNameReq) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GetHotHyNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*HyCodeInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 行业名字
}

func (x *GetHotHyNameResp) Reset() {
	*x = GetHotHyNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotHyNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotHyNameResp) ProtoMessage() {}

func (x *GetHotHyNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotHyNameResp.ProtoReflect.Descriptor instead.
func (*GetHotHyNameResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{3}
}

func (x *GetHotHyNameResp) GetList() []*HyCodeInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type HyCodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"` // 行业名字
	Num  int32  `protobuf:"varint,2,opt,name=num,proto3" json:"num"`  // 次数
}

func (x *HyCodeInfo) Reset() {
	*x = HyCodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyCodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyCodeInfo) ProtoMessage() {}

func (x *HyCodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyCodeInfo.ProtoReflect.Descriptor instead.
func (*HyCodeInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{4}
}

func (x *HyCodeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HyCodeInfo) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetSharesKlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`    // 股票代码
	Month int64  `protobuf:"varint,2,opt,name=month,proto3" json:"month"` // 拿几月
}

func (x *GetSharesKlineReq) Reset() {
	*x = GetSharesKlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharesKlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharesKlineReq) ProtoMessage() {}

func (x *GetSharesKlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharesKlineReq.ProtoReflect.Descriptor instead.
func (*GetSharesKlineReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{5}
}

func (x *GetSharesKlineReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetSharesKlineReq) GetMonth() int64 {
	if x != nil {
		return x.Month
	}
	return 0
}

type GetSharesKlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times     []string  `protobuf:"bytes,1,rep,name=times,proto3" json:"times"`                   // x轴数据
	KLine     []float64 `protobuf:"fixed64,2,rep,packed,name=kLine,proto3" json:"kLine"`          // 数据
	BxPercent []float64 `protobuf:"fixed64,3,rep,packed,name=bxPercent,proto3" json:"bxPercent"`  // 北上占比
	Bxjlr     []float64 `protobuf:"fixed64,4,rep,packed,name=bxjlr,proto3" json:"bxjlr"`          // 北向净流入
	Bxjlr5    []float64 `protobuf:"fixed64,5,rep,packed,name=bxjlr5,proto3" json:"bxjlr5"`        // 北向净流入
	ZlPercent []float64 `protobuf:"fixed64,6,rep,packed,name=zlPercent,proto3" json:"zlPercent"`  // 股基占比
	YhFocus   []float64 `protobuf:"fixed64,7,rep,packed,name=yhFocus,proto3" json:"yhFocus"`      // 用户情绪
	Colorr    string    `protobuf:"bytes,8,opt,name=colorr,proto3" json:"colorr"`                 // 红的颜色
	Colorg    string    `protobuf:"bytes,9,opt,name=colorg,proto3" json:"colorg"`                 // 绿的颜色
	RzPercent []float64 `protobuf:"fixed64,10,rep,packed,name=rzPercent,proto3" json:"rzPercent"` // 融资占比
	RzPrice   []float64 `protobuf:"fixed64,11,rep,packed,name=rzPrice,proto3" json:"rzPrice"`     // 融资净流入
	Qx        []float64 `protobuf:"fixed64,12,rep,packed,name=qx,proto3" json:"qx"`               // 情绪
	Gzd       []float64 `protobuf:"fixed64,13,rep,packed,name=gzd,proto3" json:"gzd"`             // 用户关注度
	Fyyx      []float64 `protobuf:"fixed64,14,rep,packed,name=fyyx,proto3" json:"fyyx"`           // 飞鹰优选
	Zljk      []float64 `protobuf:"fixed64,15,rep,packed,name=zljk,proto3" json:"zljk"`           // 主力真吸货(主力清洗之出货)
	Fx        []float64 `protobuf:"fixed64,16,rep,packed,name=fx,proto3" json:"fx"`               // 风险(>75 风险较大，<10 风险较小)
	HaveBx    bool      `protobuf:"varint,17,opt,name=haveBx,proto3" json:"haveBx"`               // 是否有北向
	HaveRz    bool      `protobuf:"varint,18,opt,name=haveRz,proto3" json:"haveRz"`               // 是否有融资
}

func (x *GetSharesKlineResp) Reset() {
	*x = GetSharesKlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharesKlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharesKlineResp) ProtoMessage() {}

func (x *GetSharesKlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharesKlineResp.ProtoReflect.Descriptor instead.
func (*GetSharesKlineResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{6}
}

func (x *GetSharesKlineResp) GetTimes() []string {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *GetSharesKlineResp) GetKLine() []float64 {
	if x != nil {
		return x.KLine
	}
	return nil
}

func (x *GetSharesKlineResp) GetBxPercent() []float64 {
	if x != nil {
		return x.BxPercent
	}
	return nil
}

func (x *GetSharesKlineResp) GetBxjlr() []float64 {
	if x != nil {
		return x.Bxjlr
	}
	return nil
}

func (x *GetSharesKlineResp) GetBxjlr5() []float64 {
	if x != nil {
		return x.Bxjlr5
	}
	return nil
}

func (x *GetSharesKlineResp) GetZlPercent() []float64 {
	if x != nil {
		return x.ZlPercent
	}
	return nil
}

func (x *GetSharesKlineResp) GetYhFocus() []float64 {
	if x != nil {
		return x.YhFocus
	}
	return nil
}

func (x *GetSharesKlineResp) GetColorr() string {
	if x != nil {
		return x.Colorr
	}
	return ""
}

func (x *GetSharesKlineResp) GetColorg() string {
	if x != nil {
		return x.Colorg
	}
	return ""
}

func (x *GetSharesKlineResp) GetRzPercent() []float64 {
	if x != nil {
		return x.RzPercent
	}
	return nil
}

func (x *GetSharesKlineResp) GetRzPrice() []float64 {
	if x != nil {
		return x.RzPrice
	}
	return nil
}

func (x *GetSharesKlineResp) GetQx() []float64 {
	if x != nil {
		return x.Qx
	}
	return nil
}

func (x *GetSharesKlineResp) GetGzd() []float64 {
	if x != nil {
		return x.Gzd
	}
	return nil
}

func (x *GetSharesKlineResp) GetFyyx() []float64 {
	if x != nil {
		return x.Fyyx
	}
	return nil
}

func (x *GetSharesKlineResp) GetZljk() []float64 {
	if x != nil {
		return x.Zljk
	}
	return nil
}

func (x *GetSharesKlineResp) GetFx() []float64 {
	if x != nil {
		return x.Fx
	}
	return nil
}

func (x *GetSharesKlineResp) GetHaveBx() bool {
	if x != nil {
		return x.HaveBx
	}
	return false
}

func (x *GetSharesKlineResp) GetHaveRz() bool {
	if x != nil {
		return x.HaveRz
	}
	return false
}

// 估值及pe
type GZPeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times []string  `protobuf:"bytes,1,rep,name=times,proto3" json:"times"`          // x轴数据
	KLine []float64 `protobuf:"fixed64,2,rep,packed,name=kLine,proto3" json:"kLine"` // 数据
	Pe0   []float64 `protobuf:"fixed64,3,rep,packed,name=pe0,proto3" json:"pe0"`     // pe1
	Pe1   []float64 `protobuf:"fixed64,4,rep,packed,name=pe1,proto3" json:"pe1"`     // pe2
	Pe2   []float64 `protobuf:"fixed64,5,rep,packed,name=pe2,proto3" json:"pe2"`     // pe3
	Pe3   []float64 `protobuf:"fixed64,6,rep,packed,name=pe3,proto3" json:"pe3"`     // pe4
	Pe4   []float64 `protobuf:"fixed64,7,rep,packed,name=pe4,proto3" json:"pe4"`     // pe5
	Names []string  `protobuf:"bytes,12,rep,name=names,proto3" json:"names"`         // 名字
}

func (x *GZPeResp) Reset() {
	*x = GZPeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GZPeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GZPeResp) ProtoMessage() {}

func (x *GZPeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GZPeResp.ProtoReflect.Descriptor instead.
func (*GZPeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{7}
}

func (x *GZPeResp) GetTimes() []string {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *GZPeResp) GetKLine() []float64 {
	if x != nil {
		return x.KLine
	}
	return nil
}

func (x *GZPeResp) GetPe0() []float64 {
	if x != nil {
		return x.Pe0
	}
	return nil
}

func (x *GZPeResp) GetPe1() []float64 {
	if x != nil {
		return x.Pe1
	}
	return nil
}

func (x *GZPeResp) GetPe2() []float64 {
	if x != nil {
		return x.Pe2
	}
	return nil
}

func (x *GZPeResp) GetPe3() []float64 {
	if x != nil {
		return x.Pe3
	}
	return nil
}

func (x *GZPeResp) GetPe4() []float64 {
	if x != nil {
		return x.Pe4
	}
	return nil
}

func (x *GZPeResp) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type GetHyMmaddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag  int32 `protobuf:"varint,1,opt,name=tag,proto3" json:"tag"`   // 类型 0:机构,1:北上,2:公募
	Days int64 `protobuf:"varint,2,opt,name=days,proto3" json:"days"` // 拿几天
}

func (x *GetHyMmaddReq) Reset() {
	*x = GetHyMmaddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyMmaddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyMmaddReq) ProtoMessage() {}

func (x *GetHyMmaddReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyMmaddReq.ProtoReflect.Descriptor instead.
func (*GetHyMmaddReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{8}
}

func (x *GetHyMmaddReq) GetTag() int32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *GetHyMmaddReq) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GetHyMmaddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string        `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`   // 标题
	Day0   string        `protobuf:"bytes,2,opt,name=day0,proto3" json:"day0"`     // 日期
	ThList []string      `protobuf:"bytes,3,rep,name=thList,proto3" json:"thList"` // 表名
	List   []*SharesInfo `protobuf:"bytes,4,rep,name=list,proto3" json:"list"`     // 列表
}

func (x *GetHyMmaddResp) Reset() {
	*x = GetHyMmaddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyMmaddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyMmaddResp) ProtoMessage() {}

func (x *GetHyMmaddResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyMmaddResp.ProtoReflect.Descriptor instead.
func (*GetHyMmaddResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{9}
}

func (x *GetHyMmaddResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetHyMmaddResp) GetDay0() string {
	if x != nil {
		return x.Day0
	}
	return ""
}

func (x *GetHyMmaddResp) GetThList() []string {
	if x != nil {
		return x.ThList
	}
	return nil
}

func (x *GetHyMmaddResp) GetList() []*SharesInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetMyTeamDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *GetMyTeamDetailReq) Reset() {
	*x = GetMyTeamDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTeamDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTeamDetailReq) ProtoMessage() {}

func (x *GetMyTeamDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTeamDetailReq.ProtoReflect.Descriptor instead.
func (*GetMyTeamDetailReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{10}
}

func (x *GetMyTeamDetailReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetMyTeamDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name"` // 分组名
	List []*SharesInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetMyTeamDetailResp) Reset() {
	*x = GetMyTeamDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTeamDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTeamDetailResp) ProtoMessage() {}

func (x *GetMyTeamDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTeamDetailResp.ProtoReflect.Descriptor instead.
func (*GetMyTeamDetailResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{11}
}

func (x *GetMyTeamDetailResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetMyTeamDetailResp) GetList() []*SharesInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetMyTeamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetMyTeamResp) Reset() {
	*x = GetMyTeamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTeamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTeamResp) ProtoMessage() {}

func (x *GetMyTeamResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTeamResp.ProtoReflect.Descriptor instead.
func (*GetMyTeamResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{12}
}

func (x *GetMyTeamResp) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

type GetHyRmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days int32 `protobuf:"varint,1,opt,name=days,proto3" json:"days"` // 几天
}

func (x *GetHyRmReq) Reset() {
	*x = GetHyRmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyRmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyRmReq) ProtoMessage() {}

func (x *GetHyRmReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyRmReq.ProtoReflect.Descriptor instead.
func (*GetHyRmReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{13}
}

func (x *GetHyRmReq) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GetHyRmResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*common.SimpSharInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetHyRmResp) Reset() {
	*x = GetHyRmResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyRmResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyRmResp) ProtoMessage() {}

func (x *GetHyRmResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyRmResp.ProtoReflect.Descriptor instead.
func (*GetHyRmResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{14}
}

func (x *GetHyRmResp) GetList() []*common.SimpSharInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type DailyCheckInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayStr string `protobuf:"bytes,1,opt,name=dayStr,proto3" json:"dayStr"` // 日期
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`   // 标题
	Digest string `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest"` // 简要描述
	Img    string `protobuf:"bytes,4,opt,name=img,proto3" json:"img"`       // 图片地址
	Url    string `protobuf:"bytes,5,opt,name=url,proto3" json:"url"`       // 连接地址
}

func (x *DailyCheckInfo) Reset() {
	*x = DailyCheckInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyCheckInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyCheckInfo) ProtoMessage() {}

func (x *DailyCheckInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyCheckInfo.ProtoReflect.Descriptor instead.
func (*DailyCheckInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{15}
}

func (x *DailyCheckInfo) GetDayStr() string {
	if x != nil {
		return x.DayStr
	}
	return ""
}

func (x *DailyCheckInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DailyCheckInfo) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *DailyCheckInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *DailyCheckInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetDailyCheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*DailyCheckInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 每日复盘笔记
}

func (x *GetDailyCheckResp) Reset() {
	*x = GetDailyCheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDailyCheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyCheckResp) ProtoMessage() {}

func (x *GetDailyCheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyCheckResp.ProtoReflect.Descriptor instead.
func (*GetDailyCheckResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{16}
}

func (x *GetDailyCheckResp) GetList() []*DailyCheckInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// SharesInfo 股票信息
type SharesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`             // 股票代码
	SimpleCode string   `protobuf:"bytes,2,opt,name=simpleCode,proto3" json:"simpleCode"` // 股票代码简写
	Ext        string   `protobuf:"bytes,3,opt,name=ext,proto3" json:"ext"`               // 后缀
	Name       string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`             // 股票名字
	Price      float64  `protobuf:"fixed64,5,opt,name=price,proto3" json:"price"`         // 当前价格
	SPrice     string   `protobuf:"bytes,6,opt,name=sPrice,proto3" json:"sPrice"`         // 价格简写
	Jlr        float64  `protobuf:"fixed64,7,opt,name=jlr,proto3" json:"jlr"`             // 净流入
	Percent    float64  `protobuf:"fixed64,8,opt,name=percent,proto3" json:"percent"`     // 百分比
	Color      string   `protobuf:"bytes,9,opt,name=color,proto3" json:"color"`           // 颜色
	Img        string   `protobuf:"bytes,10,opt,name=img,proto3" json:"img"`              // 图片地址
	Hy         string   `protobuf:"bytes,11,opt,name=hy,proto3" json:"hy"`                // 行业板块
	MainHy     string   `protobuf:"bytes,12,opt,name=mainHy,proto3" json:"mainHy"`        // 行业板块
	Attach     string   `protobuf:"bytes,13,opt,name=attach,proto3" json:"attach"`        // 附加
	Peg        string   `protobuf:"bytes,14,opt,name=peg,proto3" json:"peg"`              // peg信息
	Url        string   `protobuf:"bytes,15,opt,name=url,proto3" json:"url"`              // 地址
	HyDj       string   `protobuf:"bytes,16,opt,name=hyDj,proto3" json:"hyDj"`            // 行业叠加
	HyDjDoc    []string `protobuf:"bytes,26,rep,name=hyDjDoc,proto3" json:"hyDjDoc"`      // 行业叠加描述
}

func (x *SharesInfo) Reset() {
	*x = SharesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharesInfo) ProtoMessage() {}

func (x *SharesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharesInfo.ProtoReflect.Descriptor instead.
func (*SharesInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{17}
}

func (x *SharesInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SharesInfo) GetSimpleCode() string {
	if x != nil {
		return x.SimpleCode
	}
	return ""
}

func (x *SharesInfo) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *SharesInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SharesInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SharesInfo) GetSPrice() string {
	if x != nil {
		return x.SPrice
	}
	return ""
}

func (x *SharesInfo) GetJlr() float64 {
	if x != nil {
		return x.Jlr
	}
	return 0
}

func (x *SharesInfo) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *SharesInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *SharesInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *SharesInfo) GetHy() string {
	if x != nil {
		return x.Hy
	}
	return ""
}

func (x *SharesInfo) GetMainHy() string {
	if x != nil {
		return x.MainHy
	}
	return ""
}

func (x *SharesInfo) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *SharesInfo) GetPeg() string {
	if x != nil {
		return x.Peg
	}
	return ""
}

func (x *SharesInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SharesInfo) GetHyDj() string {
	if x != nil {
		return x.HyDj
	}
	return ""
}

func (x *SharesInfo) GetHyDjDoc() []string {
	if x != nil {
		return x.HyDjDoc
	}
	return nil
}

// SharesInfoDetails 股票详细信息
type SharesInfoDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`                    // 股票代码
	SimpleCode   string  `protobuf:"bytes,2,opt,name=simpleCode,proto3" json:"simpleCode"`        // 股票代码简写
	Ext          string  `protobuf:"bytes,3,opt,name=ext,proto3" json:"ext"`                      // 后缀
	Name         string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`                    // 股票名字
	Price        float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price"`                // 当前价格
	Percent      float64 `protobuf:"fixed64,6,opt,name=percent,proto3" json:"percent"`            // 百分比
	Color        string  `protobuf:"bytes,7,opt,name=color,proto3" json:"color"`                  // 颜色
	Img          string  `protobuf:"bytes,8,opt,name=img,proto3" json:"img"`                      // 图片地址
	Volume       float64 `protobuf:"fixed64,9,opt,name=volume,proto3" json:"volume"`              // 成交量（手）
	Turnover     float64 `protobuf:"fixed64,10,opt,name=turnover,proto3" json:"turnover"`         // 成交额（万）
	TurnoverRate float64 `protobuf:"fixed64,11,opt,name=turnoverRate,proto3" json:"turnoverRate"` // 换手率
	Pe           float64 `protobuf:"fixed64,12,opt,name=pe,proto3" json:"pe"`                     // 市盈率
	Pettm        float64 `protobuf:"fixed64,13,opt,name=pettm,proto3" json:"pettm"`               // 市盈率
	Pb           float64 `protobuf:"fixed64,14,opt,name=pb,proto3" json:"pb"`                     // 市净率
	Total        float64 `protobuf:"fixed64,15,opt,name=total,proto3" json:"total"`               // 流通市值
	Cap          float64 `protobuf:"fixed64,16,opt,name=cap,proto3" json:"cap"`                   // 总市值
	Zljlr        float64 `protobuf:"fixed64,17,opt,name=zljlr,proto3" json:"zljlr"`               // 主力资金净流入
	OpenPrice    float64 `protobuf:"fixed64,18,opt,name=openPrice,proto3" json:"openPrice"`       // 开盘价
	ClosePrice   float64 `protobuf:"fixed64,19,opt,name=closePrice,proto3" json:"closePrice"`     // 收盘价
	Macd         float64 `protobuf:"fixed64,20,opt,name=macd,proto3" json:"macd"`                 // macd
	Dif          float64 `protobuf:"fixed64,21,opt,name=dif,proto3" json:"dif"`                   // 快线
	Dea          float64 `protobuf:"fixed64,22,opt,name=dea,proto3" json:"dea"`                   // 慢线
	Max          float64 `protobuf:"fixed64,23,opt,name=max,proto3" json:"max"`                   // 当日最高点
	Min          float64 `protobuf:"fixed64,24,opt,name=min,proto3" json:"min"`                   // 当日最低
	Day0         int64   `protobuf:"varint,25,opt,name=day0,proto3" json:"day0"`                  // 当日0点时间戳
}

func (x *SharesInfoDetails) Reset() {
	*x = SharesInfoDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharesInfoDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharesInfoDetails) ProtoMessage() {}

func (x *SharesInfoDetails) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharesInfoDetails.ProtoReflect.Descriptor instead.
func (*SharesInfoDetails) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{18}
}

func (x *SharesInfoDetails) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SharesInfoDetails) GetSimpleCode() string {
	if x != nil {
		return x.SimpleCode
	}
	return ""
}

func (x *SharesInfoDetails) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *SharesInfoDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SharesInfoDetails) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SharesInfoDetails) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *SharesInfoDetails) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *SharesInfoDetails) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *SharesInfoDetails) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *SharesInfoDetails) GetTurnover() float64 {
	if x != nil {
		return x.Turnover
	}
	return 0
}

func (x *SharesInfoDetails) GetTurnoverRate() float64 {
	if x != nil {
		return x.TurnoverRate
	}
	return 0
}

func (x *SharesInfoDetails) GetPe() float64 {
	if x != nil {
		return x.Pe
	}
	return 0
}

func (x *SharesInfoDetails) GetPettm() float64 {
	if x != nil {
		return x.Pettm
	}
	return 0
}

func (x *SharesInfoDetails) GetPb() float64 {
	if x != nil {
		return x.Pb
	}
	return 0
}

func (x *SharesInfoDetails) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SharesInfoDetails) GetCap() float64 {
	if x != nil {
		return x.Cap
	}
	return 0
}

func (x *SharesInfoDetails) GetZljlr() float64 {
	if x != nil {
		return x.Zljlr
	}
	return 0
}

func (x *SharesInfoDetails) GetOpenPrice() float64 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *SharesInfoDetails) GetClosePrice() float64 {
	if x != nil {
		return x.ClosePrice
	}
	return 0
}

func (x *SharesInfoDetails) GetMacd() float64 {
	if x != nil {
		return x.Macd
	}
	return 0
}

func (x *SharesInfoDetails) GetDif() float64 {
	if x != nil {
		return x.Dif
	}
	return 0
}

func (x *SharesInfoDetails) GetDea() float64 {
	if x != nil {
		return x.Dea
	}
	return 0
}

func (x *SharesInfoDetails) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *SharesInfoDetails) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *SharesInfoDetails) GetDay0() int64 {
	if x != nil {
		return x.Day0
	}
	return 0
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name"` // 分组名
	List []*SharesInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list"` // 列表
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{19}
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetList() []*SharesInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// GetGroupResp 请求结构
type GetGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Group `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetGroupResp) Reset() {
	*x = GetGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupResp) ProtoMessage() {}

func (x *GetGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupResp.ProtoReflect.Descriptor instead.
func (*GetGroupResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{20}
}

func (x *GetGroupResp) GetList() []*Group {
	if x != nil {
		return x.List
	}
	return nil
}

// SearchReq 搜索请求
type SearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
	Tag  string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag"`   // 标记(min,daily)
}

func (x *SearchReq) Reset() {
	*x = SearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReq) ProtoMessage() {}

func (x *SearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReq.ProtoReflect.Descriptor instead.
func (*SearchReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{21}
}

func (x *SearchReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SearchReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

// SearchReq 搜索请求
type SearchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SharesInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info"` // 返回信息
}

func (x *SearchResp) Reset() {
	*x = SearchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResp) ProtoMessage() {}

func (x *SearchResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResp.ProtoReflect.Descriptor instead.
func (*SearchResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{22}
}

func (x *SearchResp) GetInfo() *SharesInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes"` // 股票代码
}

func (x *GetsReq) Reset() {
	*x = GetsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsReq) ProtoMessage() {}

func (x *GetsReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsReq.ProtoReflect.Descriptor instead.
func (*GetsReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{23}
}

func (x *GetsReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

// SimpleSharesInfo 股票信息
type SimpleSharesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`         // 股票代码
	Price   float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price"`     // 当前价格
	Percent float64 `protobuf:"fixed64,6,opt,name=percent,proto3" json:"percent"` // 百分比
	Color   string  `protobuf:"bytes,7,opt,name=color,proto3" json:"color"`       // 颜色
}

func (x *SimpleSharesInfo) Reset() {
	*x = SimpleSharesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleSharesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleSharesInfo) ProtoMessage() {}

func (x *SimpleSharesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleSharesInfo.ProtoReflect.Descriptor instead.
func (*SimpleSharesInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{24}
}

func (x *SimpleSharesInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SimpleSharesInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SimpleSharesInfo) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *SimpleSharesInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type GetsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SimpleSharesInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list"` // 列表(只返回价格相关的信息(code,price,percent,color))
}

func (x *GetsResp) Reset() {
	*x = GetsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsResp) ProtoMessage() {}

func (x *GetsResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsResp.ProtoReflect.Descriptor instead.
func (*GetsResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{25}
}

func (x *GetsResp) GetList() []*SimpleSharesInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type CodeNameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`   // 股票代码
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`   // 股票名字
	SName string `protobuf:"bytes,3,opt,name=sName,proto3" json:"sName"` // 股票简写
}

func (x *CodeNameInfo) Reset() {
	*x = CodeNameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeNameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeNameInfo) ProtoMessage() {}

func (x *CodeNameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeNameInfo.ProtoReflect.Descriptor instead.
func (*CodeNameInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{26}
}

func (x *CodeNameInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CodeNameInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CodeNameInfo) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

type GetAllCodeNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CodeNameInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 代码列表
}

func (x *GetAllCodeNameResp) Reset() {
	*x = GetAllCodeNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCodeNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCodeNameResp) ProtoMessage() {}

func (x *GetAllCodeNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCodeNameResp.ProtoReflect.Descriptor instead.
func (*GetAllCodeNameResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{27}
}

func (x *GetAllCodeNameResp) GetList() []*CodeNameInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type AddMyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`      // 股票代码
	Price  float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price"`  // 当前价格
	Kdj    bool    `protobuf:"varint,3,opt,name=kdj,proto3" json:"kdj"`       // 日线金叉提醒
	Kdj20  bool    `protobuf:"varint,4,opt,name=kdj20,proto3" json:"kdj20"`   // 20日线提醒
	Surge  bool    `protobuf:"varint,5,opt,name=surge,proto3" json:"surge"`   // 盘中急涨提醒
	Slump  bool    `protobuf:"varint,6,opt,name=slump,proto3" json:"slump"`   // 盘中急跌提醒
	Ai     bool    `protobuf:"varint,7,opt,name=ai,proto3" json:"ai"`         // AI智能提醒
	Public bool    `protobuf:"varint,8,opt,name=public,proto3" json:"public"` // 是否推荐给组织
	Up     float64 `protobuf:"fixed64,9,opt,name=up,proto3" json:"up"`        // 估价涨到
	Down   float64 `protobuf:"fixed64,10,opt,name=down,proto3" json:"down"`   // 估价跌到
	Vaild  bool    `protobuf:"varint,11,opt,name=vaild,proto3" json:"vaild"`  // 是否有效
	// 返回值用
	SimpleCode  string  `protobuf:"bytes,12,opt,name=simpleCode,proto3" json:"simpleCode"`     // 股票代码简写
	Ext         string  `protobuf:"bytes,13,opt,name=ext,proto3" json:"ext"`                   // 后缀
	Name        string  `protobuf:"bytes,14,opt,name=name,proto3" json:"name"`                 // 股票名字
	Percent     float64 `protobuf:"fixed64,15,opt,name=percent,proto3" json:"percent"`         // 百分比
	Color       string  `protobuf:"bytes,16,opt,name=color,proto3" json:"color"`               // 颜色
	UpPercent   float64 `protobuf:"fixed64,17,opt,name=upPercent,proto3" json:"upPercent"`     // 涨幅超
	UpTo        float64 `protobuf:"fixed64,18,opt,name=upTo,proto3" json:"upTo"`               // 涨幅目标提醒
	DownPercent float64 `protobuf:"fixed64,19,opt,name=downPercent,proto3" json:"downPercent"` // 跌幅超
	DownTo      float64 `protobuf:"fixed64,20,opt,name=downTo,proto3" json:"downTo"`           // 涨幅目标提醒
}

func (x *AddMyCodeReq) Reset() {
	*x = AddMyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyCodeReq) ProtoMessage() {}

func (x *AddMyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyCodeReq.ProtoReflect.Descriptor instead.
func (*AddMyCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{28}
}

func (x *AddMyCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddMyCodeReq) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddMyCodeReq) GetKdj() bool {
	if x != nil {
		return x.Kdj
	}
	return false
}

func (x *AddMyCodeReq) GetKdj20() bool {
	if x != nil {
		return x.Kdj20
	}
	return false
}

func (x *AddMyCodeReq) GetSurge() bool {
	if x != nil {
		return x.Surge
	}
	return false
}

func (x *AddMyCodeReq) GetSlump() bool {
	if x != nil {
		return x.Slump
	}
	return false
}

func (x *AddMyCodeReq) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

func (x *AddMyCodeReq) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *AddMyCodeReq) GetUp() float64 {
	if x != nil {
		return x.Up
	}
	return 0
}

func (x *AddMyCodeReq) GetDown() float64 {
	if x != nil {
		return x.Down
	}
	return 0
}

func (x *AddMyCodeReq) GetVaild() bool {
	if x != nil {
		return x.Vaild
	}
	return false
}

func (x *AddMyCodeReq) GetSimpleCode() string {
	if x != nil {
		return x.SimpleCode
	}
	return ""
}

func (x *AddMyCodeReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *AddMyCodeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddMyCodeReq) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *AddMyCodeReq) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *AddMyCodeReq) GetUpPercent() float64 {
	if x != nil {
		return x.UpPercent
	}
	return 0
}

func (x *AddMyCodeReq) GetUpTo() float64 {
	if x != nil {
		return x.UpTo
	}
	return 0
}

func (x *AddMyCodeReq) GetDownPercent() float64 {
	if x != nil {
		return x.DownPercent
	}
	return 0
}

func (x *AddMyCodeReq) GetDownTo() float64 {
	if x != nil {
		return x.DownTo
	}
	return 0
}

type AddMyCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status"` // 状态是否成功
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`        // 消息
}

func (x *AddMyCodeResp) Reset() {
	*x = AddMyCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyCodeResp) ProtoMessage() {}

func (x *AddMyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyCodeResp.ProtoReflect.Descriptor instead.
func (*AddMyCodeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{29}
}

func (x *AddMyCodeResp) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *AddMyCodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetMyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
}

func (x *GetMyCodeReq) Reset() {
	*x = GetMyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyCodeReq) ProtoMessage() {}

func (x *GetMyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyCodeReq.ProtoReflect.Descriptor instead.
func (*GetMyCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{30}
}

func (x *GetMyCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AddMyCodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`                  // 股票代码
	Price       float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price"`              // 当前价格
	Kdj         bool    `protobuf:"varint,3,opt,name=kdj,proto3" json:"kdj"`                   // 日线金叉提醒
	Surge       bool    `protobuf:"varint,4,opt,name=surge,proto3" json:"surge"`               // 盘中急涨提醒
	Slump       bool    `protobuf:"varint,5,opt,name=slump,proto3" json:"slump"`               // 盘中急跌提醒
	Ai          bool    `protobuf:"varint,6,opt,name=ai,proto3" json:"ai"`                     // AI智能提醒
	Public      bool    `protobuf:"varint,7,opt,name=public,proto3" json:"public"`             // 是否推荐给组织
	Up          float64 `protobuf:"fixed64,8,opt,name=up,proto3" json:"up"`                    // 估价涨到
	Down        float64 `protobuf:"fixed64,9,opt,name=down,proto3" json:"down"`                // 估价跌到
	UpPercent   float64 `protobuf:"fixed64,10,opt,name=upPercent,proto3" json:"upPercent"`     // 涨幅超
	DownPercent float64 `protobuf:"fixed64,11,opt,name=downPercent,proto3" json:"downPercent"` // 跌幅超
}

func (x *AddMyCodeInfo) Reset() {
	*x = AddMyCodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyCodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyCodeInfo) ProtoMessage() {}

func (x *AddMyCodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyCodeInfo.ProtoReflect.Descriptor instead.
func (*AddMyCodeInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{31}
}

func (x *AddMyCodeInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddMyCodeInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddMyCodeInfo) GetKdj() bool {
	if x != nil {
		return x.Kdj
	}
	return false
}

func (x *AddMyCodeInfo) GetSurge() bool {
	if x != nil {
		return x.Surge
	}
	return false
}

func (x *AddMyCodeInfo) GetSlump() bool {
	if x != nil {
		return x.Slump
	}
	return false
}

func (x *AddMyCodeInfo) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

func (x *AddMyCodeInfo) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *AddMyCodeInfo) GetUp() float64 {
	if x != nil {
		return x.Up
	}
	return 0
}

func (x *AddMyCodeInfo) GetDown() float64 {
	if x != nil {
		return x.Down
	}
	return 0
}

func (x *AddMyCodeInfo) GetUpPercent() float64 {
	if x != nil {
		return x.UpPercent
	}
	return 0
}

func (x *AddMyCodeInfo) GetDownPercent() float64 {
	if x != nil {
		return x.DownPercent
	}
	return 0
}

type GetMyCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AddMyCodeReq `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetMyCodeResp) Reset() {
	*x = GetMyCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyCodeResp) ProtoMessage() {}

func (x *GetMyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyCodeResp.ProtoReflect.Descriptor instead.
func (*GetMyCodeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{32}
}

func (x *GetMyCodeResp) GetList() []*AddMyCodeReq {
	if x != nil {
		return x.List
	}
	return nil
}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`             // 股票代码
	SimpleCode string  `protobuf:"bytes,2,opt,name=simpleCode,proto3" json:"simpleCode"` // 股票代码简写
	Ext        string  `protobuf:"bytes,3,opt,name=ext,proto3" json:"ext"`               // 后缀
	Name       string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`             // 股票名字
	Price      float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price"`         // 当前价格
	Key        string  `protobuf:"bytes,6,opt,name=key,proto3" json:"key"`               // 标签
	Desc       string  `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc"`             // 描述
	Percent    float64 `protobuf:"fixed64,8,opt,name=percent,proto3" json:"percent"`     // 百分比
	Color      string  `protobuf:"bytes,9,opt,name=color,proto3" json:"color"`           // 颜色
	Now        string  `protobuf:"bytes,10,opt,name=now,proto3" json:"now"`              // 当前时间
	Tag        string  `protobuf:"bytes,11,opt,name=tag,proto3" json:"tag"`              // 标记(min,daily)
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{33}
}

func (x *Msg) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Msg) GetSimpleCode() string {
	if x != nil {
		return x.SimpleCode
	}
	return ""
}

func (x *Msg) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *Msg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Msg) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Msg) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Msg) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Msg) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *Msg) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Msg) GetNow() string {
	if x != nil {
		return x.Now
	}
	return ""
}

func (x *Msg) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type GetMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Msg `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 消息列表
}

func (x *GetMsgResp) Reset() {
	*x = GetMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgResp) ProtoMessage() {}

func (x *GetMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgResp.ProtoReflect.Descriptor instead.
func (*GetMsgResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{34}
}

func (x *GetMsgResp) GetList() []*Msg {
	if x != nil {
		return x.List
	}
	return nil
}

type HaveNewMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Badge bool `protobuf:"varint,1,opt,name=badge,proto3" json:"badge"` // 是否有新消息
}

func (x *HaveNewMsgResp) Reset() {
	*x = HaveNewMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaveNewMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaveNewMsgResp) ProtoMessage() {}

func (x *HaveNewMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaveNewMsgResp.ProtoReflect.Descriptor instead.
func (*HaveNewMsgResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{35}
}

func (x *HaveNewMsgResp) GetBadge() bool {
	if x != nil {
		return x.Badge
	}
	return false
}

type DeleteMyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
}

func (x *DeleteMyCodeReq) Reset() {
	*x = DeleteMyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMyCodeReq) ProtoMessage() {}

func (x *DeleteMyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMyCodeReq.ProtoReflect.Descriptor instead.
func (*DeleteMyCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{36}
}

func (x *DeleteMyCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AddGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key"` // 分组key
}

func (x *AddGroupReq) Reset() {
	*x = AddGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupReq) ProtoMessage() {}

func (x *AddGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupReq.ProtoReflect.Descriptor instead.
func (*AddGroupReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{37}
}

func (x *AddGroupReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type CodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
	Tp   string `protobuf:"bytes,2,opt,name=tp,proto3" json:"tp"`     // 类型(k30,daily)
}

func (x *CodeReq) Reset() {
	*x = CodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeReq) ProtoMessage() {}

func (x *CodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeReq.ProtoReflect.Descriptor instead.
func (*CodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{38}
}

func (x *CodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CodeReq) GetTp() string {
	if x != nil {
		return x.Tp
	}
	return ""
}

type GetMyGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`           // 股票代码
	GroupName string   `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName"` // 分组名
	UserName  string   `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName"`   // 推荐人
	Wi        int32    `protobuf:"varint,4,opt,name=wi,proto3" json:"wi"`              // 权重
	Group     []string `protobuf:"bytes,5,rep,name=group,proto3" json:"group"`         // 我的股票列表
}

func (x *GetMyGroupResp) Reset() {
	*x = GetMyGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyGroupResp) ProtoMessage() {}

func (x *GetMyGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyGroupResp.ProtoReflect.Descriptor instead.
func (*GetMyGroupResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{39}
}

func (x *GetMyGroupResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetMyGroupResp) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GetMyGroupResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetMyGroupResp) GetWi() int32 {
	if x != nil {
		return x.Wi
	}
	return 0
}

func (x *GetMyGroupResp) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

type UpsetGroupCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`           // 股票代码
	GroupName string `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName"` // 分组名
	UserName  string `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName"`   // 推荐人
	IsAdd     bool   `protobuf:"varint,4,opt,name=isAdd,proto3" json:"isAdd"`        // 是否添加,false:删除
}

func (x *UpsetGroupCodeReq) Reset() {
	*x = UpsetGroupCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsetGroupCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsetGroupCodeReq) ProtoMessage() {}

func (x *UpsetGroupCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsetGroupCodeReq.ProtoReflect.Descriptor instead.
func (*UpsetGroupCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{40}
}

func (x *UpsetGroupCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpsetGroupCodeReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UpsetGroupCodeReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpsetGroupCodeReq) GetIsAdd() bool {
	if x != nil {
		return x.IsAdd
	}
	return false
}

// GetDayResp 请求结构
type GetDayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Group `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetDayResp) Reset() {
	*x = GetDayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDayResp) ProtoMessage() {}

func (x *GetDayResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDayResp.ProtoReflect.Descriptor instead.
func (*GetDayResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{41}
}

func (x *GetDayResp) GetList() []*Group {
	if x != nil {
		return x.List
	}
	return nil
}

// GetHyCodeResp 请求结构
type GetHyCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc  []string `protobuf:"bytes,1,rep,name=doc,proto3" json:"doc"`   // 当日净流入
	List []*Group `protobuf:"bytes,2,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetHyCodeResp) Reset() {
	*x = GetHyCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyCodeResp) ProtoMessage() {}

func (x *GetHyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyCodeResp.ProtoReflect.Descriptor instead.
func (*GetHyCodeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{42}
}

func (x *GetHyCodeResp) GetDoc() []string {
	if x != nil {
		return x.Doc
	}
	return nil
}

func (x *GetHyCodeResp) GetList() []*Group {
	if x != nil {
		return x.List
	}
	return nil
}

type HyTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*anypb.Any `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *HyTimeData) Reset() {
	*x = HyTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyTimeData) ProtoMessage() {}

func (x *HyTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyTimeData.ProtoReflect.Descriptor instead.
func (*HyTimeData) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{43}
}

func (x *HyTimeData) GetData() []*anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetHyTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int32 `protobuf:"varint,1,opt,name=num,proto3" json:"num"` // 时间
}

func (x *GetHyTimeReq) Reset() {
	*x = GetHyTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyTimeReq) ProtoMessage() {}

func (x *GetHyTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyTimeReq.ProtoReflect.Descriptor instead.
func (*GetHyTimeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{44}
}

func (x *GetHyTimeReq) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetHyTimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string        `protobuf:"bytes,1,opt,name=title,proto3" json:"title"` // 标题
	List  []string      `protobuf:"bytes,2,rep,name=list,proto3" json:"list"`   // 显示的名字
	Data  []*HyTimeData `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetHyTimeResp) Reset() {
	*x = GetHyTimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyTimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyTimeResp) ProtoMessage() {}

func (x *GetHyTimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyTimeResp.ProtoReflect.Descriptor instead.
func (*GetHyTimeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{45}
}

func (x *GetHyTimeResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetHyTimeResp) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetHyTimeResp) GetData() []*HyTimeData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_shares_shares_proto protoreflect.FileDescriptor

var file_shares_shares_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x1a, 0x1a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xda, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64,
	0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x67, 0x12,
	0x12, 0x0a, 0x04, 0x67, 0x6a, 0x68, 0x6a, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x67,
	0x6a, 0x68, 0x6a, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x70, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x03, 0x67, 0x70, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x68, 0x78, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x03, 0x68, 0x68, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x73, 0x78, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x7a, 0x73, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x71, 0x64, 0x69,
	0x69, 0x18, 0x08, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x71, 0x64, 0x69, 0x69, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x6f, 0x66, 0x18, 0x09, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x66, 0x12,
	0x10, 0x0a, 0x03, 0x66, 0x6f, 0x66, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x66, 0x6f,
	0x66, 0x22, 0x3c, 0x0a, 0x12, 0x45, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x4c,
	0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x3b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x48, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x3a, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x48, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x48, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x0a, 0x48, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x3d, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0xb6, 0x03, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x4c, 0x69, 0x6e,
	0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x6b, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x09, 0x62, 0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x78, 0x6a, 0x6c, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x62, 0x78, 0x6a,
	0x6c, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x78, 0x6a, 0x6c, 0x72, 0x35, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x06, 0x62, 0x78, 0x6a, 0x6c, 0x72, 0x35, 0x12, 0x1c, 0x0a, 0x09, 0x7a, 0x6c,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x7a,
	0x6c, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x79, 0x68, 0x46, 0x6f,
	0x63, 0x75, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x01, 0x52, 0x07, 0x79, 0x68, 0x46, 0x6f, 0x63,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x7a, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x72, 0x7a, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x7a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x07, 0x72, 0x7a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x78,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x71, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x7a,
	0x64, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x67, 0x7a, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x66, 0x79, 0x79, 0x78, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x66, 0x79, 0x79, 0x78,
	0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6c, 0x6a, 0x6b, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04,
	0x7a, 0x6c, 0x6a, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x78, 0x18, 0x10, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x02, 0x66, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x76, 0x65, 0x42, 0x78, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x76, 0x65, 0x42, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x61, 0x76, 0x65, 0x52, 0x7a, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61,
	0x76, 0x65, 0x52, 0x7a, 0x22, 0xa6, 0x01, 0x0a, 0x08, 0x47, 0x5a, 0x50, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x4c, 0x69, 0x6e, 0x65,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x6b, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x70, 0x65, 0x30, 0x18, 0x03, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x70, 0x65, 0x30, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x65, 0x31, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x70, 0x65,
	0x31, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x32, 0x18, 0x05, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03,
	0x70, 0x65, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x33, 0x18, 0x06, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x03, 0x70, 0x65, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x34, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x03, 0x70, 0x65, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x35, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x48, 0x79, 0x4d, 0x6d, 0x61, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x64, 0x61, 0x79, 0x73, 0x22, 0x7a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x48, 0x79, 0x4d, 0x6d, 0x61,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x79, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x79, 0x30,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x28, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x23, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x20, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x48, 0x79, 0x52, 0x6d, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x64, 0x61, 0x79, 0x73, 0x22, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x48, 0x79, 0x52, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x53,
	0x68, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a,
	0x0e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x61, 0x79, 0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x61, 0x79, 0x53, 0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xfa, 0x02, 0x0a, 0x0a, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6c, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x6a, 0x6c, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x68, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x67, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x70, 0x65, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x79, 0x44,
	0x6a, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x79, 0x44, 0x6a, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x79, 0x44, 0x6a, 0x44, 0x6f, 0x63, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x68, 0x79, 0x44, 0x6a, 0x44, 0x6f, 0x63, 0x22, 0xbf, 0x04, 0x0a, 0x11, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x6d, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x75, 0x72, 0x6e, 0x6f,
	0x76, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x75, 0x72, 0x6e, 0x6f,
	0x76, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x75, 0x72, 0x6e, 0x6f,
	0x76, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x02, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x74, 0x6d,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x65, 0x74, 0x74, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x70, 0x62, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x70, 0x62, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x63, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x7a, 0x6c, 0x6a, 0x6c, 0x72, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x7a, 0x6c, 0x6a, 0x6c, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x6f, 0x70, 0x65, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x63,
	0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x63, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x69, 0x66, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x69, 0x66, 0x12,
	0x10, 0x0a, 0x03, 0x64, 0x65, 0x61, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x65,
	0x61, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x6d, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x30, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x79, 0x30, 0x22, 0x43, 0x0a, 0x05, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x31,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x31, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x74, 0x61, 0x67, 0x22, 0x34, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x1f, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x10, 0x53,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x38, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x6d,
	0x70, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x4c, 0x0a, 0x0c, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xd0, 0x03, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x64, 0x6a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x64, 0x6a, 0x12, 0x14,
	0x0a, 0x05, 0x6b, 0x64, 0x6a, 0x32, 0x30, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6b,
	0x64, 0x6a, 0x32, 0x30, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x72, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x75, 0x72, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c,
	0x75, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x6c, 0x75, 0x6d, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x61, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x69,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x77, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x69, 0x6c, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x69,
	0x6c, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x70, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x70, 0x54, 0x6f, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x75, 0x70, 0x54, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f,
	0x77, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x6f, 0x77, 0x6e, 0x54, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f,
	0x77, 0x6e, 0x54, 0x6f, 0x22, 0x39, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x22, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x64, 0x6a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x64,
	0x6a, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x72, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x73, 0x75, 0x72, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c, 0x75, 0x6d, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x6c, 0x75, 0x6d, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x61, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x69, 0x12, 0x16, 0x0a,
	0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x02, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x70,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x6f,
	0x77, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xef, 0x01, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6e, 0x6f, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x2d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x26, 0x0a, 0x0e, 0x48, 0x61, 0x76, 0x65, 0x4e, 0x65, 0x77,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x22, 0x25, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x1f, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x2d, 0x0a, 0x07, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x74, 0x70, 0x22, 0x84, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x77, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x77, 0x0a, 0x11, 0x55,
	0x70, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x41, 0x64, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69,
	0x73, 0x41, 0x64, 0x64, 0x22, 0x2f, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x44, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x48, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x0a, 0x48,
	0x79, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x20, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x61, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x48, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x48, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xdb, 0x0b, 0x0a, 0x06, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x0f, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x3c, 0x0a, 0x0e, 0x55, 0x70, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x19, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x74,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a,
	0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x2b, 0x0a, 0x04, 0x47, 0x65, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f,
	0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09,
	0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0a, 0x48, 0x61, 0x76, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x73,
	0x67, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x48, 0x61, 0x76, 0x65, 0x4e, 0x65,
	0x77, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x13, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79,
	0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x12,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x12, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x2c, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x55, 0x70, 0x12, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x3b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x1a, 0x19, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x48, 0x79, 0x52, 0x6d, 0x12, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x79, 0x52, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x79, 0x52, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d,
	0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x48, 0x79, 0x4d,
	0x6d, 0x61, 0x64, 0x64, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x48, 0x79, 0x4d, 0x6d, 0x61, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x79, 0x4d, 0x6d, 0x61, 0x64, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x48, 0x79, 0x5a, 0x79,
	0x62, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x79,
	0x4d, 0x6d, 0x61, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x79, 0x4d, 0x6d, 0x61, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4b,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x47, 0x7a, 0x4b, 0x6c, 0x69,
	0x6e, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x5a, 0x50, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x48, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x74, 0x48, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x48, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shares_shares_proto_rawDescOnce sync.Once
	file_shares_shares_proto_rawDescData = file_shares_shares_proto_rawDesc
)

func file_shares_shares_proto_rawDescGZIP() []byte {
	file_shares_shares_proto_rawDescOnce.Do(func() {
		file_shares_shares_proto_rawDescData = protoimpl.X.CompressGZIP(file_shares_shares_proto_rawDescData)
	})
	return file_shares_shares_proto_rawDescData
}

var file_shares_shares_proto_msgTypes = make([]protoimpl.MessageInfo, 46)
var file_shares_shares_proto_goTypes = []interface{}{
	(*GetFundKlineResp)(nil),    // 0: shares.GetFundKlineResp
	(*EchartsKeyLineInfo)(nil),  // 1: shares.EchartsKeyLineInfo
	(*GetHotHyNameReq)(nil),     // 2: shares.GetHotHyNameReq
	(*GetHotHyNameResp)(nil),    // 3: shares.GetHotHyNameResp
	(*HyCodeInfo)(nil),          // 4: shares.HyCodeInfo
	(*GetSharesKlineReq)(nil),   // 5: shares.GetSharesKlineReq
	(*GetSharesKlineResp)(nil),  // 6: shares.GetSharesKlineResp
	(*GZPeResp)(nil),            // 7: shares.GZPeResp
	(*GetHyMmaddReq)(nil),       // 8: shares.GetHyMmaddReq
	(*GetHyMmaddResp)(nil),      // 9: shares.GetHyMmaddResp
	(*GetMyTeamDetailReq)(nil),  // 10: shares.GetMyTeamDetailReq
	(*GetMyTeamDetailResp)(nil), // 11: shares.GetMyTeamDetailResp
	(*GetMyTeamResp)(nil),       // 12: shares.GetMyTeamResp
	(*GetHyRmReq)(nil),          // 13: shares.GetHyRmReq
	(*GetHyRmResp)(nil),         // 14: shares.GetHyRmResp
	(*DailyCheckInfo)(nil),      // 15: shares.DailyCheckInfo
	(*GetDailyCheckResp)(nil),   // 16: shares.GetDailyCheckResp
	(*SharesInfo)(nil),          // 17: shares.SharesInfo
	(*SharesInfoDetails)(nil),   // 18: shares.SharesInfoDetails
	(*Group)(nil),               // 19: shares.Group
	(*GetGroupResp)(nil),        // 20: shares.GetGroupResp
	(*SearchReq)(nil),           // 21: shares.SearchReq
	(*SearchResp)(nil),          // 22: shares.SearchResp
	(*GetsReq)(nil),             // 23: shares.GetsReq
	(*SimpleSharesInfo)(nil),    // 24: shares.SimpleSharesInfo
	(*GetsResp)(nil),            // 25: shares.GetsResp
	(*CodeNameInfo)(nil),        // 26: shares.CodeNameInfo
	(*GetAllCodeNameResp)(nil),  // 27: shares.GetAllCodeNameResp
	(*AddMyCodeReq)(nil),        // 28: shares.AddMyCodeReq
	(*AddMyCodeResp)(nil),       // 29: shares.AddMyCodeResp
	(*GetMyCodeReq)(nil),        // 30: shares.GetMyCodeReq
	(*AddMyCodeInfo)(nil),       // 31: shares.AddMyCodeInfo
	(*GetMyCodeResp)(nil),       // 32: shares.GetMyCodeResp
	(*Msg)(nil),                 // 33: shares.Msg
	(*GetMsgResp)(nil),          // 34: shares.GetMsgResp
	(*HaveNewMsgResp)(nil),      // 35: shares.HaveNewMsgResp
	(*DeleteMyCodeReq)(nil),     // 36: shares.DeleteMyCodeReq
	(*AddGroupReq)(nil),         // 37: shares.AddGroupReq
	(*CodeReq)(nil),             // 38: shares.CodeReq
	(*GetMyGroupResp)(nil),      // 39: shares.GetMyGroupResp
	(*UpsetGroupCodeReq)(nil),   // 40: shares.UpsetGroupCodeReq
	(*GetDayResp)(nil),          // 41: shares.GetDayResp
	(*GetHyCodeResp)(nil),       // 42: shares.GetHyCodeResp
	(*HyTimeData)(nil),          // 43: shares.HyTimeData
	(*GetHyTimeReq)(nil),        // 44: shares.GetHyTimeReq
	(*GetHyTimeResp)(nil),       // 45: shares.GetHyTimeResp
	(*common.SimpSharInfo)(nil), // 46: common.SimpSharInfo
	(*anypb.Any)(nil),           // 47: google.protobuf.Any
	(*common.Empty)(nil),        // 48: common.Empty
}
var file_shares_shares_proto_depIdxs = []int32{
	4,  // 0: shares.GetHotHyNameResp.list:type_name -> shares.HyCodeInfo
	17, // 1: shares.GetHyMmaddResp.list:type_name -> shares.SharesInfo
	17, // 2: shares.GetMyTeamDetailResp.list:type_name -> shares.SharesInfo
	46, // 3: shares.GetHyRmResp.list:type_name -> common.SimpSharInfo
	15, // 4: shares.GetDailyCheckResp.list:type_name -> shares.DailyCheckInfo
	17, // 5: shares.Group.list:type_name -> shares.SharesInfo
	19, // 6: shares.GetGroupResp.list:type_name -> shares.Group
	17, // 7: shares.SearchResp.info:type_name -> shares.SharesInfo
	24, // 8: shares.GetsResp.list:type_name -> shares.SimpleSharesInfo
	26, // 9: shares.GetAllCodeNameResp.list:type_name -> shares.CodeNameInfo
	28, // 10: shares.GetMyCodeResp.list:type_name -> shares.AddMyCodeReq
	33, // 11: shares.GetMsgResp.list:type_name -> shares.Msg
	19, // 12: shares.GetDayResp.list:type_name -> shares.Group
	19, // 13: shares.GetHyCodeResp.list:type_name -> shares.Group
	47, // 14: shares.HyTimeData.data:type_name -> google.protobuf.Any
	43, // 15: shares.GetHyTimeResp.data:type_name -> shares.HyTimeData
	48, // 16: shares.shares.GetGroup:input_type -> common.Empty
	38, // 17: shares.shares.GetMyGroup:input_type -> shares.CodeReq
	40, // 18: shares.shares.UpsetGroupCode:input_type -> shares.UpsetGroupCodeReq
	21, // 19: shares.shares.Search:input_type -> shares.SearchReq
	23, // 20: shares.shares.Gets:input_type -> shares.GetsReq
	48, // 21: shares.shares.GetAllCodeName:input_type -> common.Empty
	28, // 22: shares.shares.AddMyCode:input_type -> shares.AddMyCodeReq
	30, // 23: shares.shares.GetMyCode:input_type -> shares.GetMyCodeReq
	48, // 24: shares.shares.GetMsg:input_type -> common.Empty
	48, // 25: shares.shares.HaveNewMsg:input_type -> common.Empty
	36, // 26: shares.shares.DeleteMyCode:input_type -> shares.DeleteMyCodeReq
	37, // 27: shares.shares.AddGroup:input_type -> shares.AddGroupReq
	48, // 28: shares.shares.GetDay:input_type -> common.Empty
	48, // 29: shares.shares.GetVip:input_type -> common.Empty
	48, // 30: shares.shares.GetFl:input_type -> common.Empty
	48, // 31: shares.shares.GetUp:input_type -> common.Empty
	48, // 32: shares.shares.GetDailyCheck:input_type -> common.Empty
	13, // 33: shares.shares.GetHyRm:input_type -> shares.GetHyRmReq
	48, // 34: shares.shares.GetMyTeam:input_type -> common.Empty
	10, // 35: shares.shares.GetMyTeamDetail:input_type -> shares.GetMyTeamDetailReq
	8,  // 36: shares.shares.GetHyMmadd:input_type -> shares.GetHyMmaddReq
	8,  // 37: shares.shares.GetHyZyb:input_type -> shares.GetHyMmaddReq
	5,  // 38: shares.shares.GetSharesKline:input_type -> shares.GetSharesKlineReq
	5,  // 39: shares.shares.GetFundKline:input_type -> shares.GetSharesKlineReq
	5,  // 40: shares.shares.GetGzKline:input_type -> shares.GetSharesKlineReq
	2,  // 41: shares.shares.GetHotHyName:input_type -> shares.GetHotHyNameReq
	20, // 42: shares.shares.GetGroup:output_type -> shares.GetGroupResp
	39, // 43: shares.shares.GetMyGroup:output_type -> shares.GetMyGroupResp
	48, // 44: shares.shares.UpsetGroupCode:output_type -> common.Empty
	22, // 45: shares.shares.Search:output_type -> shares.SearchResp
	25, // 46: shares.shares.Gets:output_type -> shares.GetsResp
	27, // 47: shares.shares.GetAllCodeName:output_type -> shares.GetAllCodeNameResp
	29, // 48: shares.shares.AddMyCode:output_type -> shares.AddMyCodeResp
	32, // 49: shares.shares.GetMyCode:output_type -> shares.GetMyCodeResp
	34, // 50: shares.shares.GetMsg:output_type -> shares.GetMsgResp
	35, // 51: shares.shares.HaveNewMsg:output_type -> shares.HaveNewMsgResp
	48, // 52: shares.shares.DeleteMyCode:output_type -> common.Empty
	48, // 53: shares.shares.AddGroup:output_type -> common.Empty
	41, // 54: shares.shares.GetDay:output_type -> shares.GetDayResp
	41, // 55: shares.shares.GetVip:output_type -> shares.GetDayResp
	41, // 56: shares.shares.GetFl:output_type -> shares.GetDayResp
	41, // 57: shares.shares.GetUp:output_type -> shares.GetDayResp
	16, // 58: shares.shares.GetDailyCheck:output_type -> shares.GetDailyCheckResp
	14, // 59: shares.shares.GetHyRm:output_type -> shares.GetHyRmResp
	12, // 60: shares.shares.GetMyTeam:output_type -> shares.GetMyTeamResp
	11, // 61: shares.shares.GetMyTeamDetail:output_type -> shares.GetMyTeamDetailResp
	9,  // 62: shares.shares.GetHyMmadd:output_type -> shares.GetHyMmaddResp
	9,  // 63: shares.shares.GetHyZyb:output_type -> shares.GetHyMmaddResp
	6,  // 64: shares.shares.GetSharesKline:output_type -> shares.GetSharesKlineResp
	0,  // 65: shares.shares.GetFundKline:output_type -> shares.GetFundKlineResp
	7,  // 66: shares.shares.GetGzKline:output_type -> shares.GZPeResp
	3,  // 67: shares.shares.GetHotHyName:output_type -> shares.GetHotHyNameResp
	42, // [42:68] is the sub-list for method output_type
	16, // [16:42] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_shares_shares_proto_init() }
func file_shares_shares_proto_init() {
	if File_shares_shares_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shares_shares_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFundKlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchartsKeyLineInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotHyNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotHyNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyCodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharesKlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharesKlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GZPeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyMmaddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyMmaddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTeamDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTeamDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTeamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyRmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyRmResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyCheckInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDailyCheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SharesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SharesInfoDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleSharesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeNameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCodeNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyCodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaveNewMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsetGroupCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyTimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shares_shares_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   46,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shares_shares_proto_goTypes,
		DependencyIndexes: file_shares_shares_proto_depIdxs,
		MessageInfos:      file_shares_shares_proto_msgTypes,
	}.Build()
	File_shares_shares_proto = out.File
	file_shares_shares_proto_rawDesc = nil
	file_shares_shares_proto_goTypes = nil
	file_shares_shares_proto_depIdxs = nil
}
