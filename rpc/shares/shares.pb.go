// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.11.4
// source: shares/shares.proto

package shares

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	common "rpc/common"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SharesInfo 股票信息
type SharesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`             // 股票代码
	SimpleCode string  `protobuf:"bytes,2,opt,name=simpleCode,proto3" json:"simpleCode"` // 股票代码简写
	Ext        string  `protobuf:"bytes,3,opt,name=ext,proto3" json:"ext"`               // 后缀
	Name       string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`             // 股票名字
	Price      float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price"`         // 当前价格
	Percent    float64 `protobuf:"fixed64,6,opt,name=percent,proto3" json:"percent"`     // 百分比
	Color      string  `protobuf:"bytes,7,opt,name=color,proto3" json:"color"`           // 颜色
	Img        string  `protobuf:"bytes,8,opt,name=img,proto3" json:"img"`               // 图片地址
}

func (x *SharesInfo) Reset() {
	*x = SharesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharesInfo) ProtoMessage() {}

func (x *SharesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharesInfo.ProtoReflect.Descriptor instead.
func (*SharesInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{0}
}

func (x *SharesInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SharesInfo) GetSimpleCode() string {
	if x != nil {
		return x.SimpleCode
	}
	return ""
}

func (x *SharesInfo) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *SharesInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SharesInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SharesInfo) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *SharesInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *SharesInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name"` // 分组名
	List []*SharesInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list"` // 列表
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{1}
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetList() []*SharesInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// GetGroupResp 请求结构
type GetGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Group `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetGroupResp) Reset() {
	*x = GetGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupResp) ProtoMessage() {}

func (x *GetGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupResp.ProtoReflect.Descriptor instead.
func (*GetGroupResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{2}
}

func (x *GetGroupResp) GetList() []*Group {
	if x != nil {
		return x.List
	}
	return nil
}

// SearchReq 搜索请求
type SearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
}

func (x *SearchReq) Reset() {
	*x = SearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReq) ProtoMessage() {}

func (x *SearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReq.ProtoReflect.Descriptor instead.
func (*SearchReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{3}
}

func (x *SearchReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// SearchReq 搜索请求
type SearchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SharesInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info"` // 返回信息
}

func (x *SearchResp) Reset() {
	*x = SearchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResp) ProtoMessage() {}

func (x *SearchResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResp.ProtoReflect.Descriptor instead.
func (*SearchResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{4}
}

func (x *SearchResp) GetInfo() *SharesInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes"` // 股票代码
}

func (x *GetsReq) Reset() {
	*x = GetsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsReq) ProtoMessage() {}

func (x *GetsReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsReq.ProtoReflect.Descriptor instead.
func (*GetsReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{5}
}

func (x *GetsReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

// SimpleSharesInfo 股票信息
type SimpleSharesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`         // 股票代码
	Price   float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price"`     // 当前价格
	Percent float64 `protobuf:"fixed64,6,opt,name=percent,proto3" json:"percent"` // 百分比
	Color   string  `protobuf:"bytes,7,opt,name=color,proto3" json:"color"`       // 颜色
}

func (x *SimpleSharesInfo) Reset() {
	*x = SimpleSharesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleSharesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleSharesInfo) ProtoMessage() {}

func (x *SimpleSharesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleSharesInfo.ProtoReflect.Descriptor instead.
func (*SimpleSharesInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{6}
}

func (x *SimpleSharesInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SimpleSharesInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SimpleSharesInfo) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *SimpleSharesInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type GetsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SimpleSharesInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list"` // 列表(只返回价格相关的信息(code,price,percent,color))
}

func (x *GetsResp) Reset() {
	*x = GetsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsResp) ProtoMessage() {}

func (x *GetsResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsResp.ProtoReflect.Descriptor instead.
func (*GetsResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{7}
}

func (x *GetsResp) GetList() []*SimpleSharesInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type CodeNameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"` // 股票名字
}

func (x *CodeNameInfo) Reset() {
	*x = CodeNameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeNameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeNameInfo) ProtoMessage() {}

func (x *CodeNameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeNameInfo.ProtoReflect.Descriptor instead.
func (*CodeNameInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{8}
}

func (x *CodeNameInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CodeNameInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetAllCodeNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CodeNameInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 代码列表
}

func (x *GetAllCodeNameResp) Reset() {
	*x = GetAllCodeNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCodeNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCodeNameResp) ProtoMessage() {}

func (x *GetAllCodeNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCodeNameResp.ProtoReflect.Descriptor instead.
func (*GetAllCodeNameResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllCodeNameResp) GetList() []*CodeNameInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type AddMyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`                 // 股票代码
	Kdj         bool    `protobuf:"varint,2,opt,name=kdj,proto3" json:"kdj"`                  // 日线金叉提醒
	Surge       bool    `protobuf:"varint,3,opt,name=surge,proto3" json:"surge"`              // 盘中急涨提醒
	Slump       bool    `protobuf:"varint,4,opt,name=slump,proto3" json:"slump"`              // 盘中急跌提醒
	Ai          bool    `protobuf:"varint,5,opt,name=ai,proto3" json:"ai"`                    // AI智能提醒
	Up          float64 `protobuf:"fixed64,6,opt,name=up,proto3" json:"up"`                   // 估价涨到
	Down        float64 `protobuf:"fixed64,7,opt,name=down,proto3" json:"down"`               // 估价跌到
	UpPercent   float64 `protobuf:"fixed64,8,opt,name=upPercent,proto3" json:"upPercent"`     // 涨幅超
	DownPercent float64 `protobuf:"fixed64,9,opt,name=downPercent,proto3" json:"downPercent"` // 跌幅超
}

func (x *AddMyCodeReq) Reset() {
	*x = AddMyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyCodeReq) ProtoMessage() {}

func (x *AddMyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyCodeReq.ProtoReflect.Descriptor instead.
func (*AddMyCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{10}
}

func (x *AddMyCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddMyCodeReq) GetKdj() bool {
	if x != nil {
		return x.Kdj
	}
	return false
}

func (x *AddMyCodeReq) GetSurge() bool {
	if x != nil {
		return x.Surge
	}
	return false
}

func (x *AddMyCodeReq) GetSlump() bool {
	if x != nil {
		return x.Slump
	}
	return false
}

func (x *AddMyCodeReq) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

func (x *AddMyCodeReq) GetUp() float64 {
	if x != nil {
		return x.Up
	}
	return 0
}

func (x *AddMyCodeReq) GetDown() float64 {
	if x != nil {
		return x.Down
	}
	return 0
}

func (x *AddMyCodeReq) GetUpPercent() float64 {
	if x != nil {
		return x.UpPercent
	}
	return 0
}

func (x *AddMyCodeReq) GetDownPercent() float64 {
	if x != nil {
		return x.DownPercent
	}
	return 0
}

type AddMyCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status"` // 状态是否成功
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`        // 消息
}

func (x *AddMyCodeResp) Reset() {
	*x = AddMyCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyCodeResp) ProtoMessage() {}

func (x *AddMyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyCodeResp.ProtoReflect.Descriptor instead.
func (*AddMyCodeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{11}
}

func (x *AddMyCodeResp) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *AddMyCodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_shares_shares_proto protoreflect.FileDescriptor

var file_shares_shares_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x1a, 0x1a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x01, 0x0a, 0x0a, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x22, 0x43, 0x0a, 0x05, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x31, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x1f, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0x34, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x26, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x1f, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x10, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x38, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x36, 0x0a, 0x0c, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd4, 0x01, 0x0a, 0x0c, 0x41,
	0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x64, 0x6a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x64,
	0x6a, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x72, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x73, 0x75, 0x72, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c, 0x75, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x6c, 0x75, 0x6d, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x61, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x69, 0x12, 0x0e, 0x0a,
	0x02, 0x75, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x75, 0x70, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x64, 0x6f, 0x77,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x70, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x22, 0x39, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0x96, 0x02, 0x0a,
	0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x1a, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2b, 0x0a,
	0x04, 0x47, 0x65, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x41, 0x64, 0x64,
	0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shares_shares_proto_rawDescOnce sync.Once
	file_shares_shares_proto_rawDescData = file_shares_shares_proto_rawDesc
)

func file_shares_shares_proto_rawDescGZIP() []byte {
	file_shares_shares_proto_rawDescOnce.Do(func() {
		file_shares_shares_proto_rawDescData = protoimpl.X.CompressGZIP(file_shares_shares_proto_rawDescData)
	})
	return file_shares_shares_proto_rawDescData
}

var file_shares_shares_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_shares_shares_proto_goTypes = []interface{}{
	(*SharesInfo)(nil),         // 0: shares.SharesInfo
	(*Group)(nil),              // 1: shares.Group
	(*GetGroupResp)(nil),       // 2: shares.GetGroupResp
	(*SearchReq)(nil),          // 3: shares.SearchReq
	(*SearchResp)(nil),         // 4: shares.SearchResp
	(*GetsReq)(nil),            // 5: shares.GetsReq
	(*SimpleSharesInfo)(nil),   // 6: shares.SimpleSharesInfo
	(*GetsResp)(nil),           // 7: shares.GetsResp
	(*CodeNameInfo)(nil),       // 8: shares.CodeNameInfo
	(*GetAllCodeNameResp)(nil), // 9: shares.GetAllCodeNameResp
	(*AddMyCodeReq)(nil),       // 10: shares.AddMyCodeReq
	(*AddMyCodeResp)(nil),      // 11: shares.AddMyCodeResp
	(*common.Empty)(nil),       // 12: common.Empty
}
var file_shares_shares_proto_depIdxs = []int32{
	0,  // 0: shares.Group.list:type_name -> shares.SharesInfo
	1,  // 1: shares.GetGroupResp.list:type_name -> shares.Group
	0,  // 2: shares.SearchResp.info:type_name -> shares.SharesInfo
	6,  // 3: shares.GetsResp.list:type_name -> shares.SimpleSharesInfo
	8,  // 4: shares.GetAllCodeNameResp.list:type_name -> shares.CodeNameInfo
	12, // 5: shares.shares.GetGroup:input_type -> common.Empty
	3,  // 6: shares.shares.Search:input_type -> shares.SearchReq
	5,  // 7: shares.shares.Gets:input_type -> shares.GetsReq
	12, // 8: shares.shares.GetAllCodeName:input_type -> common.Empty
	10, // 9: shares.shares.AddMyCode:input_type -> shares.AddMyCodeReq
	2,  // 10: shares.shares.GetGroup:output_type -> shares.GetGroupResp
	4,  // 11: shares.shares.Search:output_type -> shares.SearchResp
	7,  // 12: shares.shares.Gets:output_type -> shares.GetsResp
	9,  // 13: shares.shares.GetAllCodeName:output_type -> shares.GetAllCodeNameResp
	11, // 14: shares.shares.AddMyCode:output_type -> shares.AddMyCodeResp
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_shares_shares_proto_init() }
func file_shares_shares_proto_init() {
	if File_shares_shares_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shares_shares_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SharesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleSharesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeNameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCodeNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shares_shares_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shares_shares_proto_goTypes,
		DependencyIndexes: file_shares_shares_proto_depIdxs,
		MessageInfos:      file_shares_shares_proto_msgTypes,
	}.Build()
	File_shares_shares_proto = out.File
	file_shares_shares_proto_rawDesc = nil
	file_shares_shares_proto_goTypes = nil
	file_shares_shares_proto_depIdxs = nil
}
