// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.14.0
// source: shares/shares.proto

package shares

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	common "rpc/common"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetClmxResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*ClmxInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetClmxResp) Reset() {
	*x = GetClmxResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClmxResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClmxResp) ProtoMessage() {}

func (x *GetClmxResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClmxResp.ProtoReflect.Descriptor instead.
func (*GetClmxResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{0}
}

func (x *GetClmxResp) GetList() []*ClmxInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type ClmxInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`  //
	Doc  string `protobuf:"bytes,2,opt,name=doc,proto3" json:"doc"`    //
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`    //
	Have bool   `protobuf:"varint,4,opt,name=have,proto3" json:"have"` // 是否有权限
}

func (x *ClmxInfo) Reset() {
	*x = ClmxInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClmxInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClmxInfo) ProtoMessage() {}

func (x *ClmxInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClmxInfo.ProtoReflect.Descriptor instead.
func (*ClmxInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{1}
}

func (x *ClmxInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClmxInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *ClmxInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ClmxInfo) GetHave() bool {
	if x != nil {
		return x.Have
	}
	return false
}

type GetZybHyKlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days   int32 `protobuf:"varint,1,opt,name=days,proto3" json:"days"` // 天数
	ShowCd bool  `protobuf:"varint,2,opt,name=showCd,proto3" json:"showCd"`
}

func (x *GetZybHyKlineReq) Reset() {
	*x = GetZybHyKlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZybHyKlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZybHyKlineReq) ProtoMessage() {}

func (x *GetZybHyKlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZybHyKlineReq.ProtoReflect.Descriptor instead.
func (*GetZybHyKlineReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{2}
}

func (x *GetZybHyKlineReq) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *GetZybHyKlineReq) GetShowCd() bool {
	if x != nil {
		return x.ShowCd
	}
	return false
}

type GetZybHyKlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times   []string          `protobuf:"bytes,1,rep,name=times,proto3" json:"times"` // x轴数据
	List    []*ZybHyDailyInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list"`   // 列表
	Tags    []*TagInfo        `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags"`   // 标签
	Tags1   []*TagInfo        `protobuf:"bytes,4,rep,name=tags1,proto3" json:"tags1"` // 标签
	Cjlmin  float64           `protobuf:"fixed64,5,opt,name=cjlmin,proto3" json:"cjlmin"`
	Cjlmax  float64           `protobuf:"fixed64,6,opt,name=cjlmax,proto3" json:"cjlmax"`
	TsList1 *GetHyMmaddResp   `protobuf:"bytes,7,opt,name=tsList1,proto3" json:"tsList1"`
	TsList2 *GetHyMmaddResp   `protobuf:"bytes,8,opt,name=tsList2,proto3" json:"tsList2"`
	StartTm string            `protobuf:"bytes,9,opt,name=startTm,proto3" json:"startTm"` // 开始时间
}

func (x *GetZybHyKlineResp) Reset() {
	*x = GetZybHyKlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetZybHyKlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetZybHyKlineResp) ProtoMessage() {}

func (x *GetZybHyKlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetZybHyKlineResp.ProtoReflect.Descriptor instead.
func (*GetZybHyKlineResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{3}
}

func (x *GetZybHyKlineResp) GetTimes() []string {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *GetZybHyKlineResp) GetList() []*ZybHyDailyInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetZybHyKlineResp) GetTags() []*TagInfo {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetZybHyKlineResp) GetTags1() []*TagInfo {
	if x != nil {
		return x.Tags1
	}
	return nil
}

func (x *GetZybHyKlineResp) GetCjlmin() float64 {
	if x != nil {
		return x.Cjlmin
	}
	return 0
}

func (x *GetZybHyKlineResp) GetCjlmax() float64 {
	if x != nil {
		return x.Cjlmax
	}
	return 0
}

func (x *GetZybHyKlineResp) GetTsList1() *GetHyMmaddResp {
	if x != nil {
		return x.TsList1
	}
	return nil
}

func (x *GetZybHyKlineResp) GetTsList2() *GetHyMmaddResp {
	if x != nil {
		return x.TsList2
	}
	return nil
}

func (x *GetZybHyKlineResp) GetStartTm() string {
	if x != nil {
		return x.StartTm
	}
	return ""
}

type TagInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`         // 标签名字
	Color   string  `protobuf:"bytes,2,opt,name=color,proto3" json:"color"`       // 标签颜色
	Percent float64 `protobuf:"fixed64,3,opt,name=percent,proto3" json:"percent"` // 涨跌幅
	Url     string  `protobuf:"bytes,4,opt,name=url,proto3" json:"url"`           //地址
	Doc     string  `protobuf:"bytes,5,opt,name=doc,proto3" json:"doc"`
	Code    string  `protobuf:"bytes,6,opt,name=code,proto3" json:"code"`
}

func (x *TagInfo) Reset() {
	*x = TagInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagInfo) ProtoMessage() {}

func (x *TagInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagInfo.ProtoReflect.Descriptor instead.
func (*TagInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{4}
}

func (x *TagInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TagInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *TagInfo) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *TagInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TagInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *TagInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type ZybHyDailyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name"` // 行业名字
	Code string    `protobuf:"bytes,2,opt,name=code,proto3" json:"code"` // 行业代码
	Up   bool      `protobuf:"varint,3,opt,name=up,proto3" json:"up"`
	Data []float64 `protobuf:"fixed64,6,rep,packed,name=data,proto3" json:"data"` // 数据
	Cjl  []float64 `protobuf:"fixed64,7,rep,packed,name=cjl,proto3" json:"cjl"`   // 数据集
}

func (x *ZybHyDailyInfo) Reset() {
	*x = ZybHyDailyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ZybHyDailyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ZybHyDailyInfo) ProtoMessage() {}

func (x *ZybHyDailyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ZybHyDailyInfo.ProtoReflect.Descriptor instead.
func (*ZybHyDailyInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{5}
}

func (x *ZybHyDailyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ZybHyDailyInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ZybHyDailyInfo) GetUp() bool {
	if x != nil {
		return x.Up
	}
	return false
}

func (x *ZybHyDailyInfo) GetData() []float64 {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ZybHyDailyInfo) GetCjl() []float64 {
	if x != nil {
		return x.Cjl
	}
	return nil
}

type GetMrtDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mrt string `protobuf:"bytes,1,opt,name=mrt,proto3" json:"mrt"` // id
}

func (x *GetMrtDetailReq) Reset() {
	*x = GetMrtDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMrtDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMrtDetailReq) ProtoMessage() {}

func (x *GetMrtDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMrtDetailReq.ProtoReflect.Descriptor instead.
func (*GetMrtDetailReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{6}
}

func (x *GetMrtDetailReq) GetMrt() string {
	if x != nil {
		return x.Mrt
	}
	return ""
}

type GetMrtDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  *MrtInfo   `protobuf:"bytes,1,opt,name=info,proto3" json:"info"`   // mrt信息
	Docs  []*MrtLog  `protobuf:"bytes,2,rep,name=docs,proto3" json:"docs"`   // 操作列表
	Codes []*MrtCode `protobuf:"bytes,3,rep,name=codes,proto3" json:"codes"` // 持有列表
}

func (x *GetMrtDetailResp) Reset() {
	*x = GetMrtDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMrtDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMrtDetailResp) ProtoMessage() {}

func (x *GetMrtDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMrtDetailResp.ProtoReflect.Descriptor instead.
func (*GetMrtDetailResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{7}
}

func (x *GetMrtDetailResp) GetInfo() *MrtInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *GetMrtDetailResp) GetDocs() []*MrtLog {
	if x != nil {
		return x.Docs
	}
	return nil
}

func (x *GetMrtDetailResp) GetCodes() []*MrtCode {
	if x != nil {
		return x.Codes
	}
	return nil
}

type MrtCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string      `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`   // 股票代码
	Name string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`   // 股票名字
	Cost float64     `protobuf:"fixed64,4,opt,name=cost,proto3" json:"cost"` // 成本
	Num  float64     `protobuf:"fixed64,5,opt,name=num,proto3" json:"num"`   // 操作数量
	Info *SharesInfo `protobuf:"bytes,6,opt,name=info,proto3" json:"info"`
}

func (x *MrtCode) Reset() {
	*x = MrtCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MrtCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MrtCode) ProtoMessage() {}

func (x *MrtCode) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MrtCode.ProtoReflect.Descriptor instead.
func (*MrtCode) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{8}
}

func (x *MrtCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MrtCode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MrtCode) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *MrtCode) GetNum() float64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *MrtCode) GetInfo() *SharesInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type MrtLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mrt   string  `protobuf:"bytes,1,opt,name=mrt,proto3" json:"mrt"`       // id
	Code  string  `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`     // 股票代码
	Name  string  `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`     // 股票名字
	Doc   string  `protobuf:"bytes,4,opt,name=doc,proto3" json:"doc"`       // 描述
	Flag  int32   `protobuf:"varint,5,opt,name=flag,proto3" json:"flag"`    // 标记
	Price float64 `protobuf:"fixed64,6,opt,name=price,proto3" json:"price"` // 价格
	Num   float64 `protobuf:"fixed64,7,opt,name=num,proto3" json:"num"`     // 操作数量
	Tm    string  `protobuf:"bytes,8,opt,name=tm,proto3" json:"tm"`         // 操作时间
	Sdoc  string  `protobuf:"bytes,9,opt,name=sdoc,proto3" json:"sdoc"`     // 简要描述
	Tag   string  `protobuf:"bytes,10,opt,name=tag,proto3" json:"tag"`      // 标记
	Color string  `protobuf:"bytes,11,opt,name=color,proto3" json:"color"`  // 颜色
}

func (x *MrtLog) Reset() {
	*x = MrtLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MrtLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MrtLog) ProtoMessage() {}

func (x *MrtLog) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MrtLog.ProtoReflect.Descriptor instead.
func (*MrtLog) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{9}
}

func (x *MrtLog) GetMrt() string {
	if x != nil {
		return x.Mrt
	}
	return ""
}

func (x *MrtLog) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MrtLog) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MrtLog) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *MrtLog) GetFlag() int32 {
	if x != nil {
		return x.Flag
	}
	return 0
}

func (x *MrtLog) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MrtLog) GetNum() float64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *MrtLog) GetTm() string {
	if x != nil {
		return x.Tm
	}
	return ""
}

func (x *MrtLog) GetSdoc() string {
	if x != nil {
		return x.Sdoc
	}
	return ""
}

func (x *MrtLog) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *MrtLog) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type UpsetMrtCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`     // 代码
	Mrt   string  `protobuf:"bytes,2,opt,name=mrt,proto3" json:"mrt"`       // mrt
	Tag   int32   `protobuf:"varint,3,opt,name=tag,proto3" json:"tag"`      // 卖出/买入(-1/1)
	Num   float64 `protobuf:"fixed64,4,opt,name=num,proto3" json:"num"`     // 操作数量
	Price float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price"` // 操作价格
	Doc   string  `protobuf:"bytes,6,opt,name=doc,proto3" json:"doc"`       // 描述
}

func (x *UpsetMrtCodeReq) Reset() {
	*x = UpsetMrtCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsetMrtCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsetMrtCodeReq) ProtoMessage() {}

func (x *UpsetMrtCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsetMrtCodeReq.ProtoReflect.Descriptor instead.
func (*UpsetMrtCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{10}
}

func (x *UpsetMrtCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpsetMrtCodeReq) GetMrt() string {
	if x != nil {
		return x.Mrt
	}
	return ""
}

func (x *UpsetMrtCodeReq) GetTag() int32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *UpsetMrtCodeReq) GetNum() float64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *UpsetMrtCodeReq) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *UpsetMrtCodeReq) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

type GetMrtCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Mrt  string `protobuf:"bytes,2,opt,name=mrt,proto3" json:"mrt"` // id
}

func (x *GetMrtCodeReq) Reset() {
	*x = GetMrtCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMrtCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMrtCodeReq) ProtoMessage() {}

func (x *GetMrtCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMrtCodeReq.ProtoReflect.Descriptor instead.
func (*GetMrtCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{11}
}

func (x *GetMrtCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetMrtCodeReq) GetMrt() string {
	if x != nil {
		return x.Mrt
	}
	return ""
}

type GetMrtCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cost    float64 `protobuf:"fixed64,1,opt,name=cost,proto3" json:"cost"`     // 成本价
	Num     float64 `protobuf:"fixed64,2,opt,name=num,proto3" json:"num"`       // 持有数量
	Price   float64 `protobuf:"fixed64,3,opt,name=price,proto3" json:"price"`   // 手上还有多少钱
	MrtName string  `protobuf:"bytes,4,opt,name=mrtName,proto3" json:"mrtName"` // 名人堂名字
}

func (x *GetMrtCodeResp) Reset() {
	*x = GetMrtCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMrtCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMrtCodeResp) ProtoMessage() {}

func (x *GetMrtCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMrtCodeResp.ProtoReflect.Descriptor instead.
func (*GetMrtCodeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{12}
}

func (x *GetMrtCodeResp) GetCost() float64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *GetMrtCodeResp) GetNum() float64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *GetMrtCodeResp) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GetMrtCodeResp) GetMrtName() string {
	if x != nil {
		return x.MrtName
	}
	return ""
}

type GetMrtListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsMy bool `protobuf:"varint,1,opt,name=isMy,proto3" json:"isMy"` // 是否只拉取我的
}

func (x *GetMrtListReq) Reset() {
	*x = GetMrtListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMrtListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMrtListReq) ProtoMessage() {}

func (x *GetMrtListReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMrtListReq.ProtoReflect.Descriptor instead.
func (*GetMrtListReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{13}
}

func (x *GetMrtListReq) GetIsMy() bool {
	if x != nil {
		return x.IsMy
	}
	return false
}

type GetMrtListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MrtInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetMrtListResp) Reset() {
	*x = GetMrtListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMrtListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMrtListResp) ProtoMessage() {}

func (x *GetMrtListResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMrtListResp.ProtoReflect.Descriptor instead.
func (*GetMrtListResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{14}
}

func (x *GetMrtListResp) GetList() []*MrtInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type MrtInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mrt     string    `protobuf:"bytes,1,opt,name=mrt,proto3" json:"mrt"`         // id
	Name    string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`       // 名人堂名字
	Doc     []*MrtDoc `protobuf:"bytes,3,rep,name=doc,proto3" json:"doc"`         // 名人堂描述
	Openids []string  `protobuf:"bytes,4,rep,name=openids,proto3" json:"openids"` // 名人堂所属openid
	IsMy    bool      `protobuf:"varint,5,opt,name=isMy,proto3" json:"isMy"`      // 名人堂是否是我的
	HaveMy  bool      `protobuf:"varint,6,opt,name=haveMy,proto3" json:"haveMy"`  // 名人堂是否有我
	Price   float64   `protobuf:"fixed64,7,opt,name=price,proto3" json:"price"`   // 可用金额
}

func (x *MrtInfo) Reset() {
	*x = MrtInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MrtInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MrtInfo) ProtoMessage() {}

func (x *MrtInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MrtInfo.ProtoReflect.Descriptor instead.
func (*MrtInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{15}
}

func (x *MrtInfo) GetMrt() string {
	if x != nil {
		return x.Mrt
	}
	return ""
}

func (x *MrtInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MrtInfo) GetDoc() []*MrtDoc {
	if x != nil {
		return x.Doc
	}
	return nil
}

func (x *MrtInfo) GetOpenids() []string {
	if x != nil {
		return x.Openids
	}
	return nil
}

func (x *MrtInfo) GetIsMy() bool {
	if x != nil {
		return x.IsMy
	}
	return false
}

func (x *MrtInfo) GetHaveMy() bool {
	if x != nil {
		return x.HaveMy
	}
	return false
}

func (x *MrtInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

//	message GetMyMrtListReq {
//	    double cost = 1;// 成本价
//	    double sell = 2;// 卖出价
//	    double num = 3;// 买了多少
//	    double doc = 4;// 描述
//	    string code = 5;// 代码
//	    string name = 6;// 股票名字
//	}
type GetHejjwResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*HejjwInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetHejjwResp) Reset() {
	*x = GetHejjwResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHejjwResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHejjwResp) ProtoMessage() {}

func (x *GetHejjwResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHejjwResp.ProtoReflect.Descriptor instead.
func (*GetHejjwResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{16}
}

func (x *GetHejjwResp) GetList() []*HejjwInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type HejjwInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TmStr   string `protobuf:"bytes,1,opt,name=tmStr,proto3" json:"tmStr"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content"`
}

func (x *HejjwInfo) Reset() {
	*x = HejjwInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HejjwInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HejjwInfo) ProtoMessage() {}

func (x *HejjwInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HejjwInfo.ProtoReflect.Descriptor instead.
func (*HejjwInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{17}
}

func (x *HejjwInfo) GetTmStr() string {
	if x != nil {
		return x.TmStr
	}
	return ""
}

func (x *HejjwInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *HejjwInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type MrtDoc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Type  string `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
}

func (x *MrtDoc) Reset() {
	*x = MrtDoc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MrtDoc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MrtDoc) ProtoMessage() {}

func (x *MrtDoc) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MrtDoc.ProtoReflect.Descriptor instead.
func (*MrtDoc) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{18}
}

func (x *MrtDoc) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *MrtDoc) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MrtDoc) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type KlineInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times []string  `protobuf:"bytes,1,rep,name=times,proto3" json:"times"`          // x轴数据
	Data1 []float64 `protobuf:"fixed64,2,rep,packed,name=data1,proto3" json:"data1"` // 数据
	Data2 []float64 `protobuf:"fixed64,3,rep,packed,name=data2,proto3" json:"data2"` // 数据
	Data3 []float64 `protobuf:"fixed64,4,rep,packed,name=data3,proto3" json:"data3"` // 数据
}

func (x *KlineInfo) Reset() {
	*x = KlineInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KlineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KlineInfo) ProtoMessage() {}

func (x *KlineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KlineInfo.ProtoReflect.Descriptor instead.
func (*KlineInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{19}
}

func (x *KlineInfo) GetTimes() []string {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *KlineInfo) GetData1() []float64 {
	if x != nil {
		return x.Data1
	}
	return nil
}

func (x *KlineInfo) GetData2() []float64 {
	if x != nil {
		return x.Data2
	}
	return nil
}

func (x *KlineInfo) GetData3() []float64 {
	if x != nil {
		return x.Data3
	}
	return nil
}

type GetYyqReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days int32 `protobuf:"varint,2,opt,name=days,proto3" json:"days"` // 天数
}

func (x *GetYyqReq) Reset() {
	*x = GetYyqReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYyqReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYyqReq) ProtoMessage() {}

func (x *GetYyqReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYyqReq.ProtoReflect.Descriptor instead.
func (*GetYyqReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{20}
}

func (x *GetYyqReq) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GetYyqResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Colorr string     `protobuf:"bytes,1,opt,name=colorr,proto3" json:"colorr"` // 红的颜色
	Colorg string     `protobuf:"bytes,2,opt,name=colorg,proto3" json:"colorg"` // 绿的颜色
	Bx     *KlineInfo `protobuf:"bytes,11,opt,name=bx,proto3" json:"bx"`        // 北向
	Rzrq   *KlineInfo `protobuf:"bytes,12,opt,name=rzrq,proto3" json:"rzrq"`    // 融资融券
	Mlf    *KlineInfo `protobuf:"bytes,13,opt,name=mlf,proto3" json:"mlf"`      // 逆回购
	Cpi    *KlineInfo `protobuf:"bytes,14,opt,name=cpi,proto3" json:"cpi"`
	Ppi    *KlineInfo `protobuf:"bytes,15,opt,name=ppi,proto3" json:"ppi"`
	Gdp    *KlineInfo `protobuf:"bytes,16,opt,name=gdp,proto3" json:"gdp"`
	Pmi    *KlineInfo `protobuf:"bytes,17,opt,name=pmi,proto3" json:"pmi"`
	Qyjqzs *KlineInfo `protobuf:"bytes,18,opt,name=qyjqzs,proto3" json:"qyjqzs"` // 企业景气指数
	Gyzjz  *KlineInfo `protobuf:"bytes,19,opt,name=gyzjz,proto3" json:"gyzjz"`   // 工业增加值
	Xfzxx  *KlineInfo `protobuf:"bytes,20,opt,name=xfzxx,proto3" json:"xfzxx"`   // 消费者信心指数
	M2     *KlineInfo `protobuf:"bytes,21,opt,name=m2,proto3" json:"m2"`
	Hgjck  *KlineInfo `protobuf:"bytes,22,opt,name=hgjck,proto3" json:"hgjck"` // 海关进出口
	// KlineInfo gpkhsj= 23;// 股票开户数据
	Fdi   *KlineInfo `protobuf:"bytes,24,opt,name=fdi,proto3" json:"fdi"`   // 外商直接投资数据(FDI)
	Xzxd  *KlineInfo `protobuf:"bytes,25,opt,name=xzxd,proto3" json:"xzxd"` // 新增信贷数据
	Left  string     `protobuf:"bytes,26,opt,name=left,proto3" json:"left"`
	Right string     `protobuf:"bytes,27,opt,name=right,proto3" json:"right"`
}

func (x *GetYyqResp) Reset() {
	*x = GetYyqResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYyqResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYyqResp) ProtoMessage() {}

func (x *GetYyqResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYyqResp.ProtoReflect.Descriptor instead.
func (*GetYyqResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{21}
}

func (x *GetYyqResp) GetColorr() string {
	if x != nil {
		return x.Colorr
	}
	return ""
}

func (x *GetYyqResp) GetColorg() string {
	if x != nil {
		return x.Colorg
	}
	return ""
}

func (x *GetYyqResp) GetBx() *KlineInfo {
	if x != nil {
		return x.Bx
	}
	return nil
}

func (x *GetYyqResp) GetRzrq() *KlineInfo {
	if x != nil {
		return x.Rzrq
	}
	return nil
}

func (x *GetYyqResp) GetMlf() *KlineInfo {
	if x != nil {
		return x.Mlf
	}
	return nil
}

func (x *GetYyqResp) GetCpi() *KlineInfo {
	if x != nil {
		return x.Cpi
	}
	return nil
}

func (x *GetYyqResp) GetPpi() *KlineInfo {
	if x != nil {
		return x.Ppi
	}
	return nil
}

func (x *GetYyqResp) GetGdp() *KlineInfo {
	if x != nil {
		return x.Gdp
	}
	return nil
}

func (x *GetYyqResp) GetPmi() *KlineInfo {
	if x != nil {
		return x.Pmi
	}
	return nil
}

func (x *GetYyqResp) GetQyjqzs() *KlineInfo {
	if x != nil {
		return x.Qyjqzs
	}
	return nil
}

func (x *GetYyqResp) GetGyzjz() *KlineInfo {
	if x != nil {
		return x.Gyzjz
	}
	return nil
}

func (x *GetYyqResp) GetXfzxx() *KlineInfo {
	if x != nil {
		return x.Xfzxx
	}
	return nil
}

func (x *GetYyqResp) GetM2() *KlineInfo {
	if x != nil {
		return x.M2
	}
	return nil
}

func (x *GetYyqResp) GetHgjck() *KlineInfo {
	if x != nil {
		return x.Hgjck
	}
	return nil
}

func (x *GetYyqResp) GetFdi() *KlineInfo {
	if x != nil {
		return x.Fdi
	}
	return nil
}

func (x *GetYyqResp) GetXzxd() *KlineInfo {
	if x != nil {
		return x.Xzxd
	}
	return nil
}

func (x *GetYyqResp) GetLeft() string {
	if x != nil {
		return x.Left
	}
	return ""
}

func (x *GetYyqResp) GetRight() string {
	if x != nil {
		return x.Right
	}
	return ""
}

type GetFundKlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times      []string  `protobuf:"bytes,1,rep,name=times,proto3" json:"times"`        // x轴数据
	Colorr     string    `protobuf:"bytes,2,opt,name=colorr,proto3" json:"colorr"`      // 红的颜色
	Colorg     string    `protobuf:"bytes,3,opt,name=colorg,proto3" json:"colorg"`      // 绿的颜色
	Gjhj       []float64 `protobuf:"fixed64,4,rep,packed,name=gjhj,proto3" json:"gjhj"` // 股基合计
	Gpx        []float64 `protobuf:"fixed64,5,rep,packed,name=gpx,proto3" json:"gpx"`   // 股票型
	Hhx        []float64 `protobuf:"fixed64,6,rep,packed,name=hhx,proto3" json:"hhx"`   // 混合型
	Zsx        []float64 `protobuf:"fixed64,7,rep,packed,name=zsx,proto3" json:"zsx"`   // 指数型
	Qdii       []float64 `protobuf:"fixed64,8,rep,packed,name=qdii,proto3" json:"qdii"` // QDII
	Lof        []float64 `protobuf:"fixed64,9,rep,packed,name=lof,proto3" json:"lof"`
	Fof        []float64 `protobuf:"fixed64,10,rep,packed,name=fof,proto3" json:"fof"`
	Times1     []string  `protobuf:"bytes,11,rep,name=times1,proto3" json:"times1"`         // 盈利预测
	Ylyc       []float64 `protobuf:"fixed64,12,rep,packed,name=ylyc,proto3" json:"ylyc"`    // 盈利预测值
	Yl         []float64 `protobuf:"fixed64,13,rep,packed,name=yl,proto3" json:"yl"`        // 盈利
	Times2     []string  `protobuf:"bytes,14,rep,name=times2,proto3" json:"times2"`         // 股息分红
	Gxl        []float64 `protobuf:"fixed64,15,rep,packed,name=gxl,proto3" json:"gxl"`      // 盈利预测值
	Bvps       []float64 `protobuf:"fixed64,16,rep,packed,name=bvps,proto3" json:"bvps"`    // 每股净资产
	Mzpg       []float64 `protobuf:"fixed64,17,rep,packed,name=mzpg,proto3" json:"mzpg"`    // 募资，增发
	Px         []float64 `protobuf:"fixed64,18,rep,packed,name=px,proto3" json:"px"`        // 派现
	MzpxbTitle string    `protobuf:"bytes,19,opt,name=mzpxbTitle,proto3" json:"mzpxbTitle"` // 募资派现比例
}

func (x *GetFundKlineResp) Reset() {
	*x = GetFundKlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFundKlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFundKlineResp) ProtoMessage() {}

func (x *GetFundKlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFundKlineResp.ProtoReflect.Descriptor instead.
func (*GetFundKlineResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{22}
}

func (x *GetFundKlineResp) GetTimes() []string {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *GetFundKlineResp) GetColorr() string {
	if x != nil {
		return x.Colorr
	}
	return ""
}

func (x *GetFundKlineResp) GetColorg() string {
	if x != nil {
		return x.Colorg
	}
	return ""
}

func (x *GetFundKlineResp) GetGjhj() []float64 {
	if x != nil {
		return x.Gjhj
	}
	return nil
}

func (x *GetFundKlineResp) GetGpx() []float64 {
	if x != nil {
		return x.Gpx
	}
	return nil
}

func (x *GetFundKlineResp) GetHhx() []float64 {
	if x != nil {
		return x.Hhx
	}
	return nil
}

func (x *GetFundKlineResp) GetZsx() []float64 {
	if x != nil {
		return x.Zsx
	}
	return nil
}

func (x *GetFundKlineResp) GetQdii() []float64 {
	if x != nil {
		return x.Qdii
	}
	return nil
}

func (x *GetFundKlineResp) GetLof() []float64 {
	if x != nil {
		return x.Lof
	}
	return nil
}

func (x *GetFundKlineResp) GetFof() []float64 {
	if x != nil {
		return x.Fof
	}
	return nil
}

func (x *GetFundKlineResp) GetTimes1() []string {
	if x != nil {
		return x.Times1
	}
	return nil
}

func (x *GetFundKlineResp) GetYlyc() []float64 {
	if x != nil {
		return x.Ylyc
	}
	return nil
}

func (x *GetFundKlineResp) GetYl() []float64 {
	if x != nil {
		return x.Yl
	}
	return nil
}

func (x *GetFundKlineResp) GetTimes2() []string {
	if x != nil {
		return x.Times2
	}
	return nil
}

func (x *GetFundKlineResp) GetGxl() []float64 {
	if x != nil {
		return x.Gxl
	}
	return nil
}

func (x *GetFundKlineResp) GetBvps() []float64 {
	if x != nil {
		return x.Bvps
	}
	return nil
}

func (x *GetFundKlineResp) GetMzpg() []float64 {
	if x != nil {
		return x.Mzpg
	}
	return nil
}

func (x *GetFundKlineResp) GetPx() []float64 {
	if x != nil {
		return x.Px
	}
	return nil
}

func (x *GetFundKlineResp) GetMzpxbTitle() string {
	if x != nil {
		return x.MzpxbTitle
	}
	return ""
}

type GetJgKlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times  []string  `protobuf:"bytes,1,rep,name=times,proto3" json:"times"`        // x轴数据
	Colorr string    `protobuf:"bytes,2,opt,name=colorr,proto3" json:"colorr"`      // 红的颜色
	Colorg string    `protobuf:"bytes,3,opt,name=colorg,proto3" json:"colorg"`      // 绿的颜色
	Jghz   []float64 `protobuf:"fixed64,4,rep,packed,name=jghz,proto3" json:"jghz"` // 机构汇总
	Jj     []float64 `protobuf:"fixed64,5,rep,packed,name=jj,proto3" json:"jj"`     // 基金
	Qfii   []float64 `protobuf:"fixed64,6,rep,packed,name=qfii,proto3" json:"qfii"` // QFII
	Sb     []float64 `protobuf:"fixed64,7,rep,packed,name=sb,proto3" json:"sb"`     // 社保
	Bx     []float64 `protobuf:"fixed64,8,rep,packed,name=bx,proto3" json:"bx"`     // 保险
	Xt     []float64 `protobuf:"fixed64,9,rep,packed,name=xt,proto3" json:"xt"`     // 信托
	Qs     []float64 `protobuf:"fixed64,10,rep,packed,name=qs,proto3" json:"qs"`    // 券商
	Qt     []float64 `protobuf:"fixed64,11,rep,packed,name=qt,proto3" json:"qt"`    // 其他
}

func (x *GetJgKlineResp) Reset() {
	*x = GetJgKlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJgKlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJgKlineResp) ProtoMessage() {}

func (x *GetJgKlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJgKlineResp.ProtoReflect.Descriptor instead.
func (*GetJgKlineResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{23}
}

func (x *GetJgKlineResp) GetTimes() []string {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *GetJgKlineResp) GetColorr() string {
	if x != nil {
		return x.Colorr
	}
	return ""
}

func (x *GetJgKlineResp) GetColorg() string {
	if x != nil {
		return x.Colorg
	}
	return ""
}

func (x *GetJgKlineResp) GetJghz() []float64 {
	if x != nil {
		return x.Jghz
	}
	return nil
}

func (x *GetJgKlineResp) GetJj() []float64 {
	if x != nil {
		return x.Jj
	}
	return nil
}

func (x *GetJgKlineResp) GetQfii() []float64 {
	if x != nil {
		return x.Qfii
	}
	return nil
}

func (x *GetJgKlineResp) GetSb() []float64 {
	if x != nil {
		return x.Sb
	}
	return nil
}

func (x *GetJgKlineResp) GetBx() []float64 {
	if x != nil {
		return x.Bx
	}
	return nil
}

func (x *GetJgKlineResp) GetXt() []float64 {
	if x != nil {
		return x.Xt
	}
	return nil
}

func (x *GetJgKlineResp) GetQs() []float64 {
	if x != nil {
		return x.Qs
	}
	return nil
}

func (x *GetJgKlineResp) GetQt() []float64 {
	if x != nil {
		return x.Qt
	}
	return nil
}

type EchartsKeyLineInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Data []float64 `protobuf:"fixed64,2,rep,packed,name=data,proto3" json:"data"`
}

func (x *EchartsKeyLineInfo) Reset() {
	*x = EchartsKeyLineInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchartsKeyLineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchartsKeyLineInfo) ProtoMessage() {}

func (x *EchartsKeyLineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchartsKeyLineInfo.ProtoReflect.Descriptor instead.
func (*EchartsKeyLineInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{24}
}

func (x *EchartsKeyLineInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EchartsKeyLineInfo) GetData() []float64 {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetHotHyNameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names"` // 行业名字
	Days  int32    `protobuf:"varint,2,opt,name=days,proto3" json:"days"`  // 天数
}

func (x *GetHotHyNameReq) Reset() {
	*x = GetHotHyNameReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotHyNameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotHyNameReq) ProtoMessage() {}

func (x *GetHotHyNameReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotHyNameReq.ProtoReflect.Descriptor instead.
func (*GetHotHyNameReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{25}
}

func (x *GetHotHyNameReq) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *GetHotHyNameReq) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GetHotHyNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*HyCodeInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 行业名字
}

func (x *GetHotHyNameResp) Reset() {
	*x = GetHotHyNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotHyNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotHyNameResp) ProtoMessage() {}

func (x *GetHotHyNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotHyNameResp.ProtoReflect.Descriptor instead.
func (*GetHotHyNameResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{26}
}

func (x *GetHotHyNameResp) GetList() []*HyCodeInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type HyCodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"` // 行业名字
	Num  int32  `protobuf:"varint,2,opt,name=num,proto3" json:"num"`  // 次数
}

func (x *HyCodeInfo) Reset() {
	*x = HyCodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyCodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyCodeInfo) ProtoMessage() {}

func (x *HyCodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyCodeInfo.ProtoReflect.Descriptor instead.
func (*HyCodeInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{27}
}

func (x *HyCodeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HyCodeInfo) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetSharesKlineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`    // 股票代码
	Month int64  `protobuf:"varint,2,opt,name=month,proto3" json:"month"` // 拿几月
}

func (x *GetSharesKlineReq) Reset() {
	*x = GetSharesKlineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharesKlineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharesKlineReq) ProtoMessage() {}

func (x *GetSharesKlineReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharesKlineReq.ProtoReflect.Descriptor instead.
func (*GetSharesKlineReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{28}
}

func (x *GetSharesKlineReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetSharesKlineReq) GetMonth() int64 {
	if x != nil {
		return x.Month
	}
	return 0
}

type GetSharesKlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times     []string  `protobuf:"bytes,1,rep,name=times,proto3" json:"times"`                  // x轴数据
	KLine     []float64 `protobuf:"fixed64,2,rep,packed,name=kLine,proto3" json:"kLine"`         // 数据
	BxPercent []float64 `protobuf:"fixed64,3,rep,packed,name=bxPercent,proto3" json:"bxPercent"` // 北上占比
	Bxjlr     []float64 `protobuf:"fixed64,4,rep,packed,name=bxjlr,proto3" json:"bxjlr"`         // 北向净流入
	Bxjlr5    []float64 `protobuf:"fixed64,5,rep,packed,name=bxjlr5,proto3" json:"bxjlr5"`       // 北向净流入
	// repeated double zlPercent = 6;// 股基占比
	YhFocus   []float64  `protobuf:"fixed64,7,rep,packed,name=yhFocus,proto3" json:"yhFocus"`      // 用户情绪
	Colorr    string     `protobuf:"bytes,8,opt,name=colorr,proto3" json:"colorr"`                 // 红的颜色
	Colorg    string     `protobuf:"bytes,9,opt,name=colorg,proto3" json:"colorg"`                 // 绿的颜色
	RzPercent []float64  `protobuf:"fixed64,10,rep,packed,name=rzPercent,proto3" json:"rzPercent"` // 融资占比
	RzPrice   []float64  `protobuf:"fixed64,11,rep,packed,name=rzPrice,proto3" json:"rzPrice"`     // 融资净流入
	Qx        []float64  `protobuf:"fixed64,12,rep,packed,name=qx,proto3" json:"qx"`               // 情绪
	Gzd       []float64  `protobuf:"fixed64,13,rep,packed,name=gzd,proto3" json:"gzd"`             // 用户关注度
	Fyyx      []float64  `protobuf:"fixed64,14,rep,packed,name=fyyx,proto3" json:"fyyx"`           // 飞鹰优选
	Zljk      []float64  `protobuf:"fixed64,15,rep,packed,name=zljk,proto3" json:"zljk"`           // 主力真吸货(主力清洗之出货)
	Fx        []float64  `protobuf:"fixed64,16,rep,packed,name=fx,proto3" json:"fx"`               // 风险(>75 风险较大，<10 风险较小)
	Dde       []float64  `protobuf:"fixed64,17,rep,packed,name=dde,proto3" json:"dde"`             // 散户数
	HaveBx    bool       `protobuf:"varint,18,opt,name=haveBx,proto3" json:"haveBx"`               // 是否有北向
	HaveRz    bool       `protobuf:"varint,19,opt,name=haveRz,proto3" json:"haveRz"`               // 是否有融资
	Level     int32      `protobuf:"varint,20,opt,name=level,proto3" json:"level"`                 // 等级
	Ddejlr    []float64  `protobuf:"fixed64,21,rep,packed,name=ddejlr,proto3" json:"ddejlr"`       // 散户数
	Gds       []float64  `protobuf:"fixed64,22,rep,packed,name=gds,proto3" json:"gds"`             // 股东数
	GdsPl     []*GdsInfo `protobuf:"bytes,23,rep,name=gdsPl,proto3" json:"gdsPl"`                  // 股东数(真实披露日)
	Chip      []float64  `protobuf:"fixed64,24,rep,packed,name=chip,proto3" json:"chip"`           // 筹码集中度(90%)
	Zybl      []float64  `protobuf:"fixed64,25,rep,packed,name=zybl,proto3" json:"zybl"`           // 质押比例
	Zl        []float64  `protobuf:"fixed64,26,rep,packed,name=zl,proto3" json:"zl"`               // 主力净流入
	Jg        []float64  `protobuf:"fixed64,27,rep,packed,name=jg,proto3" json:"jg"`               // 机构动向
	RqPrice   []float64  `protobuf:"fixed64,28,rep,packed,name=rqPrice,proto3" json:"rqPrice"`     // 融券净流入
	HaveRq    bool       `protobuf:"varint,29,opt,name=haveRq,proto3" json:"haveRq"`               // 是否有融券
	JjPercent []float64  `protobuf:"fixed64,30,rep,packed,name=jjPercent,proto3" json:"jjPercent"` // 公募基金占比
	Mbj       []float64  `protobuf:"fixed64,31,rep,packed,name=mbj,proto3" json:"mbj"`             // 目标价
}

func (x *GetSharesKlineResp) Reset() {
	*x = GetSharesKlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSharesKlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSharesKlineResp) ProtoMessage() {}

func (x *GetSharesKlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSharesKlineResp.ProtoReflect.Descriptor instead.
func (*GetSharesKlineResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{29}
}

func (x *GetSharesKlineResp) GetTimes() []string {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *GetSharesKlineResp) GetKLine() []float64 {
	if x != nil {
		return x.KLine
	}
	return nil
}

func (x *GetSharesKlineResp) GetBxPercent() []float64 {
	if x != nil {
		return x.BxPercent
	}
	return nil
}

func (x *GetSharesKlineResp) GetBxjlr() []float64 {
	if x != nil {
		return x.Bxjlr
	}
	return nil
}

func (x *GetSharesKlineResp) GetBxjlr5() []float64 {
	if x != nil {
		return x.Bxjlr5
	}
	return nil
}

func (x *GetSharesKlineResp) GetYhFocus() []float64 {
	if x != nil {
		return x.YhFocus
	}
	return nil
}

func (x *GetSharesKlineResp) GetColorr() string {
	if x != nil {
		return x.Colorr
	}
	return ""
}

func (x *GetSharesKlineResp) GetColorg() string {
	if x != nil {
		return x.Colorg
	}
	return ""
}

func (x *GetSharesKlineResp) GetRzPercent() []float64 {
	if x != nil {
		return x.RzPercent
	}
	return nil
}

func (x *GetSharesKlineResp) GetRzPrice() []float64 {
	if x != nil {
		return x.RzPrice
	}
	return nil
}

func (x *GetSharesKlineResp) GetQx() []float64 {
	if x != nil {
		return x.Qx
	}
	return nil
}

func (x *GetSharesKlineResp) GetGzd() []float64 {
	if x != nil {
		return x.Gzd
	}
	return nil
}

func (x *GetSharesKlineResp) GetFyyx() []float64 {
	if x != nil {
		return x.Fyyx
	}
	return nil
}

func (x *GetSharesKlineResp) GetZljk() []float64 {
	if x != nil {
		return x.Zljk
	}
	return nil
}

func (x *GetSharesKlineResp) GetFx() []float64 {
	if x != nil {
		return x.Fx
	}
	return nil
}

func (x *GetSharesKlineResp) GetDde() []float64 {
	if x != nil {
		return x.Dde
	}
	return nil
}

func (x *GetSharesKlineResp) GetHaveBx() bool {
	if x != nil {
		return x.HaveBx
	}
	return false
}

func (x *GetSharesKlineResp) GetHaveRz() bool {
	if x != nil {
		return x.HaveRz
	}
	return false
}

func (x *GetSharesKlineResp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *GetSharesKlineResp) GetDdejlr() []float64 {
	if x != nil {
		return x.Ddejlr
	}
	return nil
}

func (x *GetSharesKlineResp) GetGds() []float64 {
	if x != nil {
		return x.Gds
	}
	return nil
}

func (x *GetSharesKlineResp) GetGdsPl() []*GdsInfo {
	if x != nil {
		return x.GdsPl
	}
	return nil
}

func (x *GetSharesKlineResp) GetChip() []float64 {
	if x != nil {
		return x.Chip
	}
	return nil
}

func (x *GetSharesKlineResp) GetZybl() []float64 {
	if x != nil {
		return x.Zybl
	}
	return nil
}

func (x *GetSharesKlineResp) GetZl() []float64 {
	if x != nil {
		return x.Zl
	}
	return nil
}

func (x *GetSharesKlineResp) GetJg() []float64 {
	if x != nil {
		return x.Jg
	}
	return nil
}

func (x *GetSharesKlineResp) GetRqPrice() []float64 {
	if x != nil {
		return x.RqPrice
	}
	return nil
}

func (x *GetSharesKlineResp) GetHaveRq() bool {
	if x != nil {
		return x.HaveRq
	}
	return false
}

func (x *GetSharesKlineResp) GetJjPercent() []float64 {
	if x != nil {
		return x.JjPercent
	}
	return nil
}

func (x *GetSharesKlineResp) GetMbj() []float64 {
	if x != nil {
		return x.Mbj
	}
	return nil
}

type GdsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day   string  `protobuf:"bytes,1,opt,name=day,proto3" json:"day"`
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value"`
}

func (x *GdsInfo) Reset() {
	*x = GdsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdsInfo) ProtoMessage() {}

func (x *GdsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdsInfo.ProtoReflect.Descriptor instead.
func (*GdsInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{30}
}

func (x *GdsInfo) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

func (x *GdsInfo) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// 估值及pe
type GZPeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times []string  `protobuf:"bytes,1,rep,name=times,proto3" json:"times"`          // x轴数据
	KLine []float64 `protobuf:"fixed64,2,rep,packed,name=kLine,proto3" json:"kLine"` // 数据
	Pe0   []float64 `protobuf:"fixed64,3,rep,packed,name=pe0,proto3" json:"pe0"`     // pe1
	Pe1   []float64 `protobuf:"fixed64,4,rep,packed,name=pe1,proto3" json:"pe1"`     // pe2
	Pe2   []float64 `protobuf:"fixed64,5,rep,packed,name=pe2,proto3" json:"pe2"`     // pe3
	Pe3   []float64 `protobuf:"fixed64,6,rep,packed,name=pe3,proto3" json:"pe3"`     // pe4
	Pe4   []float64 `protobuf:"fixed64,7,rep,packed,name=pe4,proto3" json:"pe4"`     // pe5
	Names []string  `protobuf:"bytes,12,rep,name=names,proto3" json:"names"`         // 名字
	Have  bool      `protobuf:"varint,13,opt,name=have,proto3" json:"have"`
}

func (x *GZPeResp) Reset() {
	*x = GZPeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GZPeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GZPeResp) ProtoMessage() {}

func (x *GZPeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GZPeResp.ProtoReflect.Descriptor instead.
func (*GZPeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{31}
}

func (x *GZPeResp) GetTimes() []string {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *GZPeResp) GetKLine() []float64 {
	if x != nil {
		return x.KLine
	}
	return nil
}

func (x *GZPeResp) GetPe0() []float64 {
	if x != nil {
		return x.Pe0
	}
	return nil
}

func (x *GZPeResp) GetPe1() []float64 {
	if x != nil {
		return x.Pe1
	}
	return nil
}

func (x *GZPeResp) GetPe2() []float64 {
	if x != nil {
		return x.Pe2
	}
	return nil
}

func (x *GZPeResp) GetPe3() []float64 {
	if x != nil {
		return x.Pe3
	}
	return nil
}

func (x *GZPeResp) GetPe4() []float64 {
	if x != nil {
		return x.Pe4
	}
	return nil
}

func (x *GZPeResp) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *GZPeResp) GetHave() bool {
	if x != nil {
		return x.Have
	}
	return false
}

type GetHyMmaddReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag    int32    `protobuf:"varint,1,opt,name=tag,proto3" json:"tag"`      // 类型 0:机构,1:北上,2:公募
	Days   int64    `protobuf:"varint,2,opt,name=days,proto3" json:"days"`    // 拿几天
	Code   string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`     // 行业名字
	HyCode []string `protobuf:"bytes,4,rep,name=hyCode,proto3" json:"hyCode"` // 行业名字
}

func (x *GetHyMmaddReq) Reset() {
	*x = GetHyMmaddReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyMmaddReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyMmaddReq) ProtoMessage() {}

func (x *GetHyMmaddReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyMmaddReq.ProtoReflect.Descriptor instead.
func (*GetHyMmaddReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{32}
}

func (x *GetHyMmaddReq) GetTag() int32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *GetHyMmaddReq) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *GetHyMmaddReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetHyMmaddReq) GetHyCode() []string {
	if x != nil {
		return x.HyCode
	}
	return nil
}

type GetHyMmaddResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string        `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`   // 标题
	Day0   string        `protobuf:"bytes,2,opt,name=day0,proto3" json:"day0"`     // 日期
	Vaild  bool          `protobuf:"varint,3,opt,name=vaild,proto3" json:"vaild"`  // 是否隐藏
	ThList []string      `protobuf:"bytes,4,rep,name=thList,proto3" json:"thList"` // 表名
	List   []*SharesInfo `protobuf:"bytes,5,rep,name=list,proto3" json:"list"`     // 列表
}

func (x *GetHyMmaddResp) Reset() {
	*x = GetHyMmaddResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyMmaddResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyMmaddResp) ProtoMessage() {}

func (x *GetHyMmaddResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyMmaddResp.ProtoReflect.Descriptor instead.
func (*GetHyMmaddResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{33}
}

func (x *GetHyMmaddResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetHyMmaddResp) GetDay0() string {
	if x != nil {
		return x.Day0
	}
	return ""
}

func (x *GetHyMmaddResp) GetVaild() bool {
	if x != nil {
		return x.Vaild
	}
	return false
}

func (x *GetHyMmaddResp) GetThList() []string {
	if x != nil {
		return x.ThList
	}
	return nil
}

func (x *GetHyMmaddResp) GetList() []*SharesInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetMyTeamDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *GetMyTeamDetailReq) Reset() {
	*x = GetMyTeamDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTeamDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTeamDetailReq) ProtoMessage() {}

func (x *GetMyTeamDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTeamDetailReq.ProtoReflect.Descriptor instead.
func (*GetMyTeamDetailReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{34}
}

func (x *GetMyTeamDetailReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetMyTeamDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name"` // 分组名
	List []*SharesInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetMyTeamDetailResp) Reset() {
	*x = GetMyTeamDetailResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTeamDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTeamDetailResp) ProtoMessage() {}

func (x *GetMyTeamDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTeamDetailResp.ProtoReflect.Descriptor instead.
func (*GetMyTeamDetailResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{35}
}

func (x *GetMyTeamDetailResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetMyTeamDetailResp) GetList() []*SharesInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetMyTeamResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetMyTeamResp) Reset() {
	*x = GetMyTeamResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyTeamResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyTeamResp) ProtoMessage() {}

func (x *GetMyTeamResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyTeamResp.ProtoReflect.Descriptor instead.
func (*GetMyTeamResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{36}
}

func (x *GetMyTeamResp) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

type GetHyRmReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Days int32 `protobuf:"varint,1,opt,name=days,proto3" json:"days"` // 几天
}

func (x *GetHyRmReq) Reset() {
	*x = GetHyRmReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyRmReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyRmReq) ProtoMessage() {}

func (x *GetHyRmReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyRmReq.ProtoReflect.Descriptor instead.
func (*GetHyRmReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{37}
}

func (x *GetHyRmReq) GetDays() int32 {
	if x != nil {
		return x.Days
	}
	return 0
}

type GetHyRmResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*common.SimpSharInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetHyRmResp) Reset() {
	*x = GetHyRmResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyRmResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyRmResp) ProtoMessage() {}

func (x *GetHyRmResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyRmResp.ProtoReflect.Descriptor instead.
func (*GetHyRmResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{38}
}

func (x *GetHyRmResp) GetList() []*common.SimpSharInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type DailyCheckInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayStr string `protobuf:"bytes,1,opt,name=dayStr,proto3" json:"dayStr"` // 日期
	Title  string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`   // 标题
	Digest string `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest"` // 简要描述
	Img    string `protobuf:"bytes,4,opt,name=img,proto3" json:"img"`       // 图片地址
	Url    string `protobuf:"bytes,5,opt,name=url,proto3" json:"url"`       // 连接地址
}

func (x *DailyCheckInfo) Reset() {
	*x = DailyCheckInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyCheckInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyCheckInfo) ProtoMessage() {}

func (x *DailyCheckInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyCheckInfo.ProtoReflect.Descriptor instead.
func (*DailyCheckInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{39}
}

func (x *DailyCheckInfo) GetDayStr() string {
	if x != nil {
		return x.DayStr
	}
	return ""
}

func (x *DailyCheckInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DailyCheckInfo) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *DailyCheckInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *DailyCheckInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetDailyCheckResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*DailyCheckInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 每日复盘笔记
}

func (x *GetDailyCheckResp) Reset() {
	*x = GetDailyCheckResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDailyCheckResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyCheckResp) ProtoMessage() {}

func (x *GetDailyCheckResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyCheckResp.ProtoReflect.Descriptor instead.
func (*GetDailyCheckResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{40}
}

func (x *GetDailyCheckResp) GetList() []*DailyCheckInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// SharesInfo 股票信息
type SharesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string     `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`              // 股票代码
	SimpleCode string     `protobuf:"bytes,2,opt,name=simpleCode,proto3" json:"simpleCode"`  // 股票代码简写
	Ext        string     `protobuf:"bytes,3,opt,name=ext,proto3" json:"ext"`                // 后缀
	Name       string     `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`              // 股票名字
	Price      float64    `protobuf:"fixed64,5,opt,name=price,proto3" json:"price"`          // 当前价格
	SPrice     string     `protobuf:"bytes,6,opt,name=sPrice,proto3" json:"sPrice"`          // 价格简写
	Jlr        float64    `protobuf:"fixed64,7,opt,name=jlr,proto3" json:"jlr"`              // 净流入
	Percent    float64    `protobuf:"fixed64,8,opt,name=percent,proto3" json:"percent"`      // 百分比
	Color      string     `protobuf:"bytes,9,opt,name=color,proto3" json:"color"`            // 颜色
	Img        string     `protobuf:"bytes,10,opt,name=img,proto3" json:"img"`               // 图片地址
	Hy         []*TagInfo `protobuf:"bytes,11,rep,name=hy,proto3" json:"hy"`                 // 行业板块
	MainHy     string     `protobuf:"bytes,12,opt,name=mainHy,proto3" json:"mainHy"`         // 行业板块
	MainHyCode string     `protobuf:"bytes,13,opt,name=mainHyCode,proto3" json:"mainHyCode"` // 行业板块
	Attach     string     `protobuf:"bytes,14,opt,name=attach,proto3" json:"attach"`         // 附加
	Peg        string     `protobuf:"bytes,15,opt,name=peg,proto3" json:"peg"`               // peg信息
	Url        string     `protobuf:"bytes,16,opt,name=url,proto3" json:"url"`               // 地址
	HyDj       string     `protobuf:"bytes,17,opt,name=hyDj,proto3" json:"hyDj"`             // 行业叠加
	HyDjDoc    []string   `protobuf:"bytes,26,rep,name=hyDjDoc,proto3" json:"hyDjDoc"`       // 行业叠加描述
}

func (x *SharesInfo) Reset() {
	*x = SharesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharesInfo) ProtoMessage() {}

func (x *SharesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharesInfo.ProtoReflect.Descriptor instead.
func (*SharesInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{41}
}

func (x *SharesInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SharesInfo) GetSimpleCode() string {
	if x != nil {
		return x.SimpleCode
	}
	return ""
}

func (x *SharesInfo) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *SharesInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SharesInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SharesInfo) GetSPrice() string {
	if x != nil {
		return x.SPrice
	}
	return ""
}

func (x *SharesInfo) GetJlr() float64 {
	if x != nil {
		return x.Jlr
	}
	return 0
}

func (x *SharesInfo) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *SharesInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *SharesInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *SharesInfo) GetHy() []*TagInfo {
	if x != nil {
		return x.Hy
	}
	return nil
}

func (x *SharesInfo) GetMainHy() string {
	if x != nil {
		return x.MainHy
	}
	return ""
}

func (x *SharesInfo) GetMainHyCode() string {
	if x != nil {
		return x.MainHyCode
	}
	return ""
}

func (x *SharesInfo) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *SharesInfo) GetPeg() string {
	if x != nil {
		return x.Peg
	}
	return ""
}

func (x *SharesInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *SharesInfo) GetHyDj() string {
	if x != nil {
		return x.HyDj
	}
	return ""
}

func (x *SharesInfo) GetHyDjDoc() []string {
	if x != nil {
		return x.HyDjDoc
	}
	return nil
}

// SharesInfoDetails 股票详细信息
type SharesInfoDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`                    // 股票代码
	SimpleCode   string  `protobuf:"bytes,2,opt,name=simpleCode,proto3" json:"simpleCode"`        // 股票代码简写
	Ext          string  `protobuf:"bytes,3,opt,name=ext,proto3" json:"ext"`                      // 后缀
	Name         string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`                    // 股票名字
	Price        float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price"`                // 当前价格
	Percent      float64 `protobuf:"fixed64,6,opt,name=percent,proto3" json:"percent"`            // 百分比
	Color        string  `protobuf:"bytes,7,opt,name=color,proto3" json:"color"`                  // 颜色
	Img          string  `protobuf:"bytes,8,opt,name=img,proto3" json:"img"`                      // 图片地址
	Volume       float64 `protobuf:"fixed64,9,opt,name=volume,proto3" json:"volume"`              // 成交量（手）
	Turnover     float64 `protobuf:"fixed64,10,opt,name=turnover,proto3" json:"turnover"`         // 成交额（万）
	TurnoverRate float64 `protobuf:"fixed64,11,opt,name=turnoverRate,proto3" json:"turnoverRate"` // 换手率
	Pe           float64 `protobuf:"fixed64,12,opt,name=pe,proto3" json:"pe"`                     // 市盈率
	Pettm        float64 `protobuf:"fixed64,13,opt,name=pettm,proto3" json:"pettm"`               // 市盈率
	Pb           float64 `protobuf:"fixed64,14,opt,name=pb,proto3" json:"pb"`                     // 市净率
	Total        float64 `protobuf:"fixed64,15,opt,name=total,proto3" json:"total"`               // 流通市值
	Cap          float64 `protobuf:"fixed64,16,opt,name=cap,proto3" json:"cap"`                   // 总市值
	Zljlr        float64 `protobuf:"fixed64,17,opt,name=zljlr,proto3" json:"zljlr"`               // 主力资金净流入
	OpenPrice    float64 `protobuf:"fixed64,18,opt,name=openPrice,proto3" json:"openPrice"`       // 开盘价
	ClosePrice   float64 `protobuf:"fixed64,19,opt,name=closePrice,proto3" json:"closePrice"`     // 收盘价
	Macd         float64 `protobuf:"fixed64,20,opt,name=macd,proto3" json:"macd"`                 // macd
	Dif          float64 `protobuf:"fixed64,21,opt,name=dif,proto3" json:"dif"`                   // 快线
	Dea          float64 `protobuf:"fixed64,22,opt,name=dea,proto3" json:"dea"`                   // 慢线
	Max          float64 `protobuf:"fixed64,23,opt,name=max,proto3" json:"max"`                   // 当日最高点
	Min          float64 `protobuf:"fixed64,24,opt,name=min,proto3" json:"min"`                   // 当日最低
	Day0         int64   `protobuf:"varint,25,opt,name=day0,proto3" json:"day0"`                  // 当日0点时间戳
}

func (x *SharesInfoDetails) Reset() {
	*x = SharesInfoDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharesInfoDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharesInfoDetails) ProtoMessage() {}

func (x *SharesInfoDetails) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharesInfoDetails.ProtoReflect.Descriptor instead.
func (*SharesInfoDetails) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{42}
}

func (x *SharesInfoDetails) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SharesInfoDetails) GetSimpleCode() string {
	if x != nil {
		return x.SimpleCode
	}
	return ""
}

func (x *SharesInfoDetails) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *SharesInfoDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SharesInfoDetails) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SharesInfoDetails) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *SharesInfoDetails) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *SharesInfoDetails) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *SharesInfoDetails) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *SharesInfoDetails) GetTurnover() float64 {
	if x != nil {
		return x.Turnover
	}
	return 0
}

func (x *SharesInfoDetails) GetTurnoverRate() float64 {
	if x != nil {
		return x.TurnoverRate
	}
	return 0
}

func (x *SharesInfoDetails) GetPe() float64 {
	if x != nil {
		return x.Pe
	}
	return 0
}

func (x *SharesInfoDetails) GetPettm() float64 {
	if x != nil {
		return x.Pettm
	}
	return 0
}

func (x *SharesInfoDetails) GetPb() float64 {
	if x != nil {
		return x.Pb
	}
	return 0
}

func (x *SharesInfoDetails) GetTotal() float64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SharesInfoDetails) GetCap() float64 {
	if x != nil {
		return x.Cap
	}
	return 0
}

func (x *SharesInfoDetails) GetZljlr() float64 {
	if x != nil {
		return x.Zljlr
	}
	return 0
}

func (x *SharesInfoDetails) GetOpenPrice() float64 {
	if x != nil {
		return x.OpenPrice
	}
	return 0
}

func (x *SharesInfoDetails) GetClosePrice() float64 {
	if x != nil {
		return x.ClosePrice
	}
	return 0
}

func (x *SharesInfoDetails) GetMacd() float64 {
	if x != nil {
		return x.Macd
	}
	return 0
}

func (x *SharesInfoDetails) GetDif() float64 {
	if x != nil {
		return x.Dif
	}
	return 0
}

func (x *SharesInfoDetails) GetDea() float64 {
	if x != nil {
		return x.Dea
	}
	return 0
}

func (x *SharesInfoDetails) GetMax() float64 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *SharesInfoDetails) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *SharesInfoDetails) GetDay0() int64 {
	if x != nil {
		return x.Day0
	}
	return 0
}

type Group struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name"` // 分组名
	List []*SharesInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list"` // 列表
}

func (x *Group) Reset() {
	*x = Group{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Group) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Group) ProtoMessage() {}

func (x *Group) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Group.ProtoReflect.Descriptor instead.
func (*Group) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{43}
}

func (x *Group) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Group) GetList() []*SharesInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// GetGroupResp 请求结构
type GetGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Group `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetGroupResp) Reset() {
	*x = GetGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupResp) ProtoMessage() {}

func (x *GetGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupResp.ProtoReflect.Descriptor instead.
func (*GetGroupResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{44}
}

func (x *GetGroupResp) GetList() []*Group {
	if x != nil {
		return x.List
	}
	return nil
}

// SearchReq 搜索请求
type SearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
	Tag  string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag"`   // 标记(min,daily)
}

func (x *SearchReq) Reset() {
	*x = SearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReq) ProtoMessage() {}

func (x *SearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReq.ProtoReflect.Descriptor instead.
func (*SearchReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{45}
}

func (x *SearchReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SearchReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

// SearchReq 搜索请求
type SearchResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *SharesInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info"` // 返回信息
}

func (x *SearchResp) Reset() {
	*x = SearchResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResp) ProtoMessage() {}

func (x *SearchResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResp.ProtoReflect.Descriptor instead.
func (*SearchResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{46}
}

func (x *SearchResp) GetInfo() *SharesInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Codes []string `protobuf:"bytes,1,rep,name=codes,proto3" json:"codes"` // 股票代码
}

func (x *GetsReq) Reset() {
	*x = GetsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsReq) ProtoMessage() {}

func (x *GetsReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsReq.ProtoReflect.Descriptor instead.
func (*GetsReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{47}
}

func (x *GetsReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

// SimpleSharesInfo 股票信息
type SimpleSharesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`         // 股票代码
	Price   float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price"`     // 当前价格
	Percent float64 `protobuf:"fixed64,6,opt,name=percent,proto3" json:"percent"` // 百分比
	Color   string  `protobuf:"bytes,7,opt,name=color,proto3" json:"color"`       // 颜色
}

func (x *SimpleSharesInfo) Reset() {
	*x = SimpleSharesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SimpleSharesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SimpleSharesInfo) ProtoMessage() {}

func (x *SimpleSharesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SimpleSharesInfo.ProtoReflect.Descriptor instead.
func (*SimpleSharesInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{48}
}

func (x *SimpleSharesInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SimpleSharesInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SimpleSharesInfo) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *SimpleSharesInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type GetsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*SimpleSharesInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list"` // 列表(只返回价格相关的信息(code,price,percent,color))
}

func (x *GetsResp) Reset() {
	*x = GetsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsResp) ProtoMessage() {}

func (x *GetsResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsResp.ProtoReflect.Descriptor instead.
func (*GetsResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{49}
}

func (x *GetsResp) GetList() []*SimpleSharesInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type CodeNameInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`   // 股票代码
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`   // 股票名字
	SName string `protobuf:"bytes,3,opt,name=sName,proto3" json:"sName"` // 股票简写
}

func (x *CodeNameInfo) Reset() {
	*x = CodeNameInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeNameInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeNameInfo) ProtoMessage() {}

func (x *CodeNameInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeNameInfo.ProtoReflect.Descriptor instead.
func (*CodeNameInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{50}
}

func (x *CodeNameInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CodeNameInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CodeNameInfo) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

type GetAllCodeNameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*CodeNameInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 代码列表
}

func (x *GetAllCodeNameResp) Reset() {
	*x = GetAllCodeNameResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllCodeNameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllCodeNameResp) ProtoMessage() {}

func (x *GetAllCodeNameResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllCodeNameResp.ProtoReflect.Descriptor instead.
func (*GetAllCodeNameResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{51}
}

func (x *GetAllCodeNameResp) GetList() []*CodeNameInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type AddMyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`      // 股票代码
	Price  float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price"`  // 当前价格
	Kdj    bool    `protobuf:"varint,3,opt,name=kdj,proto3" json:"kdj"`       // 日线金叉提醒
	Kdj20  bool    `protobuf:"varint,4,opt,name=kdj20,proto3" json:"kdj20"`   // 20日线提醒
	Surge  bool    `protobuf:"varint,5,opt,name=surge,proto3" json:"surge"`   // 盘中急涨提醒
	Slump  bool    `protobuf:"varint,6,opt,name=slump,proto3" json:"slump"`   // 盘中急跌提醒
	Ai     bool    `protobuf:"varint,7,opt,name=ai,proto3" json:"ai"`         // AI智能提醒
	Public bool    `protobuf:"varint,8,opt,name=public,proto3" json:"public"` // 是否推荐给组织
	Up     float64 `protobuf:"fixed64,9,opt,name=up,proto3" json:"up"`        // 估价涨到
	Down   float64 `protobuf:"fixed64,10,opt,name=down,proto3" json:"down"`   // 估价跌到
	Vaild  bool    `protobuf:"varint,11,opt,name=vaild,proto3" json:"vaild"`  // 是否有效
	// 返回值用
	SimpleCode  string  `protobuf:"bytes,12,opt,name=simpleCode,proto3" json:"simpleCode"`     // 股票代码简写
	Ext         string  `protobuf:"bytes,13,opt,name=ext,proto3" json:"ext"`                   // 后缀
	Name        string  `protobuf:"bytes,14,opt,name=name,proto3" json:"name"`                 // 股票名字
	Percent     float64 `protobuf:"fixed64,15,opt,name=percent,proto3" json:"percent"`         // 百分比
	Color       string  `protobuf:"bytes,16,opt,name=color,proto3" json:"color"`               // 颜色
	UpPercent   float64 `protobuf:"fixed64,17,opt,name=upPercent,proto3" json:"upPercent"`     // 涨幅超
	UpTo        float64 `protobuf:"fixed64,18,opt,name=upTo,proto3" json:"upTo"`               // 涨幅目标提醒
	DownPercent float64 `protobuf:"fixed64,19,opt,name=downPercent,proto3" json:"downPercent"` // 跌幅超
	DownTo      float64 `protobuf:"fixed64,20,opt,name=downTo,proto3" json:"downTo"`           // 涨幅目标提醒
}

func (x *AddMyCodeReq) Reset() {
	*x = AddMyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyCodeReq) ProtoMessage() {}

func (x *AddMyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyCodeReq.ProtoReflect.Descriptor instead.
func (*AddMyCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{52}
}

func (x *AddMyCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddMyCodeReq) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddMyCodeReq) GetKdj() bool {
	if x != nil {
		return x.Kdj
	}
	return false
}

func (x *AddMyCodeReq) GetKdj20() bool {
	if x != nil {
		return x.Kdj20
	}
	return false
}

func (x *AddMyCodeReq) GetSurge() bool {
	if x != nil {
		return x.Surge
	}
	return false
}

func (x *AddMyCodeReq) GetSlump() bool {
	if x != nil {
		return x.Slump
	}
	return false
}

func (x *AddMyCodeReq) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

func (x *AddMyCodeReq) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *AddMyCodeReq) GetUp() float64 {
	if x != nil {
		return x.Up
	}
	return 0
}

func (x *AddMyCodeReq) GetDown() float64 {
	if x != nil {
		return x.Down
	}
	return 0
}

func (x *AddMyCodeReq) GetVaild() bool {
	if x != nil {
		return x.Vaild
	}
	return false
}

func (x *AddMyCodeReq) GetSimpleCode() string {
	if x != nil {
		return x.SimpleCode
	}
	return ""
}

func (x *AddMyCodeReq) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *AddMyCodeReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddMyCodeReq) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *AddMyCodeReq) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *AddMyCodeReq) GetUpPercent() float64 {
	if x != nil {
		return x.UpPercent
	}
	return 0
}

func (x *AddMyCodeReq) GetUpTo() float64 {
	if x != nil {
		return x.UpTo
	}
	return 0
}

func (x *AddMyCodeReq) GetDownPercent() float64 {
	if x != nil {
		return x.DownPercent
	}
	return 0
}

func (x *AddMyCodeReq) GetDownTo() float64 {
	if x != nil {
		return x.DownTo
	}
	return 0
}

type AddMyCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status bool   `protobuf:"varint,1,opt,name=status,proto3" json:"status"` // 状态是否成功
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`        // 消息
}

func (x *AddMyCodeResp) Reset() {
	*x = AddMyCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyCodeResp) ProtoMessage() {}

func (x *AddMyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyCodeResp.ProtoReflect.Descriptor instead.
func (*AddMyCodeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{53}
}

func (x *AddMyCodeResp) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *AddMyCodeResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetMyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
}

func (x *GetMyCodeReq) Reset() {
	*x = GetMyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyCodeReq) ProtoMessage() {}

func (x *GetMyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyCodeReq.ProtoReflect.Descriptor instead.
func (*GetMyCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{54}
}

func (x *GetMyCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AddMyCodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`                  // 股票代码
	Price       float64 `protobuf:"fixed64,2,opt,name=price,proto3" json:"price"`              // 当前价格
	Kdj         bool    `protobuf:"varint,3,opt,name=kdj,proto3" json:"kdj"`                   // 日线金叉提醒
	Surge       bool    `protobuf:"varint,4,opt,name=surge,proto3" json:"surge"`               // 盘中急涨提醒
	Slump       bool    `protobuf:"varint,5,opt,name=slump,proto3" json:"slump"`               // 盘中急跌提醒
	Ai          bool    `protobuf:"varint,6,opt,name=ai,proto3" json:"ai"`                     // AI智能提醒
	Public      bool    `protobuf:"varint,7,opt,name=public,proto3" json:"public"`             // 是否推荐给组织
	Up          float64 `protobuf:"fixed64,8,opt,name=up,proto3" json:"up"`                    // 估价涨到
	Down        float64 `protobuf:"fixed64,9,opt,name=down,proto3" json:"down"`                // 估价跌到
	UpPercent   float64 `protobuf:"fixed64,10,opt,name=upPercent,proto3" json:"upPercent"`     // 涨幅超
	DownPercent float64 `protobuf:"fixed64,11,opt,name=downPercent,proto3" json:"downPercent"` // 跌幅超
}

func (x *AddMyCodeInfo) Reset() {
	*x = AddMyCodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMyCodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMyCodeInfo) ProtoMessage() {}

func (x *AddMyCodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMyCodeInfo.ProtoReflect.Descriptor instead.
func (*AddMyCodeInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{55}
}

func (x *AddMyCodeInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AddMyCodeInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *AddMyCodeInfo) GetKdj() bool {
	if x != nil {
		return x.Kdj
	}
	return false
}

func (x *AddMyCodeInfo) GetSurge() bool {
	if x != nil {
		return x.Surge
	}
	return false
}

func (x *AddMyCodeInfo) GetSlump() bool {
	if x != nil {
		return x.Slump
	}
	return false
}

func (x *AddMyCodeInfo) GetAi() bool {
	if x != nil {
		return x.Ai
	}
	return false
}

func (x *AddMyCodeInfo) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *AddMyCodeInfo) GetUp() float64 {
	if x != nil {
		return x.Up
	}
	return 0
}

func (x *AddMyCodeInfo) GetDown() float64 {
	if x != nil {
		return x.Down
	}
	return 0
}

func (x *AddMyCodeInfo) GetUpPercent() float64 {
	if x != nil {
		return x.UpPercent
	}
	return 0
}

func (x *AddMyCodeInfo) GetDownPercent() float64 {
	if x != nil {
		return x.DownPercent
	}
	return 0
}

type GetMyCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AddMyCodeReq `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetMyCodeResp) Reset() {
	*x = GetMyCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyCodeResp) ProtoMessage() {}

func (x *GetMyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyCodeResp.ProtoReflect.Descriptor instead.
func (*GetMyCodeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{56}
}

func (x *GetMyCodeResp) GetList() []*AddMyCodeReq {
	if x != nil {
		return x.List
	}
	return nil
}

type Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string  `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`             // 股票代码
	SimpleCode string  `protobuf:"bytes,2,opt,name=simpleCode,proto3" json:"simpleCode"` // 股票代码简写
	Ext        string  `protobuf:"bytes,3,opt,name=ext,proto3" json:"ext"`               // 后缀
	Name       string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`             // 股票名字
	Price      float64 `protobuf:"fixed64,5,opt,name=price,proto3" json:"price"`         // 当前价格
	Key        string  `protobuf:"bytes,6,opt,name=key,proto3" json:"key"`               // 标签
	Desc       string  `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc"`             // 描述
	Percent    float64 `protobuf:"fixed64,8,opt,name=percent,proto3" json:"percent"`     // 百分比
	Color      string  `protobuf:"bytes,9,opt,name=color,proto3" json:"color"`           // 颜色
	Now        string  `protobuf:"bytes,10,opt,name=now,proto3" json:"now"`              // 当前时间
	Tag        string  `protobuf:"bytes,11,opt,name=tag,proto3" json:"tag"`              // 标记(min,daily)
}

func (x *Msg) Reset() {
	*x = Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Msg) ProtoMessage() {}

func (x *Msg) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Msg.ProtoReflect.Descriptor instead.
func (*Msg) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{57}
}

func (x *Msg) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Msg) GetSimpleCode() string {
	if x != nil {
		return x.SimpleCode
	}
	return ""
}

func (x *Msg) GetExt() string {
	if x != nil {
		return x.Ext
	}
	return ""
}

func (x *Msg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Msg) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Msg) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Msg) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Msg) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *Msg) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *Msg) GetNow() string {
	if x != nil {
		return x.Now
	}
	return ""
}

func (x *Msg) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type GetMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Msg `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 消息列表
}

func (x *GetMsgResp) Reset() {
	*x = GetMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMsgResp) ProtoMessage() {}

func (x *GetMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMsgResp.ProtoReflect.Descriptor instead.
func (*GetMsgResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{58}
}

func (x *GetMsgResp) GetList() []*Msg {
	if x != nil {
		return x.List
	}
	return nil
}

type HaveNewMsgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Badge bool `protobuf:"varint,1,opt,name=badge,proto3" json:"badge"` // 是否有新消息
}

func (x *HaveNewMsgResp) Reset() {
	*x = HaveNewMsgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HaveNewMsgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HaveNewMsgResp) ProtoMessage() {}

func (x *HaveNewMsgResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HaveNewMsgResp.ProtoReflect.Descriptor instead.
func (*HaveNewMsgResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{59}
}

func (x *HaveNewMsgResp) GetBadge() bool {
	if x != nil {
		return x.Badge
	}
	return false
}

type DeleteMyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
}

func (x *DeleteMyCodeReq) Reset() {
	*x = DeleteMyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMyCodeReq) ProtoMessage() {}

func (x *DeleteMyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMyCodeReq.ProtoReflect.Descriptor instead.
func (*DeleteMyCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{60}
}

func (x *DeleteMyCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AddGroupReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key"` // 分组key
}

func (x *AddGroupReq) Reset() {
	*x = AddGroupReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGroupReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGroupReq) ProtoMessage() {}

func (x *AddGroupReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGroupReq.ProtoReflect.Descriptor instead.
func (*AddGroupReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{61}
}

func (x *AddGroupReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type CodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
	Tp   string `protobuf:"bytes,2,opt,name=tp,proto3" json:"tp"`     // 类型(k30,daily)
	Days int64  `protobuf:"varint,3,opt,name=days,proto3" json:"days"`
	Flkx bool   `protobuf:"varint,4,opt,name=flkx,proto3" json:"flkx"` // 复利k线
	Fljx bool   `protobuf:"varint,5,opt,name=fljx,proto3" json:"fljx"` // 复利均线
}

func (x *CodeReq) Reset() {
	*x = CodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodeReq) ProtoMessage() {}

func (x *CodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodeReq.ProtoReflect.Descriptor instead.
func (*CodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{62}
}

func (x *CodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *CodeReq) GetTp() string {
	if x != nil {
		return x.Tp
	}
	return ""
}

func (x *CodeReq) GetDays() int64 {
	if x != nil {
		return x.Days
	}
	return 0
}

func (x *CodeReq) GetFlkx() bool {
	if x != nil {
		return x.Flkx
	}
	return false
}

func (x *CodeReq) GetFljx() bool {
	if x != nil {
		return x.Fljx
	}
	return false
}

type GetMyGroupResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`           // 股票代码
	GroupName string   `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName"` // 分组名
	UserName  string   `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName"`   // 推荐人
	Wi        int32    `protobuf:"varint,4,opt,name=wi,proto3" json:"wi"`              // 权重
	Group     []string `protobuf:"bytes,5,rep,name=group,proto3" json:"group"`         // 我的股票列表
}

func (x *GetMyGroupResp) Reset() {
	*x = GetMyGroupResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyGroupResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyGroupResp) ProtoMessage() {}

func (x *GetMyGroupResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyGroupResp.ProtoReflect.Descriptor instead.
func (*GetMyGroupResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{63}
}

func (x *GetMyGroupResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetMyGroupResp) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *GetMyGroupResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *GetMyGroupResp) GetWi() int32 {
	if x != nil {
		return x.Wi
	}
	return 0
}

func (x *GetMyGroupResp) GetGroup() []string {
	if x != nil {
		return x.Group
	}
	return nil
}

type UpsetGroupCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`           // 股票代码
	GroupName string `protobuf:"bytes,2,opt,name=groupName,proto3" json:"groupName"` // 分组名
	UserName  string `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName"`   // 推荐人
	IsAdd     bool   `protobuf:"varint,4,opt,name=isAdd,proto3" json:"isAdd"`        // 是否添加,false:删除
}

func (x *UpsetGroupCodeReq) Reset() {
	*x = UpsetGroupCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsetGroupCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsetGroupCodeReq) ProtoMessage() {}

func (x *UpsetGroupCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsetGroupCodeReq.ProtoReflect.Descriptor instead.
func (*UpsetGroupCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{64}
}

func (x *UpsetGroupCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UpsetGroupCodeReq) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *UpsetGroupCodeReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UpsetGroupCodeReq) GetIsAdd() bool {
	if x != nil {
		return x.IsAdd
	}
	return false
}

// GetDayResp 请求结构
type GetDayResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Group `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetDayResp) Reset() {
	*x = GetDayResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDayResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDayResp) ProtoMessage() {}

func (x *GetDayResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDayResp.ProtoReflect.Descriptor instead.
func (*GetDayResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{65}
}

func (x *GetDayResp) GetList() []*Group {
	if x != nil {
		return x.List
	}
	return nil
}

// GetHyCodeResp 请求结构
type GetHyCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Doc  []string `protobuf:"bytes,1,rep,name=doc,proto3" json:"doc"`   // 当日净流入
	List []*Group `protobuf:"bytes,2,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetHyCodeResp) Reset() {
	*x = GetHyCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyCodeResp) ProtoMessage() {}

func (x *GetHyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyCodeResp.ProtoReflect.Descriptor instead.
func (*GetHyCodeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{66}
}

func (x *GetHyCodeResp) GetDoc() []string {
	if x != nil {
		return x.Doc
	}
	return nil
}

func (x *GetHyCodeResp) GetList() []*Group {
	if x != nil {
		return x.List
	}
	return nil
}

type HyTimeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*anypb.Any `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *HyTimeData) Reset() {
	*x = HyTimeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HyTimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HyTimeData) ProtoMessage() {}

func (x *HyTimeData) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HyTimeData.ProtoReflect.Descriptor instead.
func (*HyTimeData) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{67}
}

func (x *HyTimeData) GetData() []*anypb.Any {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetHyTimeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int32 `protobuf:"varint,1,opt,name=num,proto3" json:"num"` // 时间
}

func (x *GetHyTimeReq) Reset() {
	*x = GetHyTimeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyTimeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyTimeReq) ProtoMessage() {}

func (x *GetHyTimeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyTimeReq.ProtoReflect.Descriptor instead.
func (*GetHyTimeReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{68}
}

func (x *GetHyTimeReq) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type GetHyTimeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string        `protobuf:"bytes,1,opt,name=title,proto3" json:"title"` // 标题
	List  []string      `protobuf:"bytes,2,rep,name=list,proto3" json:"list"`   // 显示的名字
	Data  []*HyTimeData `protobuf:"bytes,3,rep,name=data,proto3" json:"data"`
}

func (x *GetHyTimeResp) Reset() {
	*x = GetHyTimeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHyTimeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHyTimeResp) ProtoMessage() {}

func (x *GetHyTimeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHyTimeResp.ProtoReflect.Descriptor instead.
func (*GetHyTimeResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{69}
}

func (x *GetHyTimeResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetHyTimeResp) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetHyTimeResp) GetData() []*HyTimeData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetTouTiaoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []string `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 显示的名字
}

func (x *GetTouTiaoResp) Reset() {
	*x = GetTouTiaoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTouTiaoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTouTiaoResp) ProtoMessage() {}

func (x *GetTouTiaoResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTouTiaoResp.ProtoReflect.Descriptor instead.
func (*GetTouTiaoResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{70}
}

func (x *GetTouTiaoResp) GetList() []string {
	if x != nil {
		return x.List
	}
	return nil
}

type MyYdInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Key   string `protobuf:"bytes,3,opt,name=key,proto3" json:"key"`
	Desc  string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc"`
	Url   string `protobuf:"bytes,5,opt,name=url,proto3" json:"url"`
	Color string `protobuf:"bytes,6,opt,name=color,proto3" json:"color"`
	Tm    string `protobuf:"bytes,7,opt,name=tm,proto3" json:"tm"`
}

func (x *MyYdInfo) Reset() {
	*x = MyYdInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MyYdInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MyYdInfo) ProtoMessage() {}

func (x *MyYdInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MyYdInfo.ProtoReflect.Descriptor instead.
func (*MyYdInfo) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{71}
}

func (x *MyYdInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *MyYdInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MyYdInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MyYdInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *MyYdInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MyYdInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *MyYdInfo) GetTm() string {
	if x != nil {
		return x.Tm
	}
	return ""
}

type GetMyYdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MyYdInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetMyYdResp) Reset() {
	*x = GetMyYdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyYdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyYdResp) ProtoMessage() {}

func (x *GetMyYdResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyYdResp.ProtoReflect.Descriptor instead.
func (*GetMyYdResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{72}
}

func (x *GetMyYdResp) GetList() []*MyYdInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetMyYdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag"`
	Day string `protobuf:"bytes,2,opt,name=day,proto3" json:"day"`
}

func (x *GetMyYdReq) Reset() {
	*x = GetMyYdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyYdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyYdReq) ProtoMessage() {}

func (x *GetMyYdReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyYdReq.ProtoReflect.Descriptor instead.
func (*GetMyYdReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{73}
}

func (x *GetMyYdReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GetMyYdReq) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

type GetYhxgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hexinv string `protobuf:"bytes,1,opt,name=hexinv,proto3" json:"hexinv"` // 核心
}

func (x *GetYhxgReq) Reset() {
	*x = GetYhxgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetYhxgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetYhxgReq) ProtoMessage() {}

func (x *GetYhxgReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetYhxgReq.ProtoReflect.Descriptor instead.
func (*GetYhxgReq) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{74}
}

func (x *GetYhxgReq) GetHexinv() string {
	if x != nil {
		return x.Hexinv
	}
	return ""
}

// GetHotYzCodesResp 请求结构
type GetHotYzCodesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List       []*Group               `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`             // 列表
	HyListUp   []*common.SimpSharInfo `protobuf:"bytes,2,rep,name=hyListUp,proto3" json:"hyListUp"`     // 行业信息
	HyListDown []*common.SimpSharInfo `protobuf:"bytes,3,rep,name=hyListDown,proto3" json:"hyListDown"` // 行业信息
	Tags       []*TagInfo             `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags"`             // 行业
	Tags1      []*TagInfo             `protobuf:"bytes,6,rep,name=tags1,proto3" json:"tags1"`           // 概念
}

func (x *GetHotYzCodesResp) Reset() {
	*x = GetHotYzCodesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_shares_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHotYzCodesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHotYzCodesResp) ProtoMessage() {}

func (x *GetHotYzCodesResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_shares_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHotYzCodesResp.ProtoReflect.Descriptor instead.
func (*GetHotYzCodesResp) Descriptor() ([]byte, []int) {
	return file_shares_shares_proto_rawDescGZIP(), []int{75}
}

func (x *GetHotYzCodesResp) GetList() []*Group {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetHotYzCodesResp) GetHyListUp() []*common.SimpSharInfo {
	if x != nil {
		return x.HyListUp
	}
	return nil
}

func (x *GetHotYzCodesResp) GetHyListDown() []*common.SimpSharInfo {
	if x != nil {
		return x.HyListDown
	}
	return nil
}

func (x *GetHotYzCodesResp) GetTags() []*TagInfo {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *GetHotYzCodesResp) GetTags1() []*TagInfo {
	if x != nil {
		return x.Tags1
	}
	return nil
}

var File_shares_shares_proto protoreflect.FileDescriptor

var file_shares_shares_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x1a, 0x1a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6d, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6c, 0x6d, 0x78, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x56, 0x0a, 0x08, 0x43, 0x6c, 0x6d,
	0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x68, 0x61, 0x76,
	0x65, 0x22, 0x3e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x5a, 0x79, 0x62, 0x48, 0x79, 0x4b, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f,
	0x77, 0x43, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x77, 0x43,
	0x64, 0x22, 0xcf, 0x02, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x5a, 0x79, 0x62, 0x48, 0x79, 0x4b, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2a, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x5a, 0x79, 0x62, 0x48, 0x79, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x2e, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x25,
	0x0a, 0x05, 0x74, 0x61, 0x67, 0x73, 0x31, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x74, 0x61, 0x67, 0x73, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6a, 0x6c, 0x6d, 0x69, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x63, 0x6a, 0x6c, 0x6d, 0x69, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6a, 0x6c, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x63,
	0x6a, 0x6c, 0x6d, 0x61, 0x78, 0x12, 0x30, 0x0a, 0x07, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x31,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x48, 0x79, 0x4d, 0x6d, 0x61, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x52, 0x07,
	0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x31, 0x12, 0x30, 0x0a, 0x07, 0x74, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x79, 0x4d, 0x6d, 0x61, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x07, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x32, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x54, 0x6d, 0x22, 0x85, 0x01, 0x0a, 0x07, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x6e, 0x0a, 0x0e, 0x5a,
	0x79, 0x62, 0x48, 0x79, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x02, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6a, 0x6c,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x63, 0x6a, 0x6c, 0x22, 0x23, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4d, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x72, 0x74,
	0x22, 0x82, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4d, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x04, 0x64, 0x6f,
	0x63, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x4d, 0x72, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x04, 0x64, 0x6f, 0x63, 0x73, 0x12, 0x25,
	0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4d, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x05,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x7f, 0x0a, 0x07, 0x4d, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x26,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xdc, 0x01, 0x0a, 0x06, 0x4d, 0x72, 0x74, 0x4c, 0x6f,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x6f, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x64, 0x6f,
	0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x64, 0x6f, 0x63, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x83, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x73, 0x65, 0x74, 0x4d,
	0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x72, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03,
	0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x22, 0x35, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x4d, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x72, 0x74, 0x22, 0x66, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4d, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x73, 0x4d, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4d, 0x79, 0x22,
	0x35, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4d, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4d, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x07, 0x4d, 0x72, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4d,
	0x72, 0x74, 0x44, 0x6f, 0x63, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x4d, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4d, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x76, 0x65,
	0x4d, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x76, 0x65, 0x4d, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x35, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6a,
	0x6a, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x48, 0x65,
	0x6a, 0x6a, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x51, 0x0a,
	0x09, 0x48, 0x65, 0x6a, 0x6a, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6d,
	0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6d, 0x53, 0x74, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x22, 0x48, 0x0a, 0x06, 0x4d, 0x72, 0x74, 0x44, 0x6f, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x63, 0x0a, 0x09, 0x4b, 0x6c,
	0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x64, 0x61, 0x74, 0x61, 0x31, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x64, 0x61,
	0x74, 0x61, 0x31, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x32, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x33, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x64, 0x61, 0x74, 0x61, 0x33, 0x22,
	0x1f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x59, 0x79, 0x71, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73,
	0x22, 0xfe, 0x04, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x59, 0x79, 0x71, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x67, 0x12,
	0x21, 0x0a, 0x02, 0x62, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02,
	0x62, 0x78, 0x12, 0x25, 0x0a, 0x04, 0x72, 0x7a, 0x72, 0x71, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x72, 0x7a, 0x72, 0x71, 0x12, 0x23, 0x0a, 0x03, 0x6d, 0x6c, 0x66,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x6d, 0x6c, 0x66, 0x12, 0x23,
	0x0a, 0x03, 0x63, 0x70, 0x69, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03,
	0x63, 0x70, 0x69, 0x12, 0x23, 0x0a, 0x03, 0x70, 0x70, 0x69, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x03, 0x70, 0x70, 0x69, 0x12, 0x23, 0x0a, 0x03, 0x67, 0x64, 0x70, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4b,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x67, 0x64, 0x70, 0x12, 0x23, 0x0a,
	0x03, 0x70, 0x6d, 0x69, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x70,
	0x6d, 0x69, 0x12, 0x29, 0x0a, 0x06, 0x71, 0x79, 0x6a, 0x71, 0x7a, 0x73, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x6c, 0x69, 0x6e,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x71, 0x79, 0x6a, 0x71, 0x7a, 0x73, 0x12, 0x27, 0x0a,
	0x05, 0x67, 0x79, 0x7a, 0x6a, 0x7a, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x05, 0x67, 0x79, 0x7a, 0x6a, 0x7a, 0x12, 0x27, 0x0a, 0x05, 0x78, 0x66, 0x7a, 0x78, 0x78, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4b,
	0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x78, 0x66, 0x7a, 0x78, 0x78, 0x12,
	0x21, 0x0a, 0x02, 0x6d, 0x32, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02,
	0x6d, 0x32, 0x12, 0x27, 0x0a, 0x05, 0x68, 0x67, 0x6a, 0x63, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x68, 0x67, 0x6a, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x03, 0x66,
	0x64, 0x69, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x66, 0x64, 0x69,
	0x12, 0x25, 0x0a, 0x04, 0x78, 0x7a, 0x78, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x78, 0x7a, 0x78, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x65, 0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x22, 0x98, 0x03, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x4b, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x67, 0x6a, 0x68, 0x6a, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x67, 0x6a, 0x68, 0x6a,
	0x12, 0x10, 0x0a, 0x03, 0x67, 0x70, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x67,
	0x70, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x68, 0x78, 0x18, 0x06, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x03, 0x68, 0x68, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x7a, 0x73, 0x78, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x03, 0x7a, 0x73, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x71, 0x64, 0x69, 0x69, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x71, 0x64, 0x69, 0x69, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f,
	0x66, 0x18, 0x09, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x6c, 0x6f, 0x66, 0x12, 0x10, 0x0a, 0x03,
	0x66, 0x6f, 0x66, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x66, 0x6f, 0x66, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x31, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x6c, 0x79, 0x63, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x79, 0x6c, 0x79, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x79, 0x6c,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x79, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x32, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x78, 0x6c, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x03, 0x67, 0x78, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x76, 0x70, 0x73, 0x18, 0x10, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x04, 0x62, 0x76, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x7a, 0x70, 0x67,
	0x18, 0x11, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x7a, 0x70, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x70, 0x78, 0x18, 0x12, 0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x70, 0x78, 0x12, 0x1e, 0x0a, 0x0a,
	0x6d, 0x7a, 0x70, 0x78, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x7a, 0x70, 0x78, 0x62, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xde, 0x01, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4a, 0x67, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x67, 0x68, 0x7a, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x04, 0x6a, 0x67, 0x68, 0x7a, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x6a, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x6a, 0x6a, 0x12, 0x12, 0x0a, 0x04, 0x71, 0x66, 0x69,
	0x69, 0x18, 0x06, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x71, 0x66, 0x69, 0x69, 0x12, 0x0e, 0x0a,
	0x02, 0x73, 0x62, 0x18, 0x07, 0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x73, 0x62, 0x12, 0x0e, 0x0a,
	0x02, 0x62, 0x78, 0x18, 0x08, 0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x62, 0x78, 0x12, 0x0e, 0x0a,
	0x02, 0x78, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x78, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x71, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x71, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x71, 0x74, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x71, 0x74, 0x22, 0x3c, 0x0a,
	0x12, 0x45, 0x63, 0x68, 0x61, 0x72, 0x74, 0x73, 0x4b, 0x65, 0x79, 0x4c, 0x69, 0x6e, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x3b, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x48, 0x6f, 0x74, 0x48, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14,
	0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22, 0x3a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x74, 0x48, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x48, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x0a, 0x48, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x3d, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x22, 0xbb, 0x05, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x4c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x05, 0x6b, 0x4c, 0x69, 0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x78,
	0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x62,
	0x78, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x78, 0x6a, 0x6c,
	0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x62, 0x78, 0x6a, 0x6c, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x78, 0x6a, 0x6c, 0x72, 0x35, 0x18, 0x05, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06,
	0x62, 0x78, 0x6a, 0x6c, 0x72, 0x35, 0x12, 0x18, 0x0a, 0x07, 0x79, 0x68, 0x46, 0x6f, 0x63, 0x75,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x01, 0x52, 0x07, 0x79, 0x68, 0x46, 0x6f, 0x63, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x67,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x7a, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x09, 0x72, 0x7a, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x7a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x07, 0x72, 0x7a, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x78, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x02, 0x71, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x7a, 0x64, 0x18,
	0x0d, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x67, 0x7a, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x79,
	0x79, 0x78, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x66, 0x79, 0x79, 0x78, 0x12, 0x12,
	0x0a, 0x04, 0x7a, 0x6c, 0x6a, 0x6b, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x7a, 0x6c,
	0x6a, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x66, 0x78, 0x18, 0x10, 0x20, 0x03, 0x28, 0x01, 0x52, 0x02,
	0x66, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x64, 0x65, 0x18, 0x11, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x03, 0x64, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x61, 0x76, 0x65, 0x42, 0x78, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61, 0x76, 0x65, 0x42, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x61, 0x76, 0x65, 0x52, 0x7a, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68, 0x61,
	0x76, 0x65, 0x52, 0x7a, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x64,
	0x65, 0x6a, 0x6c, 0x72, 0x18, 0x15, 0x20, 0x03, 0x28, 0x01, 0x52, 0x06, 0x64, 0x64, 0x65, 0x6a,
	0x6c, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x64, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x03, 0x67, 0x64, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x64, 0x73, 0x50, 0x6c, 0x18, 0x17, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x64, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x64, 0x73, 0x50, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x68, 0x69, 0x70, 0x18, 0x18, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x63, 0x68, 0x69, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x7a, 0x79, 0x62, 0x6c, 0x18, 0x19, 0x20, 0x03, 0x28, 0x01, 0x52, 0x04, 0x7a,
	0x79, 0x62, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x7a, 0x6c, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x02, 0x7a, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x6a, 0x67, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x02, 0x6a, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x71, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1c,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x07, 0x72, 0x71, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x61, 0x76, 0x65, 0x52, 0x71, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x68,
	0x61, 0x76, 0x65, 0x52, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x6a, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x01, 0x52, 0x09, 0x6a, 0x6a, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x62, 0x6a, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x03, 0x6d, 0x62, 0x6a, 0x22, 0x31, 0x0a, 0x07, 0x47, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64,
	0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x08, 0x47, 0x5a, 0x50,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6b,
	0x4c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x6b, 0x4c, 0x69, 0x6e,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x30, 0x18, 0x03, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03,
	0x70, 0x65, 0x30, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x31, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x03, 0x70, 0x65, 0x31, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x32, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x01, 0x52, 0x03, 0x70, 0x65, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x33, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x70, 0x65, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x34,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x70, 0x65, 0x34, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x76, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x68, 0x61, 0x76, 0x65, 0x22, 0x61, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x48, 0x79, 0x4d, 0x6d,
	0x61, 0x64, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x48, 0x79, 0x4d, 0x6d, 0x61, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x79, 0x30, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x69, 0x6c, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x69, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x68, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x28, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x23, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d,
	0x79, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x20, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x48, 0x79, 0x52, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x79, 0x73, 0x22,
	0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x48, 0x79, 0x52, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x53, 0x68, 0x61, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a, 0x0e, 0x44, 0x61, 0x69, 0x6c,
	0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x79, 0x53, 0x74, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x79, 0x53,
	0x74, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69,
	0x6d, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xab, 0x03, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6a, 0x6c, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6a, 0x6c, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67,
	0x12, 0x1f, 0x0a, 0x02, 0x68, 0x79, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x68,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x69,
	0x6e, 0x48, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d,
	0x61, 0x69, 0x6e, 0x48, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x65, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x70, 0x65, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x79, 0x44, 0x6a, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x79, 0x44, 0x6a, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x79, 0x44,
	0x6a, 0x44, 0x6f, 0x63, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x68, 0x79, 0x44, 0x6a,
	0x44, 0x6f, 0x63, 0x22, 0xbf, 0x04, 0x0a, 0x11, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72,
	0x63, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x76,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x12,
	0x22, 0x0a, 0x0c, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x74, 0x75, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x72, 0x52,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x02, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x65, 0x74, 0x74, 0x6d, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x65, 0x74, 0x74, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x62, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x70, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x61, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x63, 0x61,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x7a, 0x6c, 0x6a, 0x6c, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x7a, 0x6c, 0x6a, 0x6c, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x63, 0x64, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x6d, 0x61, 0x63, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x66,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x69, 0x66, 0x12, 0x10, 0x0a, 0x03, 0x64,
	0x65, 0x61, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x64, 0x65, 0x61, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x61, 0x78, 0x18, 0x17, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x69,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x30, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x64, 0x61, 0x79, 0x30, 0x22, 0x43, 0x0a, 0x05, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x31, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x31, 0x0a,
	0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x22, 0x34, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x1f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x10, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x38, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2c, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x4c, 0x0a, 0x0c, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xd0, 0x03,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x64, 0x6a, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x64, 0x6a, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x64,
	0x6a, 0x32, 0x30, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6b, 0x64, 0x6a, 0x32, 0x30,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x72, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x73, 0x75, 0x72, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c, 0x75, 0x6d, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x6c, 0x75, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x61, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x69, 0x12, 0x16, 0x0a, 0x06,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x02, 0x75, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x69, 0x6c,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x69, 0x6c, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x65, 0x78, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x70, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x70, 0x54, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x04, 0x75, 0x70, 0x54, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x6f, 0x77,
	0x6e, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x77, 0x6e,
	0x54, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x6f,
	0x22, 0x39, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x22, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x83, 0x02, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x64, 0x6a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x64, 0x6a, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x75, 0x72, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x75,
	0x72, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c, 0x75, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x73, 0x6c, 0x75, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x61, 0x69, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x61, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x12, 0x0e, 0x0a, 0x02, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x75,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x04, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x75, 0x70, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0xef, 0x01, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x78, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x6f, 0x77,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x22, 0x2d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0x26, 0x0a, 0x0e, 0x48, 0x61, 0x76, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x62, 0x61, 0x64, 0x67, 0x65, 0x22, 0x25, 0x0a, 0x0f, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x1f, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x69, 0x0a, 0x07, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x64, 0x61, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x6b, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x66, 0x6c, 0x6b, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x6a, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x6c, 0x6a, 0x78, 0x22, 0x84, 0x01, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x77, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x77, 0x69, 0x12, 0x14, 0x0a,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x22, 0x77, 0x0a, 0x11, 0x55, 0x70, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x41, 0x64, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x41, 0x64, 0x64, 0x22, 0x2f, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x44, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x48, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63,
	0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x36, 0x0a, 0x0a, 0x48, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x20, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x48, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x61, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x48, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x48, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x54, 0x69, 0x61, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x08, 0x4d, 0x79, 0x59, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6d, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6d, 0x22, 0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x59, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x4d, 0x79, 0x59, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x30,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x59, 0x64, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x61, 0x79,
	0x22, 0x24, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x59, 0x68, 0x78, 0x67, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x68, 0x65, 0x78, 0x69, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x68, 0x65, 0x78, 0x69, 0x6e, 0x76, 0x22, 0xea, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x48, 0x6f,
	0x74, 0x59, 0x7a, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x21, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x08, 0x68, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x70, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x6d, 0x70, 0x53,
	0x68, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x68, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x55,
	0x70, 0x12, 0x34, 0x0a, 0x0a, 0x68, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x69, 0x6d, 0x70, 0x53, 0x68, 0x61, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x68, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x54,
	0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x25, 0x0a, 0x05,
	0x74, 0x61, 0x67, 0x73, 0x31, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x61,
	0x67, 0x73, 0x31, 0x32, 0xf5, 0x0f, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x31,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x0f, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x55, 0x70,
	0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x04, 0x47,
	0x65, 0x74, 0x73, 0x12, 0x0f, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x4d, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x64,
	0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x2d, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x35,
	0x0a, 0x0a, 0x48, 0x61, 0x76, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x73, 0x67, 0x12, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x48, 0x61, 0x76, 0x65, 0x4e, 0x65, 0x77, 0x4d, 0x73, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x30, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x13, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71,
	0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x2f, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x12, 0x0f, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x2f, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x12, 0x0f, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x12, 0x0f, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x05, 0x47, 0x65, 0x74, 0x55, 0x70, 0x12, 0x0f, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6a, 0x6a, 0x77, 0x12,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x65, 0x6a, 0x6a, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6d, 0x78, 0x12, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x13, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x6d, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x59, 0x64, 0x12,
	0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x59, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x59, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x48, 0x79, 0x52, 0x6d, 0x12, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x79, 0x52, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x79, 0x52, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x33, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65,
	0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x79, 0x54, 0x65, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x48, 0x79, 0x4d, 0x6d, 0x61, 0x64,
	0x64, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x79,
	0x4d, 0x6d, 0x61, 0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x79, 0x4d, 0x6d, 0x61, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x48, 0x79, 0x5a, 0x79, 0x62, 0x12, 0x15,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x79, 0x4d, 0x6d, 0x61,
	0x64, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x48, 0x79, 0x4d, 0x6d, 0x61, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x49, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4b, 0x6c, 0x69, 0x6e,
	0x65, 0x12, 0x19, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4b,
	0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x46, 0x75, 0x6e, 0x64, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x4b, 0x6c, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x75, 0x6e, 0x64, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x3b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x47, 0x7a, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x12,
	0x19, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x47, 0x5a, 0x50, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x48, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x48, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x74, 0x48, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x59, 0x79, 0x71, 0x12, 0x11, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x59, 0x79, 0x71, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x59, 0x79, 0x71,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x72, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x72, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4d, 0x72, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x0c, 0x55, 0x70, 0x73, 0x65, 0x74, 0x4d, 0x72, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x55, 0x70,
	0x73, 0x65, 0x74, 0x4d, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x72, 0x74, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x4d, 0x72, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x5a, 0x79, 0x62, 0x48, 0x79, 0x4b,
	0x6c, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x5a, 0x79, 0x62, 0x48, 0x79, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x19,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x5a, 0x79, 0x62, 0x48, 0x79,
	0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x72,
	0x70, 0x63, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_shares_shares_proto_rawDescOnce sync.Once
	file_shares_shares_proto_rawDescData = file_shares_shares_proto_rawDesc
)

func file_shares_shares_proto_rawDescGZIP() []byte {
	file_shares_shares_proto_rawDescOnce.Do(func() {
		file_shares_shares_proto_rawDescData = protoimpl.X.CompressGZIP(file_shares_shares_proto_rawDescData)
	})
	return file_shares_shares_proto_rawDescData
}

var file_shares_shares_proto_msgTypes = make([]protoimpl.MessageInfo, 76)
var file_shares_shares_proto_goTypes = []interface{}{
	(*GetClmxResp)(nil),         // 0: shares.GetClmxResp
	(*ClmxInfo)(nil),            // 1: shares.ClmxInfo
	(*GetZybHyKlineReq)(nil),    // 2: shares.GetZybHyKlineReq
	(*GetZybHyKlineResp)(nil),   // 3: shares.GetZybHyKlineResp
	(*TagInfo)(nil),             // 4: shares.TagInfo
	(*ZybHyDailyInfo)(nil),      // 5: shares.ZybHyDailyInfo
	(*GetMrtDetailReq)(nil),     // 6: shares.GetMrtDetailReq
	(*GetMrtDetailResp)(nil),    // 7: shares.GetMrtDetailResp
	(*MrtCode)(nil),             // 8: shares.MrtCode
	(*MrtLog)(nil),              // 9: shares.MrtLog
	(*UpsetMrtCodeReq)(nil),     // 10: shares.UpsetMrtCodeReq
	(*GetMrtCodeReq)(nil),       // 11: shares.GetMrtCodeReq
	(*GetMrtCodeResp)(nil),      // 12: shares.GetMrtCodeResp
	(*GetMrtListReq)(nil),       // 13: shares.GetMrtListReq
	(*GetMrtListResp)(nil),      // 14: shares.GetMrtListResp
	(*MrtInfo)(nil),             // 15: shares.MrtInfo
	(*GetHejjwResp)(nil),        // 16: shares.GetHejjwResp
	(*HejjwInfo)(nil),           // 17: shares.HejjwInfo
	(*MrtDoc)(nil),              // 18: shares.MrtDoc
	(*KlineInfo)(nil),           // 19: shares.KlineInfo
	(*GetYyqReq)(nil),           // 20: shares.GetYyqReq
	(*GetYyqResp)(nil),          // 21: shares.GetYyqResp
	(*GetFundKlineResp)(nil),    // 22: shares.GetFundKlineResp
	(*GetJgKlineResp)(nil),      // 23: shares.GetJgKlineResp
	(*EchartsKeyLineInfo)(nil),  // 24: shares.EchartsKeyLineInfo
	(*GetHotHyNameReq)(nil),     // 25: shares.GetHotHyNameReq
	(*GetHotHyNameResp)(nil),    // 26: shares.GetHotHyNameResp
	(*HyCodeInfo)(nil),          // 27: shares.HyCodeInfo
	(*GetSharesKlineReq)(nil),   // 28: shares.GetSharesKlineReq
	(*GetSharesKlineResp)(nil),  // 29: shares.GetSharesKlineResp
	(*GdsInfo)(nil),             // 30: shares.GdsInfo
	(*GZPeResp)(nil),            // 31: shares.GZPeResp
	(*GetHyMmaddReq)(nil),       // 32: shares.GetHyMmaddReq
	(*GetHyMmaddResp)(nil),      // 33: shares.GetHyMmaddResp
	(*GetMyTeamDetailReq)(nil),  // 34: shares.GetMyTeamDetailReq
	(*GetMyTeamDetailResp)(nil), // 35: shares.GetMyTeamDetailResp
	(*GetMyTeamResp)(nil),       // 36: shares.GetMyTeamResp
	(*GetHyRmReq)(nil),          // 37: shares.GetHyRmReq
	(*GetHyRmResp)(nil),         // 38: shares.GetHyRmResp
	(*DailyCheckInfo)(nil),      // 39: shares.DailyCheckInfo
	(*GetDailyCheckResp)(nil),   // 40: shares.GetDailyCheckResp
	(*SharesInfo)(nil),          // 41: shares.SharesInfo
	(*SharesInfoDetails)(nil),   // 42: shares.SharesInfoDetails
	(*Group)(nil),               // 43: shares.Group
	(*GetGroupResp)(nil),        // 44: shares.GetGroupResp
	(*SearchReq)(nil),           // 45: shares.SearchReq
	(*SearchResp)(nil),          // 46: shares.SearchResp
	(*GetsReq)(nil),             // 47: shares.GetsReq
	(*SimpleSharesInfo)(nil),    // 48: shares.SimpleSharesInfo
	(*GetsResp)(nil),            // 49: shares.GetsResp
	(*CodeNameInfo)(nil),        // 50: shares.CodeNameInfo
	(*GetAllCodeNameResp)(nil),  // 51: shares.GetAllCodeNameResp
	(*AddMyCodeReq)(nil),        // 52: shares.AddMyCodeReq
	(*AddMyCodeResp)(nil),       // 53: shares.AddMyCodeResp
	(*GetMyCodeReq)(nil),        // 54: shares.GetMyCodeReq
	(*AddMyCodeInfo)(nil),       // 55: shares.AddMyCodeInfo
	(*GetMyCodeResp)(nil),       // 56: shares.GetMyCodeResp
	(*Msg)(nil),                 // 57: shares.Msg
	(*GetMsgResp)(nil),          // 58: shares.GetMsgResp
	(*HaveNewMsgResp)(nil),      // 59: shares.HaveNewMsgResp
	(*DeleteMyCodeReq)(nil),     // 60: shares.DeleteMyCodeReq
	(*AddGroupReq)(nil),         // 61: shares.AddGroupReq
	(*CodeReq)(nil),             // 62: shares.CodeReq
	(*GetMyGroupResp)(nil),      // 63: shares.GetMyGroupResp
	(*UpsetGroupCodeReq)(nil),   // 64: shares.UpsetGroupCodeReq
	(*GetDayResp)(nil),          // 65: shares.GetDayResp
	(*GetHyCodeResp)(nil),       // 66: shares.GetHyCodeResp
	(*HyTimeData)(nil),          // 67: shares.HyTimeData
	(*GetHyTimeReq)(nil),        // 68: shares.GetHyTimeReq
	(*GetHyTimeResp)(nil),       // 69: shares.GetHyTimeResp
	(*GetTouTiaoResp)(nil),      // 70: shares.GetTouTiaoResp
	(*MyYdInfo)(nil),            // 71: shares.MyYdInfo
	(*GetMyYdResp)(nil),         // 72: shares.GetMyYdResp
	(*GetMyYdReq)(nil),          // 73: shares.GetMyYdReq
	(*GetYhxgReq)(nil),          // 74: shares.GetYhxgReq
	(*GetHotYzCodesResp)(nil),   // 75: shares.GetHotYzCodesResp
	(*common.SimpSharInfo)(nil), // 76: common.SimpSharInfo
	(*anypb.Any)(nil),           // 77: google.protobuf.Any
	(*common.Empty)(nil),        // 78: common.Empty
}
var file_shares_shares_proto_depIdxs = []int32{
	1,  // 0: shares.GetClmxResp.list:type_name -> shares.ClmxInfo
	5,  // 1: shares.GetZybHyKlineResp.list:type_name -> shares.ZybHyDailyInfo
	4,  // 2: shares.GetZybHyKlineResp.tags:type_name -> shares.TagInfo
	4,  // 3: shares.GetZybHyKlineResp.tags1:type_name -> shares.TagInfo
	33, // 4: shares.GetZybHyKlineResp.tsList1:type_name -> shares.GetHyMmaddResp
	33, // 5: shares.GetZybHyKlineResp.tsList2:type_name -> shares.GetHyMmaddResp
	15, // 6: shares.GetMrtDetailResp.info:type_name -> shares.MrtInfo
	9,  // 7: shares.GetMrtDetailResp.docs:type_name -> shares.MrtLog
	8,  // 8: shares.GetMrtDetailResp.codes:type_name -> shares.MrtCode
	41, // 9: shares.MrtCode.info:type_name -> shares.SharesInfo
	15, // 10: shares.GetMrtListResp.list:type_name -> shares.MrtInfo
	18, // 11: shares.MrtInfo.doc:type_name -> shares.MrtDoc
	17, // 12: shares.GetHejjwResp.list:type_name -> shares.HejjwInfo
	19, // 13: shares.GetYyqResp.bx:type_name -> shares.KlineInfo
	19, // 14: shares.GetYyqResp.rzrq:type_name -> shares.KlineInfo
	19, // 15: shares.GetYyqResp.mlf:type_name -> shares.KlineInfo
	19, // 16: shares.GetYyqResp.cpi:type_name -> shares.KlineInfo
	19, // 17: shares.GetYyqResp.ppi:type_name -> shares.KlineInfo
	19, // 18: shares.GetYyqResp.gdp:type_name -> shares.KlineInfo
	19, // 19: shares.GetYyqResp.pmi:type_name -> shares.KlineInfo
	19, // 20: shares.GetYyqResp.qyjqzs:type_name -> shares.KlineInfo
	19, // 21: shares.GetYyqResp.gyzjz:type_name -> shares.KlineInfo
	19, // 22: shares.GetYyqResp.xfzxx:type_name -> shares.KlineInfo
	19, // 23: shares.GetYyqResp.m2:type_name -> shares.KlineInfo
	19, // 24: shares.GetYyqResp.hgjck:type_name -> shares.KlineInfo
	19, // 25: shares.GetYyqResp.fdi:type_name -> shares.KlineInfo
	19, // 26: shares.GetYyqResp.xzxd:type_name -> shares.KlineInfo
	27, // 27: shares.GetHotHyNameResp.list:type_name -> shares.HyCodeInfo
	30, // 28: shares.GetSharesKlineResp.gdsPl:type_name -> shares.GdsInfo
	41, // 29: shares.GetHyMmaddResp.list:type_name -> shares.SharesInfo
	41, // 30: shares.GetMyTeamDetailResp.list:type_name -> shares.SharesInfo
	76, // 31: shares.GetHyRmResp.list:type_name -> common.SimpSharInfo
	39, // 32: shares.GetDailyCheckResp.list:type_name -> shares.DailyCheckInfo
	4,  // 33: shares.SharesInfo.hy:type_name -> shares.TagInfo
	41, // 34: shares.Group.list:type_name -> shares.SharesInfo
	43, // 35: shares.GetGroupResp.list:type_name -> shares.Group
	41, // 36: shares.SearchResp.info:type_name -> shares.SharesInfo
	48, // 37: shares.GetsResp.list:type_name -> shares.SimpleSharesInfo
	50, // 38: shares.GetAllCodeNameResp.list:type_name -> shares.CodeNameInfo
	52, // 39: shares.GetMyCodeResp.list:type_name -> shares.AddMyCodeReq
	57, // 40: shares.GetMsgResp.list:type_name -> shares.Msg
	43, // 41: shares.GetDayResp.list:type_name -> shares.Group
	43, // 42: shares.GetHyCodeResp.list:type_name -> shares.Group
	77, // 43: shares.HyTimeData.data:type_name -> google.protobuf.Any
	67, // 44: shares.GetHyTimeResp.data:type_name -> shares.HyTimeData
	71, // 45: shares.GetMyYdResp.list:type_name -> shares.MyYdInfo
	43, // 46: shares.GetHotYzCodesResp.list:type_name -> shares.Group
	76, // 47: shares.GetHotYzCodesResp.hyListUp:type_name -> common.SimpSharInfo
	76, // 48: shares.GetHotYzCodesResp.hyListDown:type_name -> common.SimpSharInfo
	4,  // 49: shares.GetHotYzCodesResp.tags:type_name -> shares.TagInfo
	4,  // 50: shares.GetHotYzCodesResp.tags1:type_name -> shares.TagInfo
	78, // 51: shares.shares.GetGroup:input_type -> common.Empty
	62, // 52: shares.shares.GetMyGroup:input_type -> shares.CodeReq
	64, // 53: shares.shares.UpsetGroupCode:input_type -> shares.UpsetGroupCodeReq
	45, // 54: shares.shares.Search:input_type -> shares.SearchReq
	47, // 55: shares.shares.Gets:input_type -> shares.GetsReq
	78, // 56: shares.shares.GetAllCodeName:input_type -> common.Empty
	52, // 57: shares.shares.AddMyCode:input_type -> shares.AddMyCodeReq
	54, // 58: shares.shares.GetMyCode:input_type -> shares.GetMyCodeReq
	78, // 59: shares.shares.GetMsg:input_type -> common.Empty
	78, // 60: shares.shares.HaveNewMsg:input_type -> common.Empty
	60, // 61: shares.shares.DeleteMyCode:input_type -> shares.DeleteMyCodeReq
	61, // 62: shares.shares.AddGroup:input_type -> shares.AddGroupReq
	62, // 63: shares.shares.GetDay:input_type -> shares.CodeReq
	62, // 64: shares.shares.GetVip:input_type -> shares.CodeReq
	62, // 65: shares.shares.GetFl:input_type -> shares.CodeReq
	62, // 66: shares.shares.GetUp:input_type -> shares.CodeReq
	78, // 67: shares.shares.GetHejjw:input_type -> common.Empty
	78, // 68: shares.shares.GetDailyCheck:input_type -> common.Empty
	78, // 69: shares.shares.GetClmx:input_type -> common.Empty
	73, // 70: shares.shares.GetMyYd:input_type -> shares.GetMyYdReq
	37, // 71: shares.shares.GetHyRm:input_type -> shares.GetHyRmReq
	78, // 72: shares.shares.GetMyTeam:input_type -> common.Empty
	34, // 73: shares.shares.GetMyTeamDetail:input_type -> shares.GetMyTeamDetailReq
	32, // 74: shares.shares.GetHyMmadd:input_type -> shares.GetHyMmaddReq
	32, // 75: shares.shares.GetHyZyb:input_type -> shares.GetHyMmaddReq
	28, // 76: shares.shares.GetSharesKline:input_type -> shares.GetSharesKlineReq
	28, // 77: shares.shares.GetFundKline:input_type -> shares.GetSharesKlineReq
	28, // 78: shares.shares.GetGzKline:input_type -> shares.GetSharesKlineReq
	25, // 79: shares.shares.GetHotHyName:input_type -> shares.GetHotHyNameReq
	20, // 80: shares.shares.GetYyq:input_type -> shares.GetYyqReq
	13, // 81: shares.shares.GetMrtList:input_type -> shares.GetMrtListReq
	11, // 82: shares.shares.GetMrtCode:input_type -> shares.GetMrtCodeReq
	10, // 83: shares.shares.UpsetMrtCode:input_type -> shares.UpsetMrtCodeReq
	6,  // 84: shares.shares.GetMrtDetail:input_type -> shares.GetMrtDetailReq
	2,  // 85: shares.shares.GetZybHyKline:input_type -> shares.GetZybHyKlineReq
	44, // 86: shares.shares.GetGroup:output_type -> shares.GetGroupResp
	63, // 87: shares.shares.GetMyGroup:output_type -> shares.GetMyGroupResp
	78, // 88: shares.shares.UpsetGroupCode:output_type -> common.Empty
	46, // 89: shares.shares.Search:output_type -> shares.SearchResp
	49, // 90: shares.shares.Gets:output_type -> shares.GetsResp
	51, // 91: shares.shares.GetAllCodeName:output_type -> shares.GetAllCodeNameResp
	53, // 92: shares.shares.AddMyCode:output_type -> shares.AddMyCodeResp
	56, // 93: shares.shares.GetMyCode:output_type -> shares.GetMyCodeResp
	58, // 94: shares.shares.GetMsg:output_type -> shares.GetMsgResp
	59, // 95: shares.shares.HaveNewMsg:output_type -> shares.HaveNewMsgResp
	78, // 96: shares.shares.DeleteMyCode:output_type -> common.Empty
	78, // 97: shares.shares.AddGroup:output_type -> common.Empty
	65, // 98: shares.shares.GetDay:output_type -> shares.GetDayResp
	65, // 99: shares.shares.GetVip:output_type -> shares.GetDayResp
	65, // 100: shares.shares.GetFl:output_type -> shares.GetDayResp
	65, // 101: shares.shares.GetUp:output_type -> shares.GetDayResp
	16, // 102: shares.shares.GetHejjw:output_type -> shares.GetHejjwResp
	40, // 103: shares.shares.GetDailyCheck:output_type -> shares.GetDailyCheckResp
	0,  // 104: shares.shares.GetClmx:output_type -> shares.GetClmxResp
	72, // 105: shares.shares.GetMyYd:output_type -> shares.GetMyYdResp
	38, // 106: shares.shares.GetHyRm:output_type -> shares.GetHyRmResp
	36, // 107: shares.shares.GetMyTeam:output_type -> shares.GetMyTeamResp
	35, // 108: shares.shares.GetMyTeamDetail:output_type -> shares.GetMyTeamDetailResp
	33, // 109: shares.shares.GetHyMmadd:output_type -> shares.GetHyMmaddResp
	33, // 110: shares.shares.GetHyZyb:output_type -> shares.GetHyMmaddResp
	29, // 111: shares.shares.GetSharesKline:output_type -> shares.GetSharesKlineResp
	22, // 112: shares.shares.GetFundKline:output_type -> shares.GetFundKlineResp
	31, // 113: shares.shares.GetGzKline:output_type -> shares.GZPeResp
	26, // 114: shares.shares.GetHotHyName:output_type -> shares.GetHotHyNameResp
	21, // 115: shares.shares.GetYyq:output_type -> shares.GetYyqResp
	14, // 116: shares.shares.GetMrtList:output_type -> shares.GetMrtListResp
	12, // 117: shares.shares.GetMrtCode:output_type -> shares.GetMrtCodeResp
	78, // 118: shares.shares.UpsetMrtCode:output_type -> common.Empty
	7,  // 119: shares.shares.GetMrtDetail:output_type -> shares.GetMrtDetailResp
	3,  // 120: shares.shares.GetZybHyKline:output_type -> shares.GetZybHyKlineResp
	86, // [86:121] is the sub-list for method output_type
	51, // [51:86] is the sub-list for method input_type
	51, // [51:51] is the sub-list for extension type_name
	51, // [51:51] is the sub-list for extension extendee
	0,  // [0:51] is the sub-list for field type_name
}

func init() { file_shares_shares_proto_init() }
func file_shares_shares_proto_init() {
	if File_shares_shares_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shares_shares_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClmxResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClmxInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZybHyKlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetZybHyKlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ZybHyDailyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMrtDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMrtDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MrtCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MrtLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsetMrtCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMrtCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMrtCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMrtListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMrtListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MrtInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHejjwResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HejjwInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MrtDoc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KlineInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYyqReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYyqResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFundKlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJgKlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchartsKeyLineInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotHyNameReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotHyNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyCodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharesKlineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSharesKlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GZPeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyMmaddReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyMmaddResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTeamDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTeamDetailResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyTeamResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyRmReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyRmResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyCheckInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDailyCheckResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SharesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SharesInfoDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Group); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SimpleSharesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeNameInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllCodeNameResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMyCodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HaveNewMsgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGroupReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyGroupResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsetGroupCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDayResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HyTimeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyTimeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHyTimeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTouTiaoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MyYdInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyYdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyYdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetYhxgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_shares_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHotYzCodesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shares_shares_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   76,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shares_shares_proto_goTypes,
		DependencyIndexes: file_shares_shares_proto_depIdxs,
		MessageInfos:      file_shares_shares_proto_msgTypes,
	}.Build()
	File_shares_shares_proto = out.File
	file_shares_shares_proto_rawDesc = nil
	file_shares_shares_proto_goTypes = nil
	file_shares_shares_proto_depIdxs = nil
}
