// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v5.29.2
// source: shares/weixin.proto

package shares

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	common "rpc/common"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetMagaReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
}

func (x *GetMagaReq) Reset() {
	*x = GetMagaReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMagaReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMagaReq) ProtoMessage() {}

func (x *GetMagaReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMagaReq.ProtoReflect.Descriptor instead.
func (*GetMagaReq) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{0}
}

func (x *GetMagaReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetMagaResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Maga []*MagaInfo `protobuf:"bytes,1,rep,name=maga,proto3" json:"maga"`
}

func (x *GetMagaResp) Reset() {
	*x = GetMagaResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMagaResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMagaResp) ProtoMessage() {}

func (x *GetMagaResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMagaResp.ProtoReflect.Descriptor instead.
func (*GetMagaResp) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{1}
}

func (x *GetMagaResp) GetMaga() []*MagaInfo {
	if x != nil {
		return x.Maga
	}
	return nil
}

type MagaInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon"`
}

func (x *MagaInfo) Reset() {
	*x = MagaInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MagaInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagaInfo) ProtoMessage() {}

func (x *MagaInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagaInfo.ProtoReflect.Descriptor instead.
func (*MagaInfo) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{2}
}

func (x *MagaInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MagaInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MagaInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type H5LoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
}

func (x *H5LoginReq) Reset() {
	*x = H5LoginReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H5LoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H5LoginReq) ProtoMessage() {}

func (x *H5LoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H5LoginReq.ProtoReflect.Descriptor instead.
func (*H5LoginReq) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{3}
}

func (x *H5LoginReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type H5LoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Url       string `protobuf:"bytes,2,opt,name=url,proto3" json:"url"`
	Status    int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status"`      // 状态，0：正在登录中，1：登录成功，
	UserId    string `protobuf:"bytes,4,opt,name=userId,proto3" json:"userId"`       // 用户id
	UserName  string `protobuf:"bytes,5,opt,name=userName,proto3" json:"userName"`   // 用户名
	AvatarUrl string `protobuf:"bytes,6,opt,name=avatarUrl,proto3" json:"avatarUrl"` // 头像地址
	Rg        bool   `protobuf:"varint,7,opt,name=rg,proto3" json:"rg"`              // 是否涨绿跌红
	Vip       bool   `protobuf:"varint,8,opt,name=vip,proto3" json:"vip"`            // 是否是vip
	SessionId string `protobuf:"bytes,9,opt,name=sessionId,proto3" json:"sessionId"` // 用户sessionid 用于当前交互使用
}

func (x *H5LoginResp) Reset() {
	*x = H5LoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *H5LoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*H5LoginResp) ProtoMessage() {}

func (x *H5LoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use H5LoginResp.ProtoReflect.Descriptor instead.
func (*H5LoginResp) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{4}
}

func (x *H5LoginResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *H5LoginResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *H5LoginResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *H5LoginResp) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *H5LoginResp) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *H5LoginResp) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *H5LoginResp) GetRg() bool {
	if x != nil {
		return x.Rg
	}
	return false
}

func (x *H5LoginResp) GetVip() bool {
	if x != nil {
		return x.Vip
	}
	return false
}

func (x *H5LoginResp) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GetJsSignReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url"`
}

func (x *GetJsSignReq) Reset() {
	*x = GetJsSignReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJsSignReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJsSignReq) ProtoMessage() {}

func (x *GetJsSignReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJsSignReq.ProtoReflect.Descriptor instead.
func (*GetJsSignReq) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{5}
}

func (x *GetJsSignReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetJsSignResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Appid     string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid"`
	Noncestr  string `protobuf:"bytes,2,opt,name=noncestr,proto3" json:"noncestr"`
	Timestamp string `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp"`
	Url       string `protobuf:"bytes,4,opt,name=url,proto3" json:"url"`
	Signature string `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature"`
}

func (x *GetJsSignResp) Reset() {
	*x = GetJsSignResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJsSignResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJsSignResp) ProtoMessage() {}

func (x *GetJsSignResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJsSignResp.ProtoReflect.Descriptor instead.
func (*GetJsSignResp) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{6}
}

func (x *GetJsSignResp) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *GetJsSignResp) GetNoncestr() string {
	if x != nil {
		return x.Noncestr
	}
	return ""
}

func (x *GetJsSignResp) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

func (x *GetJsSignResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetJsSignResp) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

// OauthReq 请求结构
type OauthReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jscode       string `protobuf:"bytes,1,opt,name=jscode,proto3" json:"jscode"`              // 微信端jscode
	IsUpdateUser bool   `protobuf:"varint,2,opt,name=isUpdateUser,proto3" json:"isUpdateUser"` // 是否更新用户
}

func (x *OauthReq) Reset() {
	*x = OauthReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthReq) ProtoMessage() {}

func (x *OauthReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthReq.ProtoReflect.Descriptor instead.
func (*OauthReq) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{7}
}

func (x *OauthReq) GetJscode() string {
	if x != nil {
		return x.Jscode
	}
	return ""
}

func (x *OauthReq) GetIsUpdateUser() bool {
	if x != nil {
		return x.IsUpdateUser
	}
	return false
}

// OauthResp 微信授权返回信息
type OauthResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId   string `protobuf:"bytes,1,opt,name=sessionId,proto3" json:"sessionId"`      // 用户sessionid 用于当前交互使用
	OpenId      string `protobuf:"bytes,2,opt,name=openId,proto3" json:"openId"`            // openid
	OverdueTime int64  `protobuf:"varint,3,opt,name=overdueTime,proto3" json:"overdueTime"` // 逾期时间点(时间戳)
	Level       int32  `protobuf:"varint,4,opt,name=level,proto3" json:"level"`             // 等级
}

func (x *OauthResp) Reset() {
	*x = OauthResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OauthResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OauthResp) ProtoMessage() {}

func (x *OauthResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OauthResp.ProtoReflect.Descriptor instead.
func (*OauthResp) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{8}
}

func (x *OauthResp) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *OauthResp) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *OauthResp) GetOverdueTime() int64 {
	if x != nil {
		return x.OverdueTime
	}
	return 0
}

func (x *OauthResp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

// WxUserinfo 用户信息
type WxUserinfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID"` // 用户sessionid 用于当前交互使用
	NickName  string `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName"`   //用户昵称
	AvatarURL string `protobuf:"bytes,3,opt,name=avatarURL,proto3" json:"avatarURL"` //用户头像，最后一个数值代表正方形头像大小（有0、46、64、96、132数值可选，0代表640*640正方形头像），用户没有头像时该项为空。若用户更换头像，原有头像URL将失效。
	Gender    string `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender"`       //用户的性别，值为1时是男性，值为2时是女性，值为0时是未知
	City      string `protobuf:"bytes,5,opt,name=city,proto3" json:"city"`           //用户所在城市
	Province  string `protobuf:"bytes,6,opt,name=province,proto3" json:"province"`   //用户所在省份
	Country   string `protobuf:"bytes,7,opt,name=country,proto3" json:"country"`     //用户所在国家
	Language  string `protobuf:"bytes,8,opt,name=language,proto3" json:"language"`   //用户的语言，简体中文为zh_CN
}

func (x *WxUserinfo) Reset() {
	*x = WxUserinfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxUserinfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxUserinfo) ProtoMessage() {}

func (x *WxUserinfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxUserinfo.ProtoReflect.Descriptor instead.
func (*WxUserinfo) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{9}
}

func (x *WxUserinfo) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *WxUserinfo) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *WxUserinfo) GetAvatarURL() string {
	if x != nil {
		return x.AvatarURL
	}
	return ""
}

func (x *WxUserinfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *WxUserinfo) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WxUserinfo) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *WxUserinfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *WxUserinfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

// WxUserinfoResp 用户信息返回
type WxUserinfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	B bool `protobuf:"varint,1,opt,name=b,proto3" json:"b"`
}

func (x *WxUserinfoResp) Reset() {
	*x = WxUserinfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WxUserinfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WxUserinfoResp) ProtoMessage() {}

func (x *WxUserinfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WxUserinfoResp.ProtoReflect.Descriptor instead.
func (*WxUserinfoResp) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{10}
}

func (x *WxUserinfoResp) GetB() bool {
	if x != nil {
		return x.B
	}
	return false
}

// GetQrcodeResp 获取二维码
type GetQrcodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  string `protobuf:"bytes,1,opt,name=page,proto3" json:"page"`   // 小程序页面头部
	Scene string `protobuf:"bytes,2,opt,name=scene,proto3" json:"scene"` // 附带参数
}

func (x *GetQrcodeReq) Reset() {
	*x = GetQrcodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQrcodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQrcodeReq) ProtoMessage() {}

func (x *GetQrcodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQrcodeReq.ProtoReflect.Descriptor instead.
func (*GetQrcodeReq) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{11}
}

func (x *GetQrcodeReq) GetPage() string {
	if x != nil {
		return x.Page
	}
	return ""
}

func (x *GetQrcodeReq) GetScene() string {
	if x != nil {
		return x.Scene
	}
	return ""
}

// GetQrcodeResp 获取二维码
type GetQrcodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url"` // 二维码图片地址
}

func (x *GetQrcodeResp) Reset() {
	*x = GetQrcodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQrcodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQrcodeResp) ProtoMessage() {}

func (x *GetQrcodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQrcodeResp.ProtoReflect.Descriptor instead.
func (*GetQrcodeResp) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{12}
}

func (x *GetQrcodeResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// GetUserInfoReq 用户信息
type GetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hexinv string `protobuf:"bytes,1,opt,name=hexinv,proto3" json:"hexinv"` // 核心
}

func (x *GetUserInfoReq) Reset() {
	*x = GetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoReq) ProtoMessage() {}

func (x *GetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoReq.ProtoReflect.Descriptor instead.
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{13}
}

func (x *GetUserInfoReq) GetHexinv() string {
	if x != nil {
		return x.Hexinv
	}
	return ""
}

// GetUserInfoResp 用户信息
type GetUserInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Openid     string `protobuf:"bytes,1,opt,name=openid,proto3" json:"openid"`          // 用户openid
	NickName   string `protobuf:"bytes,2,opt,name=nickName,proto3" json:"nickName"`      // 用户昵称
	AvatarURL  string `protobuf:"bytes,3,opt,name=avatarURL,proto3" json:"avatarURL"`    // 用户头像地址
	Gender     string `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender"`          // 用户的性别
	City       string `protobuf:"bytes,5,opt,name=city,proto3" json:"city"`              // 用户所在城市
	Province   string `protobuf:"bytes,6,opt,name=province,proto3" json:"province"`      // 用户所在省份
	Country    string `protobuf:"bytes,7,opt,name=country,proto3" json:"country"`        // 用户所在国家
	Phone      string `protobuf:"bytes,8,opt,name=phone,proto3" json:"phone"`            // 用户手机号
	Group      string `protobuf:"bytes,9,opt,name=group,proto3" json:"group"`            // 用户所在分组列表
	Token      int32  `protobuf:"varint,10,opt,name=token,proto3" json:"token"`          // 可用容量
	VipOutTime string `protobuf:"bytes,11,opt,name=vipOutTime,proto3" json:"vipOutTime"` // 会员过期时间
	VipLevel   int32  `protobuf:"varint,12,opt,name=vipLevel,proto3" json:"vipLevel"`    // vip等级
	IsVip      bool   `protobuf:"varint,13,opt,name=isVip,proto3" json:"isVip"`          // 是否是vip
	// bool    rg   = 10;// 是否涨绿跌红
	// bool 	only20 = 11;// 是否20日线
	// bool 	zjjx = 15;// 最佳均线
	// bool ylzc = 16;// 压力支撑
	// bool dkzx = 17; // 多空专线
	// bool ggfs = 18;// 个股分时
	// bool k30 = 22;// 30分钟量能提醒
	// bool fljx = 23; // 复利均线
	// bool wgjl = 24;// 违规记录标记
	// bool fsyc = 25;// 分时预测
	KvList []*UserKvInfo `protobuf:"bytes,26,rep,name=kvList,proto3" json:"kvList"` // 用户自定义信息
}

func (x *GetUserInfoResp) Reset() {
	*x = GetUserInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResp) ProtoMessage() {}

func (x *GetUserInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResp.ProtoReflect.Descriptor instead.
func (*GetUserInfoResp) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{14}
}

func (x *GetUserInfoResp) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *GetUserInfoResp) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *GetUserInfoResp) GetAvatarURL() string {
	if x != nil {
		return x.AvatarURL
	}
	return ""
}

func (x *GetUserInfoResp) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *GetUserInfoResp) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *GetUserInfoResp) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *GetUserInfoResp) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *GetUserInfoResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetUserInfoResp) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *GetUserInfoResp) GetToken() int32 {
	if x != nil {
		return x.Token
	}
	return 0
}

func (x *GetUserInfoResp) GetVipOutTime() string {
	if x != nil {
		return x.VipOutTime
	}
	return ""
}

func (x *GetUserInfoResp) GetVipLevel() int32 {
	if x != nil {
		return x.VipLevel
	}
	return 0
}

func (x *GetUserInfoResp) GetIsVip() bool {
	if x != nil {
		return x.IsVip
	}
	return false
}

func (x *GetUserInfoResp) GetKvList() []*UserKvInfo {
	if x != nil {
		return x.KvList
	}
	return nil
}

type UserKvInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string `protobuf:"bytes,1,opt,name=key,proto3" json:"key"`
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Value         bool   `protobuf:"varint,3,opt,name=value,proto3" json:"value"`
	ActiveColor   string `protobuf:"bytes,4,opt,name=activeColor,proto3" json:"activeColor"`     // 激活颜色
	InactiveColor string `protobuf:"bytes,5,opt,name=inactiveColor,proto3" json:"inactiveColor"` // 未激活颜色
}

func (x *UserKvInfo) Reset() {
	*x = UserKvInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserKvInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserKvInfo) ProtoMessage() {}

func (x *UserKvInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserKvInfo.ProtoReflect.Descriptor instead.
func (*UserKvInfo) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{15}
}

func (x *UserKvInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UserKvInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserKvInfo) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *UserKvInfo) GetActiveColor() string {
	if x != nil {
		return x.ActiveColor
	}
	return ""
}

func (x *UserKvInfo) GetInactiveColor() string {
	if x != nil {
		return x.InactiveColor
	}
	return ""
}

type UpsetUserInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
}

func (x *UpsetUserInfoReq) Reset() {
	*x = UpsetUserInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpsetUserInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpsetUserInfoReq) ProtoMessage() {}

func (x *UpsetUserInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpsetUserInfoReq.ProtoReflect.Descriptor instead.
func (*UpsetUserInfoReq) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{16}
}

func (x *UpsetUserInfoReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *UpsetUserInfoReq) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type ReLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Relogin     bool          `protobuf:"varint,1,opt,name=relogin,proto3" json:"relogin"`         // 是否重新登录:true 重新登录
	SessionId   string        `protobuf:"bytes,2,opt,name=sessionId,proto3" json:"sessionId"`      // 用户sessionid 用于当前交互使用
	OpenId      string        `protobuf:"bytes,3,opt,name=openId,proto3" json:"openId"`            // openid
	OverdueTime int64         `protobuf:"varint,4,opt,name=overdueTime,proto3" json:"overdueTime"` // 逾期时间点(时间戳)
	Msg         string        `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg"`                  // 消息
	Level       int32         `protobuf:"varint,6,opt,name=level,proto3" json:"level"`             // 等级
	NickName    string        `protobuf:"bytes,7,opt,name=nickName,proto3" json:"nickName"`        // 用户昵称
	AvatarURL   string        `protobuf:"bytes,8,opt,name=avatarURL,proto3" json:"avatarURL"`      // 用户头像地址
	KvList      []*UserKvInfo `protobuf:"bytes,9,rep,name=kvList,proto3" json:"kvList"`            // 用户自定义信息
}

func (x *ReLoginResp) Reset() {
	*x = ReLoginResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReLoginResp) ProtoMessage() {}

func (x *ReLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReLoginResp.ProtoReflect.Descriptor instead.
func (*ReLoginResp) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{17}
}

func (x *ReLoginResp) GetRelogin() bool {
	if x != nil {
		return x.Relogin
	}
	return false
}

func (x *ReLoginResp) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ReLoginResp) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *ReLoginResp) GetOverdueTime() int64 {
	if x != nil {
		return x.OverdueTime
	}
	return 0
}

func (x *ReLoginResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ReLoginResp) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *ReLoginResp) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ReLoginResp) GetAvatarURL() string {
	if x != nil {
		return x.AvatarURL
	}
	return ""
}

func (x *ReLoginResp) GetKvList() []*UserKvInfo {
	if x != nil {
		return x.KvList
	}
	return nil
}

type CheckVersionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  string `protobuf:"bytes,1,opt,name=version,proto3" json:"version"`   // 版本号
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform"` // 平台
}

func (x *CheckVersionReq) Reset() {
	*x = CheckVersionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVersionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVersionReq) ProtoMessage() {}

func (x *CheckVersionReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVersionReq.ProtoReflect.Descriptor instead.
func (*CheckVersionReq) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{18}
}

func (x *CheckVersionReq) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CheckVersionReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

type CheckVersionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  string `protobuf:"bytes,1,opt,name=version,proto3" json:"version"`   // 版本号
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform"` // 平台
	Url      string `protobuf:"bytes,3,opt,name=url,proto3" json:"url"`           // 地址
}

func (x *CheckVersionResp) Reset() {
	*x = CheckVersionResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckVersionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckVersionResp) ProtoMessage() {}

func (x *CheckVersionResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckVersionResp.ProtoReflect.Descriptor instead.
func (*CheckVersionResp) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{19}
}

func (x *CheckVersionResp) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CheckVersionResp) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *CheckVersionResp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetKlineResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`   // 股票代码
	Kline []string `protobuf:"bytes,2,rep,name=kline,proto3" json:"kline"` // K线数据
}

func (x *GetKlineResp) Reset() {
	*x = GetKlineResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_weixin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKlineResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKlineResp) ProtoMessage() {}

func (x *GetKlineResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_weixin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKlineResp.ProtoReflect.Descriptor instead.
func (*GetKlineResp) Descriptor() ([]byte, []int) {
	return file_shares_weixin_proto_rawDescGZIP(), []int{20}
}

func (x *GetKlineResp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetKlineResp) GetKline() []string {
	if x != nil {
		return x.Kline
	}
	return nil
}

var File_shares_weixin_proto protoreflect.FileDescriptor

var file_shares_weixin_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2f, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x1a, 0x1a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x20, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x4d, 0x61, 0x67, 0x61, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x33, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x67, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6d, 0x61,
	0x67, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x4d, 0x61, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6d, 0x61, 0x67, 0x61,
	0x22, 0x44, 0x0a, 0x08, 0x4d, 0x61, 0x67, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x20, 0x0a, 0x0a, 0x48, 0x35, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xdd, 0x01, 0x0a, 0x0b, 0x48, 0x35, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x67, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x72, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4a,
	0x73, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x47,
	0x65, 0x74, 0x4a, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x73, 0x74, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x46, 0x0a, 0x08,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x6a, 0x73, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x73, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x22, 0x79, 0x0a, 0x09, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x76, 0x65, 0x72, 0x64,
	0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x76,
	0x65, 0x72, 0x64, 0x75, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22,
	0xe2, 0x01, 0x0a, 0x0a, 0x57, 0x78, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x55, 0x52, 0x4c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x22, 0x1e, 0x0a, 0x0e, 0x57, 0x78, 0x55, 0x73, 0x65, 0x72, 0x69, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x01, 0x62, 0x22, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x22, 0x21,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x78, 0x69, 0x6e, 0x76, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x78, 0x69, 0x6e, 0x76, 0x22, 0x85, 0x03, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x52, 0x4c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x52,
	0x4c, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x70, 0x4f, 0x75, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x70, 0x4f, 0x75,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x69, 0x70, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x56, 0x69, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x69, 0x73, 0x56, 0x69, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x6b, 0x76, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6b, 0x76, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x76, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x3a, 0x0a, 0x10, 0x55, 0x70, 0x73, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x8d, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x72, 0x65, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x76, 0x65, 0x72, 0x64, 0x75, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x55, 0x52, 0x4c, 0x12, 0x2a, 0x0a, 0x06, 0x6b, 0x76, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4b, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6b, 0x76, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x47, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0x5a, 0x0a, 0x10, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4b, 0x6c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6b,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6b, 0x6c, 0x69, 0x6e,
	0x65, 0x32, 0x96, 0x04, 0x0a, 0x06, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x05,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x12, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4f,
	0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x2e, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0d, 0x55, 0x70,
	0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x73, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x07, 0x52, 0x65, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x16, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x14, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x73, 0x53, 0x69, 0x67, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x4a, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0a,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x12, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x48, 0x35, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x34, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x67, 0x61, 0x12, 0x12, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x67, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x67, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x72, 0x70,
	0x63, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shares_weixin_proto_rawDescOnce sync.Once
	file_shares_weixin_proto_rawDescData = file_shares_weixin_proto_rawDesc
)

func file_shares_weixin_proto_rawDescGZIP() []byte {
	file_shares_weixin_proto_rawDescOnce.Do(func() {
		file_shares_weixin_proto_rawDescData = protoimpl.X.CompressGZIP(file_shares_weixin_proto_rawDescData)
	})
	return file_shares_weixin_proto_rawDescData
}

var file_shares_weixin_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_shares_weixin_proto_goTypes = []interface{}{
	(*GetMagaReq)(nil),       // 0: shares.GetMagaReq
	(*GetMagaResp)(nil),      // 1: shares.GetMagaResp
	(*MagaInfo)(nil),         // 2: shares.MagaInfo
	(*H5LoginReq)(nil),       // 3: shares.H5LoginReq
	(*H5LoginResp)(nil),      // 4: shares.H5LoginResp
	(*GetJsSignReq)(nil),     // 5: shares.GetJsSignReq
	(*GetJsSignResp)(nil),    // 6: shares.GetJsSignResp
	(*OauthReq)(nil),         // 7: shares.OauthReq
	(*OauthResp)(nil),        // 8: shares.OauthResp
	(*WxUserinfo)(nil),       // 9: shares.WxUserinfo
	(*WxUserinfoResp)(nil),   // 10: shares.WxUserinfoResp
	(*GetQrcodeReq)(nil),     // 11: shares.GetQrcodeReq
	(*GetQrcodeResp)(nil),    // 12: shares.GetQrcodeResp
	(*GetUserInfoReq)(nil),   // 13: shares.GetUserInfoReq
	(*GetUserInfoResp)(nil),  // 14: shares.GetUserInfoResp
	(*UserKvInfo)(nil),       // 15: shares.UserKvInfo
	(*UpsetUserInfoReq)(nil), // 16: shares.UpsetUserInfoReq
	(*ReLoginResp)(nil),      // 17: shares.ReLoginResp
	(*CheckVersionReq)(nil),  // 18: shares.CheckVersionReq
	(*CheckVersionResp)(nil), // 19: shares.CheckVersionResp
	(*GetKlineResp)(nil),     // 20: shares.GetKlineResp
	(*common.Empty)(nil),     // 21: common.Empty
}
var file_shares_weixin_proto_depIdxs = []int32{
	2,  // 0: shares.GetMagaResp.maga:type_name -> shares.MagaInfo
	15, // 1: shares.GetUserInfoResp.kvList:type_name -> shares.UserKvInfo
	15, // 2: shares.ReLoginResp.kvList:type_name -> shares.UserKvInfo
	7,  // 3: shares.Weixin.Oauth:input_type -> shares.OauthReq
	11, // 4: shares.Weixin.GetQrcode:input_type -> shares.GetQrcodeReq
	13, // 5: shares.Weixin.GetUserInfo:input_type -> shares.GetUserInfoReq
	16, // 6: shares.Weixin.UpsetUserInfo:input_type -> shares.UpsetUserInfoReq
	13, // 7: shares.Weixin.ReLogin:input_type -> shares.GetUserInfoReq
	5,  // 8: shares.Weixin.GetJsSign:input_type -> shares.GetJsSignReq
	3,  // 9: shares.Weixin.ClearLogin:input_type -> shares.H5LoginReq
	0,  // 10: shares.Weixin.GetMaga:input_type -> shares.GetMagaReq
	18, // 11: shares.Weixin.CheckVersion:input_type -> shares.CheckVersionReq
	8,  // 12: shares.Weixin.Oauth:output_type -> shares.OauthResp
	12, // 13: shares.Weixin.GetQrcode:output_type -> shares.GetQrcodeResp
	14, // 14: shares.Weixin.GetUserInfo:output_type -> shares.GetUserInfoResp
	21, // 15: shares.Weixin.UpsetUserInfo:output_type -> common.Empty
	17, // 16: shares.Weixin.ReLogin:output_type -> shares.ReLoginResp
	6,  // 17: shares.Weixin.GetJsSign:output_type -> shares.GetJsSignResp
	21, // 18: shares.Weixin.ClearLogin:output_type -> common.Empty
	1,  // 19: shares.Weixin.GetMaga:output_type -> shares.GetMagaResp
	19, // 20: shares.Weixin.CheckVersion:output_type -> shares.CheckVersionResp
	12, // [12:21] is the sub-list for method output_type
	3,  // [3:12] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_shares_weixin_proto_init() }
func file_shares_weixin_proto_init() {
	if File_shares_weixin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shares_weixin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMagaReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMagaResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MagaInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H5LoginReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*H5LoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJsSignReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJsSignResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OauthResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxUserinfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WxUserinfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQrcodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQrcodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserKvInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpsetUserInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReLoginResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVersionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckVersionResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_weixin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKlineResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shares_weixin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shares_weixin_proto_goTypes,
		DependencyIndexes: file_shares_weixin_proto_depIdxs,
		MessageInfos:      file_shares_weixin_proto_msgTypes,
	}.Build()
	File_shares_weixin_proto = out.File
	file_shares_weixin_proto_rawDesc = nil
	file_shares_weixin_proto_goTypes = nil
	file_shares_weixin_proto_depIdxs = nil
}
