// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v5.29.2
// source: shares/flow.proto

package shares

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	common "rpc/common"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FlowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId  string `protobuf:"bytes,1,opt,name=flowId,proto3" json:"flowId"`   // 为空创建
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`     // 标题（不为空的时候修改）
	BgColor string `protobuf:"bytes,3,opt,name=bgColor,proto3" json:"bgColor"` // 背景色
	Doc     string `protobuf:"bytes,4,opt,name=doc,proto3" json:"doc"`         // 描述（不为空的时候修改）
	Logo    string `protobuf:"bytes,5,opt,name=logo,proto3" json:"logo"`       // 图标（不为空的时候修改）
	Data    string `protobuf:"bytes,6,opt,name=data,proto3" json:"data"`       // 数据 （不为空的时候修改）
}

func (x *FlowInfo) Reset() {
	*x = FlowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_flow_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowInfo) ProtoMessage() {}

func (x *FlowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_flow_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowInfo.ProtoReflect.Descriptor instead.
func (*FlowInfo) Descriptor() ([]byte, []int) {
	return file_shares_flow_proto_rawDescGZIP(), []int{0}
}

func (x *FlowInfo) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *FlowInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *FlowInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *FlowInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *FlowInfo) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *FlowInfo) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type UpdateFlowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId  string `protobuf:"bytes,1,opt,name=flowId,proto3" json:"flowId"`   // 为空创建
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`     // 标题（不为空的时候修改）
	Doc     string `protobuf:"bytes,3,opt,name=doc,proto3" json:"doc"`         // 描述（不为空的时候修改）
	Logo    string `protobuf:"bytes,4,opt,name=logo,proto3" json:"logo"`       // 图标（不为空的时候修改）
	BgColor string `protobuf:"bytes,5,opt,name=bgColor,proto3" json:"bgColor"` // 背景色
	Data    string `protobuf:"bytes,6,opt,name=data,proto3" json:"data"`       // 数据 （不为空的时候修改）
}

func (x *UpdateFlowReq) Reset() {
	*x = UpdateFlowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_flow_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFlowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFlowReq) ProtoMessage() {}

func (x *UpdateFlowReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_flow_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFlowReq.ProtoReflect.Descriptor instead.
func (*UpdateFlowReq) Descriptor() ([]byte, []int) {
	return file_shares_flow_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateFlowReq) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *UpdateFlowReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateFlowReq) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

func (x *UpdateFlowReq) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *UpdateFlowReq) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *UpdateFlowReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type GetFlowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId string `protobuf:"bytes,1,opt,name=flowId,proto3" json:"flowId"` // 为空获取所有
}

func (x *GetFlowReq) Reset() {
	*x = GetFlowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_flow_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlowReq) ProtoMessage() {}

func (x *GetFlowReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_flow_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlowReq.ProtoReflect.Descriptor instead.
func (*GetFlowReq) Descriptor() ([]byte, []int) {
	return file_shares_flow_proto_rawDescGZIP(), []int{2}
}

func (x *GetFlowReq) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

type GetFlowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*FlowInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"`
}

func (x *GetFlowResp) Reset() {
	*x = GetFlowResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_flow_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFlowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFlowResp) ProtoMessage() {}

func (x *GetFlowResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_flow_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFlowResp.ProtoReflect.Descriptor instead.
func (*GetFlowResp) Descriptor() ([]byte, []int) {
	return file_shares_flow_proto_rawDescGZIP(), []int{3}
}

func (x *GetFlowResp) GetList() []*FlowInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type ChatFlowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId   string `protobuf:"bytes,1,opt,name=flowId,proto3" json:"flowId"`     // 工作流id
	NodeId   string `protobuf:"bytes,2,opt,name=nodeId,proto3" json:"nodeId"`     // 节点id(不为空视为测试目标节点)
	IsChange string `protobuf:"bytes,3,opt,name=isChange,proto3" json:"isChange"` // 是否变更节点
}

func (x *ChatFlowReq) Reset() {
	*x = ChatFlowReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_flow_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatFlowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatFlowReq) ProtoMessage() {}

func (x *ChatFlowReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_flow_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatFlowReq.ProtoReflect.Descriptor instead.
func (*ChatFlowReq) Descriptor() ([]byte, []int) {
	return file_shares_flow_proto_rawDescGZIP(), []int{4}
}

func (x *ChatFlowReq) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *ChatFlowReq) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ChatFlowReq) GetIsChange() string {
	if x != nil {
		return x.IsChange
	}
	return ""
}

type GetPromptReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag"` // 标签(技能：skill，提示：tip)
}

func (x *GetPromptReq) Reset() {
	*x = GetPromptReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_flow_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromptReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromptReq) ProtoMessage() {}

func (x *GetPromptReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_flow_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromptReq.ProtoReflect.Descriptor instead.
func (*GetPromptReq) Descriptor() ([]byte, []int) {
	return file_shares_flow_proto_rawDescGZIP(), []int{5}
}

func (x *GetPromptReq) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type GetPromptResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*PromptInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 提示列表
	Tips []string      `protobuf:"bytes,2,rep,name=tips,proto3" json:"tips"` // 提示列表
}

func (x *GetPromptResp) Reset() {
	*x = GetPromptResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_flow_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromptResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromptResp) ProtoMessage() {}

func (x *GetPromptResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_flow_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromptResp.ProtoReflect.Descriptor instead.
func (*GetPromptResp) Descriptor() ([]byte, []int) {
	return file_shares_flow_proto_rawDescGZIP(), []int{6}
}

func (x *GetPromptResp) GetList() []*PromptInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetPromptResp) GetTips() []string {
	if x != nil {
		return x.Tips
	}
	return nil
}

type PromptInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Value string `protobuf:"bytes,3,opt,name=value,proto3" json:"value"`
	Icon  string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon"`
	Doc   string `protobuf:"bytes,5,opt,name=doc,proto3" json:"doc"`
}

func (x *PromptInfo) Reset() {
	*x = PromptInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_flow_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromptInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptInfo) ProtoMessage() {}

func (x *PromptInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_flow_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptInfo.ProtoReflect.Descriptor instead.
func (*PromptInfo) Descriptor() ([]byte, []int) {
	return file_shares_flow_proto_rawDescGZIP(), []int{7}
}

func (x *PromptInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PromptInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PromptInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *PromptInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PromptInfo) GetDoc() string {
	if x != nil {
		return x.Doc
	}
	return ""
}

var File_shares_flow_proto protoreflect.FileDescriptor

var file_shares_flow_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2f, 0x66, 0x6c, 0x6f, 0x77, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x1a, 0x1a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8c, 0x01, 0x0a, 0x08, 0x46, 0x6c, 0x6f, 0x77,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x64, 0x6f, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f,
	0x67, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x91, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x6f, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x24, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x77,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64,
	0x22, 0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x59, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x46, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x22, 0x20, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x22, 0x4b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x73, 0x22,
	0x6e, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x64, 0x6f, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x6f, 0x63, 0x32,
	0xa7, 0x01, 0x0a, 0x04, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x36, 0x0a, 0x09, 0x55, 0x70, 0x73, 0x65,
	0x74, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x72, 0x70, 0x63,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shares_flow_proto_rawDescOnce sync.Once
	file_shares_flow_proto_rawDescData = file_shares_flow_proto_rawDesc
)

func file_shares_flow_proto_rawDescGZIP() []byte {
	file_shares_flow_proto_rawDescOnce.Do(func() {
		file_shares_flow_proto_rawDescData = protoimpl.X.CompressGZIP(file_shares_flow_proto_rawDescData)
	})
	return file_shares_flow_proto_rawDescData
}

var file_shares_flow_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_shares_flow_proto_goTypes = []interface{}{
	(*FlowInfo)(nil),      // 0: shares.FlowInfo
	(*UpdateFlowReq)(nil), // 1: shares.UpdateFlowReq
	(*GetFlowReq)(nil),    // 2: shares.GetFlowReq
	(*GetFlowResp)(nil),   // 3: shares.GetFlowResp
	(*ChatFlowReq)(nil),   // 4: shares.ChatFlowReq
	(*GetPromptReq)(nil),  // 5: shares.GetPromptReq
	(*GetPromptResp)(nil), // 6: shares.GetPromptResp
	(*PromptInfo)(nil),    // 7: shares.PromptInfo
	(*common.Empty)(nil),  // 8: common.Empty
}
var file_shares_flow_proto_depIdxs = []int32{
	0, // 0: shares.GetFlowResp.list:type_name -> shares.FlowInfo
	7, // 1: shares.GetPromptResp.list:type_name -> shares.PromptInfo
	1, // 2: shares.Flow.UpsetFlow:input_type -> shares.UpdateFlowReq
	2, // 3: shares.Flow.GetFlow:input_type -> shares.GetFlowReq
	2, // 4: shares.Flow.DeleteFlow:input_type -> shares.GetFlowReq
	0, // 5: shares.Flow.UpsetFlow:output_type -> shares.FlowInfo
	3, // 6: shares.Flow.GetFlow:output_type -> shares.GetFlowResp
	8, // 7: shares.Flow.DeleteFlow:output_type -> common.Empty
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_shares_flow_proto_init() }
func file_shares_flow_proto_init() {
	if File_shares_flow_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shares_flow_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_flow_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFlowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_flow_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_flow_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFlowResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_flow_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatFlowReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_flow_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromptReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_flow_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromptResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_flow_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromptInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shares_flow_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shares_flow_proto_goTypes,
		DependencyIndexes: file_shares_flow_proto_depIdxs,
		MessageInfos:      file_shares_flow_proto_msgTypes,
	}.Build()
	File_shares_flow_proto = out.File
	file_shares_flow_proto_rawDesc = nil
	file_shares_flow_proto_goTypes = nil
	file_shares_flow_proto_depIdxs = nil
}
