// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.14.0
// source: shares/analy.proto

package shares

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	common "rpc/common"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetCjrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Day string `protobuf:"bytes,1,opt,name=day,proto3" json:"day"`
}

func (x *GetCjrlReq) Reset() {
	*x = GetCjrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCjrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCjrlReq) ProtoMessage() {}

func (x *GetCjrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCjrlReq.ProtoReflect.Descriptor instead.
func (*GetCjrlReq) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{0}
}

func (x *GetCjrlReq) GetDay() string {
	if x != nil {
		return x.Day
	}
	return ""
}

type GetCjrlResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jjsj []*JjrbInfo `protobuf:"bytes,1,rep,name=jjsj,proto3" json:"jjsj"` // 经济数据
	Sj   []*JjrbInfo `protobuf:"bytes,2,rep,name=sj,proto3" json:"sj"`     // 事件
}

func (x *GetCjrlResp) Reset() {
	*x = GetCjrlResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCjrlResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCjrlResp) ProtoMessage() {}

func (x *GetCjrlResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCjrlResp.ProtoReflect.Descriptor instead.
func (*GetCjrlResp) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{1}
}

func (x *GetCjrlResp) GetJjsj() []*JjrbInfo {
	if x != nil {
		return x.Jjsj
	}
	return nil
}

func (x *GetCjrlResp) GetSj() []*JjrbInfo {
	if x != nil {
		return x.Sj
	}
	return nil
}

type GetGjzbResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GjzbInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetGjzbResp) Reset() {
	*x = GetGjzbResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGjzbResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGjzbResp) ProtoMessage() {}

func (x *GetGjzbResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGjzbResp.ProtoReflect.Descriptor instead.
func (*GetGjzbResp) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{2}
}

func (x *GetGjzbResp) GetList() []*GjzbInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GjzbInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price     float64 `protobuf:"fixed64,1,opt,name=price,proto3" json:"price"`         // 当前指数
	Percent   float64 `protobuf:"fixed64,2,opt,name=percent,proto3" json:"percent"`     // 当前涨跌比例
	ChangeNum float64 `protobuf:"fixed64,3,opt,name=changeNum,proto3" json:"changeNum"` // 当前涨跌数
	Code      string  `protobuf:"bytes,4,opt,name=code,proto3" json:"code"`             // 当前代码
	Name      string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`             // 当前名字
	Color     string  `protobuf:"bytes,6,opt,name=color,proto3" json:"color"`           // 颜色
}

func (x *GjzbInfo) Reset() {
	*x = GjzbInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GjzbInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GjzbInfo) ProtoMessage() {}

func (x *GjzbInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GjzbInfo.ProtoReflect.Descriptor instead.
func (*GjzbInfo) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{3}
}

func (x *GjzbInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GjzbInfo) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *GjzbInfo) GetChangeNum() float64 {
	if x != nil {
		return x.ChangeNum
	}
	return 0
}

func (x *GjzbInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GjzbInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GjzbInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type GetSampleWdjReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hexinv string `protobuf:"bytes,1,opt,name=hexinv,proto3" json:"hexinv"`
}

func (x *GetSampleWdjReq) Reset() {
	*x = GetSampleWdjReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSampleWdjReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSampleWdjReq) ProtoMessage() {}

func (x *GetSampleWdjReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSampleWdjReq.ProtoReflect.Descriptor instead.
func (*GetSampleWdjReq) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{4}
}

func (x *GetSampleWdjReq) GetHexinv() string {
	if x != nil {
		return x.Hexinv
	}
	return ""
}

type GetSampleWdjResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseHeat float64 `protobuf:"fixed64,1,opt,name=baseHeat,proto3" json:"baseHeat"` // 基础温度
	DayHeat  float64 `protobuf:"fixed64,2,opt,name=dayHeat,proto3" json:"dayHeat"`   // 当日温度
}

func (x *GetSampleWdjResp) Reset() {
	*x = GetSampleWdjResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSampleWdjResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSampleWdjResp) ProtoMessage() {}

func (x *GetSampleWdjResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSampleWdjResp.ProtoReflect.Descriptor instead.
func (*GetSampleWdjResp) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{5}
}

func (x *GetSampleWdjResp) GetBaseHeat() float64 {
	if x != nil {
		return x.BaseHeat
	}
	return 0
}

func (x *GetSampleWdjResp) GetDayHeat() float64 {
	if x != nil {
		return x.DayHeat
	}
	return 0
}

// AnalyCodeReq 请求
type AnalyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
	Len  int32  `protobuf:"varint,2,opt,name=len,proto3" json:"len"`
}

func (x *AnalyCodeReq) Reset() {
	*x = AnalyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyCodeReq) ProtoMessage() {}

func (x *AnalyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyCodeReq.ProtoReflect.Descriptor instead.
func (*AnalyCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{6}
}

func (x *AnalyCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AnalyCodeReq) GetLen() int32 {
	if x != nil {
		return x.Len
	}
	return 0
}

// AnalyCodeResp 返回
type AnalyCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []string `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs"` // 内容
}

func (x *AnalyCodeResp) Reset() {
	*x = AnalyCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyCodeResp) ProtoMessage() {}

func (x *AnalyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyCodeResp.ProtoReflect.Descriptor instead.
func (*AnalyCodeResp) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{7}
}

func (x *AnalyCodeResp) GetMsgs() []string {
	if x != nil {
		return x.Msgs
	}
	return nil
}

// GetAllSpReq 请求
type GetAllSpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
}

func (x *GetAllSpReq) Reset() {
	*x = GetAllSpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSpReq) ProtoMessage() {}

func (x *GetAllSpReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSpReq.ProtoReflect.Descriptor instead.
func (*GetAllSpReq) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllSpReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SpShowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	D1    string `protobuf:"bytes,1,opt,name=d1,proto3" json:"d1"`       // 名字
	D2    string `protobuf:"bytes,2,opt,name=d2,proto3" json:"d2"`       // 发布日
	D3    string `protobuf:"bytes,3,opt,name=d3,proto3" json:"d3"`       // 数量
	D4    string `protobuf:"bytes,4,opt,name=d4,proto3" json:"d4"`       // 描述
	Color string `protobuf:"bytes,5,opt,name=color,proto3" json:"color"` // 颜色
}

func (x *SpShowInfo) Reset() {
	*x = SpShowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpShowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpShowInfo) ProtoMessage() {}

func (x *SpShowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpShowInfo.ProtoReflect.Descriptor instead.
func (*SpShowInfo) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{9}
}

func (x *SpShowInfo) GetD1() string {
	if x != nil {
		return x.D1
	}
	return ""
}

func (x *SpShowInfo) GetD2() string {
	if x != nil {
		return x.D2
	}
	return ""
}

func (x *SpShowInfo) GetD3() string {
	if x != nil {
		return x.D3
	}
	return ""
}

func (x *SpShowInfo) GetD4() string {
	if x != nil {
		return x.D4
	}
	return ""
}

func (x *SpShowInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type AllSpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string        `protobuf:"bytes,1,opt,name=title,proto3" json:"title"` // 标签
	D1    string        `protobuf:"bytes,2,opt,name=d1,proto3" json:"d1"`       // 名字
	D2    string        `protobuf:"bytes,3,opt,name=d2,proto3" json:"d2"`       // 发布日
	D3    string        `protobuf:"bytes,4,opt,name=d3,proto3" json:"d3"`       // 数量
	D4    string        `protobuf:"bytes,5,opt,name=d4,proto3" json:"d4"`       // 描述
	List  []*SpShowInfo `protobuf:"bytes,7,rep,name=list,proto3" json:"list"`   // 列表
}

func (x *AllSpInfo) Reset() {
	*x = AllSpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllSpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllSpInfo) ProtoMessage() {}

func (x *AllSpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllSpInfo.ProtoReflect.Descriptor instead.
func (*AllSpInfo) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{10}
}

func (x *AllSpInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AllSpInfo) GetD1() string {
	if x != nil {
		return x.D1
	}
	return ""
}

func (x *AllSpInfo) GetD2() string {
	if x != nil {
		return x.D2
	}
	return ""
}

func (x *AllSpInfo) GetD3() string {
	if x != nil {
		return x.D3
	}
	return ""
}

func (x *AllSpInfo) GetD4() string {
	if x != nil {
		return x.D4
	}
	return ""
}

func (x *AllSpInfo) GetList() []*SpShowInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type BaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Value  string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	Color  string `protobuf:"bytes,3,opt,name=color,proto3" json:"color"`
	Name1  string `protobuf:"bytes,4,opt,name=name1,proto3" json:"name1"`
	Value1 string `protobuf:"bytes,5,opt,name=value1,proto3" json:"value1"`
	Color1 string `protobuf:"bytes,6,opt,name=color1,proto3" json:"color1"`
}

func (x *BaseInfo) Reset() {
	*x = BaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseInfo) ProtoMessage() {}

func (x *BaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseInfo.ProtoReflect.Descriptor instead.
func (*BaseInfo) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{11}
}

func (x *BaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *BaseInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *BaseInfo) GetName1() string {
	if x != nil {
		return x.Name1
	}
	return ""
}

func (x *BaseInfo) GetValue1() string {
	if x != nil {
		return x.Value1
	}
	return ""
}

func (x *BaseInfo) GetColor1() string {
	if x != nil {
		return x.Color1
	}
	return ""
}

// GetAllSpResp
type GetAllSpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vip      bool         `protobuf:"varint,1,opt,name=vip,proto3" json:"vip"`          // 是否vip
	Token    int32        `protobuf:"varint,2,opt,name=token,proto3" json:"token"`      // token 数
	List     []*AllSpInfo `protobuf:"bytes,3,rep,name=list,proto3" json:"list"`         // 列表
	BaseInfo []*BaseInfo  `protobuf:"bytes,4,rep,name=baseInfo,proto3" json:"baseInfo"` // 基础数据
}

func (x *GetAllSpResp) Reset() {
	*x = GetAllSpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSpResp) ProtoMessage() {}

func (x *GetAllSpResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSpResp.ProtoReflect.Descriptor instead.
func (*GetAllSpResp) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{12}
}

func (x *GetAllSpResp) GetVip() bool {
	if x != nil {
		return x.Vip
	}
	return false
}

func (x *GetAllSpResp) GetToken() int32 {
	if x != nil {
		return x.Token
	}
	return 0
}

func (x *GetAllSpResp) GetList() []*AllSpInfo {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetAllSpResp) GetBaseInfo() []*BaseInfo {
	if x != nil {
		return x.BaseInfo
	}
	return nil
}

type GetArticInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Tm    string `protobuf:"bytes,2,opt,name=tm,proto3" json:"tm"`
}

func (x *GetArticInfo) Reset() {
	*x = GetArticInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticInfo) ProtoMessage() {}

func (x *GetArticInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticInfo.ProtoReflect.Descriptor instead.
func (*GetArticInfo) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{13}
}

func (x *GetArticInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetArticInfo) GetTm() string {
	if x != nil {
		return x.Tm
	}
	return ""
}

type GetArticResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetArticInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 显示的名字
}

func (x *GetArticResp) Reset() {
	*x = GetArticResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticResp) ProtoMessage() {}

func (x *GetArticResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticResp.ProtoReflect.Descriptor instead.
func (*GetArticResp) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{14}
}

func (x *GetArticResp) GetList() []*GetArticInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GetBxNxKlineInfoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Times1  []string  `protobuf:"bytes,10,rep,name=times1,proto3" json:"times1"`    // 北向
	DayStr1 string    `protobuf:"bytes,11,opt,name=dayStr1,proto3" json:"dayStr1"`  // 当天时间
	Bs2     []float64 `protobuf:"fixed64,2,rep,packed,name=bs2,proto3" json:"bs2"`  // 沪股通,净买入
	Bs3     []float64 `protobuf:"fixed64,3,rep,packed,name=bs3,proto3" json:"bs3"`  // 深股通,净买入
	Bs4     []float64 `protobuf:"fixed64,4,rep,packed,name=bs4,proto3" json:"bs4"`  // 北向资金,净买入
	Bs5     []float64 `protobuf:"fixed64,5,rep,packed,name=bs5,proto3" json:"bs5"`  // 沪股通,净流入
	Bs6     []float64 `protobuf:"fixed64,6,rep,packed,name=bs6,proto3" json:"bs6"`  // 深股通,净流入
	Bs7     []float64 `protobuf:"fixed64,7,rep,packed,name=bs7,proto3" json:"bs7"`  // 北向资金,净流入
	Times2  []string  `protobuf:"bytes,20,rep,name=times2,proto3" json:"times2"`    // 南向
	DayStr2 string    `protobuf:"bytes,21,opt,name=dayStr2,proto3" json:"dayStr2"`  // 当天时间
	Nx2     []float64 `protobuf:"fixed64,22,rep,packed,name=nx2,proto3" json:"nx2"` // 港股通(沪),净流入
	Nx3     []float64 `protobuf:"fixed64,23,rep,packed,name=nx3,proto3" json:"nx3"` // 港股通(深),净流入
	Nx4     []float64 `protobuf:"fixed64,24,rep,packed,name=nx4,proto3" json:"nx4"` // 南向资金,净流入
	Nx5     []float64 `protobuf:"fixed64,25,rep,packed,name=nx5,proto3" json:"nx5"` // 港股通(沪),净流入
	Nx6     []float64 `protobuf:"fixed64,26,rep,packed,name=nx6,proto3" json:"nx6"` // 港股通(深),净流入
	Nx7     []float64 `protobuf:"fixed64,27,rep,packed,name=nx7,proto3" json:"nx7"` // 南向资金,净流入
}

func (x *GetBxNxKlineInfoResp) Reset() {
	*x = GetBxNxKlineInfoResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBxNxKlineInfoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBxNxKlineInfoResp) ProtoMessage() {}

func (x *GetBxNxKlineInfoResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBxNxKlineInfoResp.ProtoReflect.Descriptor instead.
func (*GetBxNxKlineInfoResp) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{15}
}

func (x *GetBxNxKlineInfoResp) GetTimes1() []string {
	if x != nil {
		return x.Times1
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetDayStr1() string {
	if x != nil {
		return x.DayStr1
	}
	return ""
}

func (x *GetBxNxKlineInfoResp) GetBs2() []float64 {
	if x != nil {
		return x.Bs2
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetBs3() []float64 {
	if x != nil {
		return x.Bs3
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetBs4() []float64 {
	if x != nil {
		return x.Bs4
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetBs5() []float64 {
	if x != nil {
		return x.Bs5
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetBs6() []float64 {
	if x != nil {
		return x.Bs6
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetBs7() []float64 {
	if x != nil {
		return x.Bs7
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetTimes2() []string {
	if x != nil {
		return x.Times2
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetDayStr2() string {
	if x != nil {
		return x.DayStr2
	}
	return ""
}

func (x *GetBxNxKlineInfoResp) GetNx2() []float64 {
	if x != nil {
		return x.Nx2
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetNx3() []float64 {
	if x != nil {
		return x.Nx3
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetNx4() []float64 {
	if x != nil {
		return x.Nx4
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetNx5() []float64 {
	if x != nil {
		return x.Nx5
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetNx6() []float64 {
	if x != nil {
		return x.Nx6
	}
	return nil
}

func (x *GetBxNxKlineInfoResp) GetNx7() []float64 {
	if x != nil {
		return x.Nx7
	}
	return nil
}

type JjrbInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country   string `protobuf:"bytes,1,opt,name=country,proto3" json:"country"` // 城市
	Title     string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Previous  string `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous"`   // 前值
	Consensus string `protobuf:"bytes,4,opt,name=consensus,proto3" json:"consensus"` // 预期
	Actual    string `protobuf:"bytes,5,opt,name=actual,proto3" json:"actual"`       // 实际值
	Url       string `protobuf:"bytes,6,opt,name=url,proto3" json:"url"`
	Tm        string `protobuf:"bytes,7,opt,name=tm,proto3" json:"tm"`
}

func (x *JjrbInfo) Reset() {
	*x = JjrbInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JjrbInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JjrbInfo) ProtoMessage() {}

func (x *JjrbInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JjrbInfo.ProtoReflect.Descriptor instead.
func (*JjrbInfo) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{16}
}

func (x *JjrbInfo) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *JjrbInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *JjrbInfo) GetPrevious() string {
	if x != nil {
		return x.Previous
	}
	return ""
}

func (x *JjrbInfo) GetConsensus() string {
	if x != nil {
		return x.Consensus
	}
	return ""
}

func (x *JjrbInfo) GetActual() string {
	if x != nil {
		return x.Actual
	}
	return ""
}

func (x *JjrbInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *JjrbInfo) GetTm() string {
	if x != nil {
		return x.Tm
	}
	return ""
}

var File_shares_analy_proto protoreflect.FileDescriptor

var file_shares_analy_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x1a, 0x1a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43,
	0x6a, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x64, 0x61, 0x79, 0x22, 0x55, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x43,
	0x6a, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6a, 0x6a, 0x73, 0x6a, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x4a,
	0x6a, 0x72, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6a, 0x6a, 0x73, 0x6a, 0x12, 0x20, 0x0a,
	0x02, 0x73, 0x6a, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x2e, 0x4a, 0x6a, 0x72, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x02, 0x73, 0x6a, 0x22,
	0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x47, 0x6a, 0x7a, 0x62, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x6a, 0x7a, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x08, 0x47, 0x6a, 0x7a, 0x62, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x29, 0x0a,
	0x0f, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x64, 0x6a, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x78, 0x69, 0x6e, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x68, 0x65, 0x78, 0x69, 0x6e, 0x76, 0x22, 0x48, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x64, 0x6a, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x79, 0x48,
	0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x64, 0x61, 0x79, 0x48, 0x65,
	0x61, 0x74, 0x22, 0x34, 0x0a, 0x0c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x22, 0x23, 0x0a, 0x0d, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x73, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x22, 0x21, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x22, 0x62, 0x0a, 0x0a, 0x53, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x31, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x32, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x33, 0x12, 0x0e,
	0x0a, 0x02, 0x64, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x34, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x31, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x32, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x33, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x34, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x34, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x53, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x22, 0x90, 0x01, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x6e, 0x61, 0x6d, 0x65, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61,
	0x6d, 0x65, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x31, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x31, 0x22, 0x8b, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x03, 0x76, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x25, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x34, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6d, 0x22, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x22, 0xd2, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x42, 0x78, 0x4e, 0x78, 0x4b, 0x6c, 0x69,
	0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x31, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x31, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x79, 0x53, 0x74, 0x72, 0x31, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x79, 0x53, 0x74, 0x72, 0x31, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x73, 0x32, 0x18, 0x02, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x62, 0x73, 0x32, 0x12, 0x10,
	0x0a, 0x03, 0x62, 0x73, 0x33, 0x18, 0x03, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x62, 0x73, 0x33,
	0x12, 0x10, 0x0a, 0x03, 0x62, 0x73, 0x34, 0x18, 0x04, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x62,
	0x73, 0x34, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x73, 0x35, 0x18, 0x05, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x03, 0x62, 0x73, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x73, 0x36, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x03, 0x62, 0x73, 0x36, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x73, 0x37, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x01, 0x52, 0x03, 0x62, 0x73, 0x37, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x32, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x32,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x79, 0x53, 0x74, 0x72, 0x32, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x61, 0x79, 0x53, 0x74, 0x72, 0x32, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x78,
	0x32, 0x18, 0x16, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x6e, 0x78, 0x32, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x78, 0x33, 0x18, 0x17, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x6e, 0x78, 0x33, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x78, 0x34, 0x18, 0x18, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x6e, 0x78, 0x34,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x78, 0x35, 0x18, 0x19, 0x20, 0x03, 0x28, 0x01, 0x52, 0x03, 0x6e,
	0x78, 0x35, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x78, 0x36, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x01, 0x52,
	0x03, 0x6e, 0x78, 0x36, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x78, 0x37, 0x18, 0x1b, 0x20, 0x03, 0x28,
	0x01, 0x52, 0x03, 0x6e, 0x78, 0x37, 0x22, 0xae, 0x01, 0x0a, 0x08, 0x4a, 0x6a, 0x72, 0x62, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6d, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6d, 0x32, 0xe8, 0x02, 0x0a, 0x05, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x12, 0x3a, 0x0a, 0x09, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a,
	0x08, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x12, 0x13, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x57, 0x64, 0x6a, 0x12, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x64, 0x6a, 0x52, 0x65, 0x71, 0x1a,
	0x18, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x57, 0x64, 0x6a, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x47, 0x6a, 0x7a, 0x62, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47,
	0x6a, 0x7a, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x42, 0x78, 0x4e, 0x78, 0x4b, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1c, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x78, 0x4e, 0x78, 0x4b, 0x6c, 0x69,
	0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x43, 0x6a, 0x72, 0x6c, 0x12, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6a, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6a, 0x72, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shares_analy_proto_rawDescOnce sync.Once
	file_shares_analy_proto_rawDescData = file_shares_analy_proto_rawDesc
)

func file_shares_analy_proto_rawDescGZIP() []byte {
	file_shares_analy_proto_rawDescOnce.Do(func() {
		file_shares_analy_proto_rawDescData = protoimpl.X.CompressGZIP(file_shares_analy_proto_rawDescData)
	})
	return file_shares_analy_proto_rawDescData
}

var file_shares_analy_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_shares_analy_proto_goTypes = []interface{}{
	(*GetCjrlReq)(nil),           // 0: shares.GetCjrlReq
	(*GetCjrlResp)(nil),          // 1: shares.GetCjrlResp
	(*GetGjzbResp)(nil),          // 2: shares.GetGjzbResp
	(*GjzbInfo)(nil),             // 3: shares.GjzbInfo
	(*GetSampleWdjReq)(nil),      // 4: shares.GetSampleWdjReq
	(*GetSampleWdjResp)(nil),     // 5: shares.GetSampleWdjResp
	(*AnalyCodeReq)(nil),         // 6: shares.AnalyCodeReq
	(*AnalyCodeResp)(nil),        // 7: shares.AnalyCodeResp
	(*GetAllSpReq)(nil),          // 8: shares.GetAllSpReq
	(*SpShowInfo)(nil),           // 9: shares.SpShowInfo
	(*AllSpInfo)(nil),            // 10: shares.AllSpInfo
	(*BaseInfo)(nil),             // 11: shares.BaseInfo
	(*GetAllSpResp)(nil),         // 12: shares.GetAllSpResp
	(*GetArticInfo)(nil),         // 13: shares.GetArticInfo
	(*GetArticResp)(nil),         // 14: shares.GetArticResp
	(*GetBxNxKlineInfoResp)(nil), // 15: shares.GetBxNxKlineInfoResp
	(*JjrbInfo)(nil),             // 16: shares.JjrbInfo
	(*common.Empty)(nil),         // 17: common.Empty
}
var file_shares_analy_proto_depIdxs = []int32{
	16, // 0: shares.GetCjrlResp.jjsj:type_name -> shares.JjrbInfo
	16, // 1: shares.GetCjrlResp.sj:type_name -> shares.JjrbInfo
	3,  // 2: shares.GetGjzbResp.list:type_name -> shares.GjzbInfo
	9,  // 3: shares.AllSpInfo.list:type_name -> shares.SpShowInfo
	10, // 4: shares.GetAllSpResp.list:type_name -> shares.AllSpInfo
	11, // 5: shares.GetAllSpResp.baseInfo:type_name -> shares.BaseInfo
	13, // 6: shares.GetArticResp.list:type_name -> shares.GetArticInfo
	6,  // 7: shares.Analy.AnalyCode:input_type -> shares.AnalyCodeReq
	8,  // 8: shares.Analy.GetAllSp:input_type -> shares.GetAllSpReq
	4,  // 9: shares.Analy.GetSampleWdj:input_type -> shares.GetSampleWdjReq
	17, // 10: shares.Analy.GetGjzb:input_type -> common.Empty
	17, // 11: shares.Analy.GetBxNxKlineInfo:input_type -> common.Empty
	0,  // 12: shares.Analy.GetCjrl:input_type -> shares.GetCjrlReq
	7,  // 13: shares.Analy.AnalyCode:output_type -> shares.AnalyCodeResp
	12, // 14: shares.Analy.GetAllSp:output_type -> shares.GetAllSpResp
	5,  // 15: shares.Analy.GetSampleWdj:output_type -> shares.GetSampleWdjResp
	3,  // 16: shares.Analy.GetGjzb:output_type -> shares.GjzbInfo
	15, // 17: shares.Analy.GetBxNxKlineInfo:output_type -> shares.GetBxNxKlineInfoResp
	1,  // 18: shares.Analy.GetCjrl:output_type -> shares.GetCjrlResp
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_shares_analy_proto_init() }
func file_shares_analy_proto_init() {
	if File_shares_analy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shares_analy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCjrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCjrlResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGjzbResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GjzbInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSampleWdjReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSampleWdjResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpShowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllSpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBxNxKlineInfoResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JjrbInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shares_analy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shares_analy_proto_goTypes,
		DependencyIndexes: file_shares_analy_proto_depIdxs,
		MessageInfos:      file_shares_analy_proto_msgTypes,
	}.Build()
	File_shares_analy_proto = out.File
	file_shares_analy_proto_rawDesc = nil
	file_shares_analy_proto_goTypes = nil
	file_shares_analy_proto_depIdxs = nil
}
