// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.14.0
// source: shares/analy.proto

package shares

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	common "rpc/common"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GetGjzbResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GjzbInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetGjzbResp) Reset() {
	*x = GetGjzbResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGjzbResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGjzbResp) ProtoMessage() {}

func (x *GetGjzbResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGjzbResp.ProtoReflect.Descriptor instead.
func (*GetGjzbResp) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{0}
}

func (x *GetGjzbResp) GetList() []*GjzbInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type GjzbInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price     float64 `protobuf:"fixed64,1,opt,name=price,proto3" json:"price"`         // 当前指数
	Percent   float64 `protobuf:"fixed64,2,opt,name=percent,proto3" json:"percent"`     // 当前涨跌比例
	ChangeNum float64 `protobuf:"fixed64,3,opt,name=changeNum,proto3" json:"changeNum"` // 当前涨跌数
	Code      string  `protobuf:"bytes,4,opt,name=code,proto3" json:"code"`             // 当前代码
	Name      string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`             // 当前名字
	Color     string  `protobuf:"bytes,6,opt,name=color,proto3" json:"color"`           // 颜色
}

func (x *GjzbInfo) Reset() {
	*x = GjzbInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GjzbInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GjzbInfo) ProtoMessage() {}

func (x *GjzbInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GjzbInfo.ProtoReflect.Descriptor instead.
func (*GjzbInfo) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{1}
}

func (x *GjzbInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GjzbInfo) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *GjzbInfo) GetChangeNum() float64 {
	if x != nil {
		return x.ChangeNum
	}
	return 0
}

func (x *GjzbInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GjzbInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GjzbInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type GetSampleWdjReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSampleWdjReq) Reset() {
	*x = GetSampleWdjReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSampleWdjReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSampleWdjReq) ProtoMessage() {}

func (x *GetSampleWdjReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSampleWdjReq.ProtoReflect.Descriptor instead.
func (*GetSampleWdjReq) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{2}
}

type GetSampleWdjResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseHeat float64 `protobuf:"fixed64,1,opt,name=baseHeat,proto3" json:"baseHeat"` // 基础温度
	DayHeat  float64 `protobuf:"fixed64,2,opt,name=dayHeat,proto3" json:"dayHeat"`   // 当日温度
}

func (x *GetSampleWdjResp) Reset() {
	*x = GetSampleWdjResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSampleWdjResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSampleWdjResp) ProtoMessage() {}

func (x *GetSampleWdjResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSampleWdjResp.ProtoReflect.Descriptor instead.
func (*GetSampleWdjResp) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{3}
}

func (x *GetSampleWdjResp) GetBaseHeat() float64 {
	if x != nil {
		return x.BaseHeat
	}
	return 0
}

func (x *GetSampleWdjResp) GetDayHeat() float64 {
	if x != nil {
		return x.DayHeat
	}
	return 0
}

// AnalyCodeReq 请求
type AnalyCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
}

func (x *AnalyCodeReq) Reset() {
	*x = AnalyCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyCodeReq) ProtoMessage() {}

func (x *AnalyCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyCodeReq.ProtoReflect.Descriptor instead.
func (*AnalyCodeReq) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{4}
}

func (x *AnalyCodeReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

// AnalyCodeResp 返回
type AnalyCodeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msgs []string `protobuf:"bytes,1,rep,name=msgs,proto3" json:"msgs"` // 内容
}

func (x *AnalyCodeResp) Reset() {
	*x = AnalyCodeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnalyCodeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnalyCodeResp) ProtoMessage() {}

func (x *AnalyCodeResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnalyCodeResp.ProtoReflect.Descriptor instead.
func (*AnalyCodeResp) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{5}
}

func (x *AnalyCodeResp) GetMsgs() []string {
	if x != nil {
		return x.Msgs
	}
	return nil
}

// GetAllSpReq 请求
type GetAllSpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"` // 股票代码
}

func (x *GetAllSpReq) Reset() {
	*x = GetAllSpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSpReq) ProtoMessage() {}

func (x *GetAllSpReq) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSpReq.ProtoReflect.Descriptor instead.
func (*GetAllSpReq) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllSpReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SpShowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	D1    string `protobuf:"bytes,1,opt,name=d1,proto3" json:"d1"`       // 名字
	D2    string `protobuf:"bytes,2,opt,name=d2,proto3" json:"d2"`       // 发布日
	D3    string `protobuf:"bytes,3,opt,name=d3,proto3" json:"d3"`       // 数量
	D4    string `protobuf:"bytes,4,opt,name=d4,proto3" json:"d4"`       // 描述
	Color string `protobuf:"bytes,5,opt,name=color,proto3" json:"color"` // 颜色
}

func (x *SpShowInfo) Reset() {
	*x = SpShowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpShowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpShowInfo) ProtoMessage() {}

func (x *SpShowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpShowInfo.ProtoReflect.Descriptor instead.
func (*SpShowInfo) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{7}
}

func (x *SpShowInfo) GetD1() string {
	if x != nil {
		return x.D1
	}
	return ""
}

func (x *SpShowInfo) GetD2() string {
	if x != nil {
		return x.D2
	}
	return ""
}

func (x *SpShowInfo) GetD3() string {
	if x != nil {
		return x.D3
	}
	return ""
}

func (x *SpShowInfo) GetD4() string {
	if x != nil {
		return x.D4
	}
	return ""
}

func (x *SpShowInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type AllSpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string        `protobuf:"bytes,1,opt,name=title,proto3" json:"title"` // 标签
	D1    string        `protobuf:"bytes,2,opt,name=d1,proto3" json:"d1"`       // 名字
	D2    string        `protobuf:"bytes,3,opt,name=d2,proto3" json:"d2"`       // 发布日
	D3    string        `protobuf:"bytes,4,opt,name=d3,proto3" json:"d3"`       // 数量
	D4    string        `protobuf:"bytes,5,opt,name=d4,proto3" json:"d4"`       // 描述
	List  []*SpShowInfo `protobuf:"bytes,7,rep,name=list,proto3" json:"list"`   // 列表
}

func (x *AllSpInfo) Reset() {
	*x = AllSpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllSpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllSpInfo) ProtoMessage() {}

func (x *AllSpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllSpInfo.ProtoReflect.Descriptor instead.
func (*AllSpInfo) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{8}
}

func (x *AllSpInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AllSpInfo) GetD1() string {
	if x != nil {
		return x.D1
	}
	return ""
}

func (x *AllSpInfo) GetD2() string {
	if x != nil {
		return x.D2
	}
	return ""
}

func (x *AllSpInfo) GetD3() string {
	if x != nil {
		return x.D3
	}
	return ""
}

func (x *AllSpInfo) GetD4() string {
	if x != nil {
		return x.D4
	}
	return ""
}

func (x *AllSpInfo) GetList() []*SpShowInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// GetAllSpResp
type GetAllSpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*AllSpInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list"` // 列表
}

func (x *GetAllSpResp) Reset() {
	*x = GetAllSpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shares_analy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllSpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllSpResp) ProtoMessage() {}

func (x *GetAllSpResp) ProtoReflect() protoreflect.Message {
	mi := &file_shares_analy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllSpResp.ProtoReflect.Descriptor instead.
func (*GetAllSpResp) Descriptor() ([]byte, []int) {
	return file_shares_analy_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllSpResp) GetList() []*AllSpInfo {
	if x != nil {
		return x.List
	}
	return nil
}

var File_shares_analy_proto protoreflect.FileDescriptor

var file_shares_analy_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x1a, 0x1a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x47,
	0x6a, 0x7a, 0x62, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47,
	0x6a, 0x7a, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x96, 0x01,
	0x0a, 0x08, 0x47, 0x6a, 0x7a, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x57, 0x64, 0x6a, 0x52, 0x65, 0x71, 0x22, 0x48, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x64, 0x6a, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x48, 0x65, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x79,
	0x48, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x64, 0x61, 0x79, 0x48,
	0x65, 0x61, 0x74, 0x22, 0x22, 0x0a, 0x0c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x23, 0x0a, 0x0d, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x73, 0x67, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x73, 0x67, 0x73, 0x22, 0x21, 0x0a, 0x0b,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x62, 0x0a, 0x0a, 0x53, 0x70, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x31, 0x12, 0x0e, 0x0a,
	0x02, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x32, 0x12, 0x0e, 0x0a,
	0x02, 0x64, 0x33, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x33, 0x12, 0x0e, 0x0a,
	0x02, 0x64, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x34, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x32, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x33, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x34, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x64, 0x34, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x53,
	0x70, 0x53, 0x68, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x35, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x25, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x32, 0xef, 0x01, 0x0a, 0x05, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x12, 0x3a, 0x0a, 0x09, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x12, 0x13, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70,
	0x6c, 0x65, 0x57, 0x64, 0x6a, 0x12, 0x17, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x57, 0x64, 0x6a, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c,
	0x65, 0x57, 0x64, 0x6a, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x47, 0x6a, 0x7a, 0x62, 0x12, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x2e, 0x47, 0x6a,
	0x7a, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x72, 0x70, 0x63, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shares_analy_proto_rawDescOnce sync.Once
	file_shares_analy_proto_rawDescData = file_shares_analy_proto_rawDesc
)

func file_shares_analy_proto_rawDescGZIP() []byte {
	file_shares_analy_proto_rawDescOnce.Do(func() {
		file_shares_analy_proto_rawDescData = protoimpl.X.CompressGZIP(file_shares_analy_proto_rawDescData)
	})
	return file_shares_analy_proto_rawDescData
}

var file_shares_analy_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_shares_analy_proto_goTypes = []interface{}{
	(*GetGjzbResp)(nil),      // 0: shares.GetGjzbResp
	(*GjzbInfo)(nil),         // 1: shares.GjzbInfo
	(*GetSampleWdjReq)(nil),  // 2: shares.GetSampleWdjReq
	(*GetSampleWdjResp)(nil), // 3: shares.GetSampleWdjResp
	(*AnalyCodeReq)(nil),     // 4: shares.AnalyCodeReq
	(*AnalyCodeResp)(nil),    // 5: shares.AnalyCodeResp
	(*GetAllSpReq)(nil),      // 6: shares.GetAllSpReq
	(*SpShowInfo)(nil),       // 7: shares.SpShowInfo
	(*AllSpInfo)(nil),        // 8: shares.AllSpInfo
	(*GetAllSpResp)(nil),     // 9: shares.GetAllSpResp
	(*common.Empty)(nil),     // 10: common.Empty
}
var file_shares_analy_proto_depIdxs = []int32{
	1,  // 0: shares.GetGjzbResp.list:type_name -> shares.GjzbInfo
	7,  // 1: shares.AllSpInfo.list:type_name -> shares.SpShowInfo
	8,  // 2: shares.GetAllSpResp.list:type_name -> shares.AllSpInfo
	4,  // 3: shares.Analy.AnalyCode:input_type -> shares.AnalyCodeReq
	6,  // 4: shares.Analy.GetAllSp:input_type -> shares.GetAllSpReq
	2,  // 5: shares.Analy.GetSampleWdj:input_type -> shares.GetSampleWdjReq
	10, // 6: shares.Analy.GetGjzb:input_type -> common.Empty
	5,  // 7: shares.Analy.AnalyCode:output_type -> shares.AnalyCodeResp
	9,  // 8: shares.Analy.GetAllSp:output_type -> shares.GetAllSpResp
	3,  // 9: shares.Analy.GetSampleWdj:output_type -> shares.GetSampleWdjResp
	1,  // 10: shares.Analy.GetGjzb:output_type -> shares.GjzbInfo
	7,  // [7:11] is the sub-list for method output_type
	3,  // [3:7] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_shares_analy_proto_init() }
func file_shares_analy_proto_init() {
	if File_shares_analy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shares_analy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGjzbResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GjzbInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSampleWdjReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSampleWdjResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnalyCodeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpShowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllSpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shares_analy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllSpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shares_analy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shares_analy_proto_goTypes,
		DependencyIndexes: file_shares_analy_proto_depIdxs,
		MessageInfos:      file_shares_analy_proto_msgTypes,
	}.Build()
	File_shares_analy_proto = out.File
	file_shares_analy_proto_rawDesc = nil
	file_shares_analy_proto_goTypes = nil
	file_shares_analy_proto_depIdxs = nil
}
