syntax = "proto3"; // 指定proto版本

package shares;     // 指定包名
import "common/common_public.proto";

option go_package = "rpc/shares"; // 指定路径


// 微信相关服务
service Flow {
	// UpdateFlow 创建/更新工作流
	rpc UpsetFlow(UpdateFlowReq) returns (FlowInfo) {}
	// GetFlow 获取工作流
	rpc GetFlow(GetFlowReq) returns (GetFlowResp) {}
	// DeleteFlow 删除工作流
	rpc DeleteFlow(GetFlowReq) returns (common.Empty) {}
}


message FlowInfo{
	string flowId = 1; // 为空创建
	string title = 2;// 标题（不为空的时候修改）
	string bgColor = 3;// 背景色
	string doc	 = 4;// 描述（不为空的时候修改）
	string logo = 5; // 图标（不为空的时候修改）
	string data = 6;// 数据 （不为空的时候修改）
}


message UpdateFlowReq {
	string flowId = 1; // 为空创建
	string title = 2;// 标题（不为空的时候修改）
	string doc	 = 3;// 描述（不为空的时候修改）
	string logo = 4; // 图标（不为空的时候修改）
	string bgColor = 5;// 背景色
	string data = 6;// 数据 （不为空的时候修改）
}

message GetFlowReq {
	string flowId = 1; // 为空获取所有
}

message GetFlowResp{
	repeated FlowInfo list = 1;
}

message ChatFlowReq {
	string flowId = 1;// 工作流id
	string nodeId = 2;// 节点id(不为空视为测试目标节点)
	string isChange = 3;// 是否变更节点
	// string data = 3;// 数据 （为空数据库找）
}

// message GetTagsResp{
// 	repeated string list = 1;// 提示列表
// }

message GetPromptReq {
	string tag = 1;// 标签(技能：skill，提示：tip)
}

message GetPromptResp {
	repeated PromptInfo list = 1;// 提示列表
	repeated string tips = 2;// 提示列表
}

message PromptInfo{
	string key = 1;
	string name = 2;
	string value = 3;
	string icon = 4;
	string doc = 5;
}